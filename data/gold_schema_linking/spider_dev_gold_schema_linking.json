[
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "singer",
        "columns": []
      }
    ],
    "gold_sql": "SELECT count(*) FROM singer\tconcert_singer",
    "remarks": "",
    "id": 0,
    "question": "How many singers do we have?",
    "involved_table_count": 1,
    "involved_column_count": 0
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "singer",
        "columns": []
      }
    ],
    "gold_sql": "SELECT count(*) FROM singer\tconcert_singer",
    "remarks": "",
    "id": 1,
    "question": "What is the total number of singers?",
    "involved_table_count": 1,
    "involved_column_count": 0
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "singer",
        "columns": [
          "name",
          "country",
          "age"
        ]
      }
    ],
    "gold_sql": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC\tconcert_singer",
    "remarks": "",
    "id": 2,
    "question": "Show name, country, age for all singers ordered by age from the oldest to the youngest.",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "singer",
        "columns": [
          "name",
          "country",
          "age"
        ]
      }
    ],
    "gold_sql": "SELECT name ,  country ,  age FROM singer ORDER BY age DESC\tconcert_singer",
    "remarks": "",
    "id": 3,
    "question": "What are the names, countries, and ages for every singer in descending order of age?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "singer",
        "columns": [
          "country",
          "age"
        ]
      }
    ],
    "gold_sql": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'\tconcert_singer",
    "remarks": "",
    "id": 4,
    "question": "What is the average, minimum, and maximum age of all singers from France?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "singer",
        "columns": [
          "country",
          "age"
        ]
      }
    ],
    "gold_sql": "SELECT avg(age) ,  min(age) ,  max(age) FROM singer WHERE country  =  'France'\tconcert_singer",
    "remarks": "",
    "id": 5,
    "question": "What is the average, minimum, and maximum age for all French singers?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "singer",
        "columns": [
          "song_release_year",
          "song_name",
          "age"
        ]
      }
    ],
    "gold_sql": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1\tconcert_singer",
    "remarks": "",
    "id": 6,
    "question": "Show the name and the release year of the song by the youngest singer.",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "singer",
        "columns": [
          "song_release_year",
          "song_name",
          "age"
        ]
      }
    ],
    "gold_sql": "SELECT song_name ,  song_release_year FROM singer ORDER BY age LIMIT 1\tconcert_singer",
    "remarks": "",
    "id": 7,
    "question": "What are the names and release years for all the songs of the youngest singer?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "singer",
        "columns": [
          "country",
          "age"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT country FROM singer WHERE age  >  20\tconcert_singer",
    "remarks": "",
    "id": 8,
    "question": "What are all distinct countries where singers above age 20 are from?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "singer",
        "columns": [
          "country",
          "age"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT country FROM singer WHERE age  >  20\tconcert_singer",
    "remarks": "",
    "id": 9,
    "question": "What are  the different countries with singers above age 20?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "singer",
        "columns": [
          "country"
        ]
      }
    ],
    "gold_sql": "SELECT country ,  count(*) FROM singer GROUP BY country\tconcert_singer",
    "remarks": "",
    "id": 10,
    "question": "Show all countries and the number of singers in each country.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "singer",
        "columns": [
          "country"
        ]
      }
    ],
    "gold_sql": "SELECT country ,  count(*) FROM singer GROUP BY country\tconcert_singer",
    "remarks": "",
    "id": 11,
    "question": "How many singers are from each country?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "singer",
        "columns": [
          "song_name",
          "age"
        ]
      }
    ],
    "gold_sql": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)\tconcert_singer",
    "remarks": "",
    "id": 12,
    "question": "List all song names by singers above the average age.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "singer",
        "columns": [
          "song_name",
          "age"
        ]
      }
    ],
    "gold_sql": "SELECT song_name FROM singer WHERE age  >  (SELECT avg(age) FROM singer)\tconcert_singer",
    "remarks": "",
    "id": 13,
    "question": "What are all the song names by singers who are older than average?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "stadium",
        "columns": [
          "location",
          "capacity",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000\tconcert_singer",
    "remarks": "",
    "id": 14,
    "question": "Show location and name for all stadiums with a capacity between 5000 and 10000.",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "stadium",
        "columns": [
          "location",
          "capacity",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT LOCATION ,  name FROM stadium WHERE capacity BETWEEN 5000 AND 10000\tconcert_singer",
    "remarks": "",
    "id": 15,
    "question": "What are the locations and names of all stations with capacity between 5000 and 10000?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "stadium",
        "columns": [
          "capacity"
        ]
      }
    ],
    "gold_sql": "SELECT avg(capacity) ,  max(capacity) FROM stadium\tconcert_singer",
    "remarks": "",
    "id": 16,
    "question": "What is the average and the maximum capacity of all stadiums?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "stadium",
        "columns": [
          "capacity"
        ]
      }
    ],
    "gold_sql": "SELECT avg(capacity) ,  max(capacity) FROM stadium\tconcert_singer",
    "remarks": "",
    "id": 17,
    "question": "What is the average and maximum capacities for all stations?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "stadium",
        "columns": [
          "capacity",
          "name",
          "average"
        ]
      }
    ],
    "gold_sql": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1\tconcert_singer",
    "remarks": "",
    "id": 18,
    "question": "What is the name and capacity for the stadium with highest average attendance?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "stadium",
        "columns": [
          "capacity",
          "name",
          "average"
        ]
      }
    ],
    "gold_sql": "SELECT name ,  capacity FROM stadium ORDER BY average DESC LIMIT 1\tconcert_singer",
    "remarks": "",
    "id": 19,
    "question": "What is the name and capacity for the stadium with the highest average attendance?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "concert",
        "columns": [
          "year"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015\tconcert_singer",
    "remarks": "",
    "id": 20,
    "question": "How many concerts are there in year 2014 or 2015?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "concert",
        "columns": [
          "year"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM concert WHERE YEAR  =  2014 OR YEAR  =  2015\tconcert_singer",
    "remarks": "",
    "id": 21,
    "question": "How many concerts occurred in 2014 or 2015?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "concert",
        "columns": [
          "stadium_id"
        ]
      },
      {
        "table": "stadium",
        "columns": [
          "stadium_id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id\tconcert_singer",
    "remarks": "",
    "id": 22,
    "question": "Show the stadium name and the number of concerts in each stadium.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "concert",
        "columns": [
          "stadium_id"
        ]
      },
      {
        "table": "stadium",
        "columns": [
          "stadium_id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT T2.name ,  count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id GROUP BY T1.stadium_id\tconcert_singer",
    "remarks": "",
    "id": 23,
    "question": "For each stadium, how many concerts play there?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "concert",
        "columns": [
          "stadium_id",
          "year"
        ]
      },
      {
        "table": "stadium",
        "columns": [
          "stadium_id",
          "capacity",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1\tconcert_singer",
    "remarks": "",
    "id": 24,
    "question": "Show the stadium name and capacity with most number of concerts in year 2014 or after.",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "concert",
        "columns": [
          "stadium_id",
          "year"
        ]
      },
      {
        "table": "stadium",
        "columns": [
          "stadium_id",
          "capacity",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT T2.name ,  T2.capacity FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  >=  2014 GROUP BY T2.stadium_id ORDER BY count(*) DESC LIMIT 1\tconcert_singer",
    "remarks": "",
    "id": 25,
    "question": "What is the name and capacity of the stadium  with the most concerts after 2013?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "concert",
        "columns": [
          "year"
        ]
      }
    ],
    "gold_sql": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1\tconcert_singer",
    "remarks": "",
    "id": 26,
    "question": "Which year has most number of concerts?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "concert",
        "columns": [
          "year"
        ]
      }
    ],
    "gold_sql": "SELECT YEAR FROM concert GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1\tconcert_singer",
    "remarks": "",
    "id": 27,
    "question": "What is the year that had the most concerts?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "concert",
        "columns": [
          "stadium_id"
        ]
      },
      {
        "table": "stadium",
        "columns": [
          "stadium_id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)\tconcert_singer",
    "remarks": "",
    "id": 28,
    "question": "Show the stadium names without any concert.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "concert",
        "columns": [
          "stadium_id"
        ]
      },
      {
        "table": "stadium",
        "columns": [
          "stadium_id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT name FROM stadium WHERE stadium_id NOT IN (SELECT stadium_id FROM concert)\tconcert_singer",
    "remarks": "",
    "id": 29,
    "question": "What are the names of the stadiums without any concerts?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "singer",
        "columns": [
          "country",
          "age"
        ]
      }
    ],
    "gold_sql": "SELECT country FROM singer WHERE age  >  40 INTERSECT SELECT country FROM singer WHERE age  <  30\tconcert_singer",
    "remarks": "",
    "id": 30,
    "question": "Show countries where a singer above age 40 and a singer below 30 are from.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "stadium",
        "columns": [
          "stadium_id",
          "name"
        ]
      },
      {
        "table": "concert",
        "columns": [
          "stadium_id",
          "year"
        ]
      }
    ],
    "gold_sql": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014\tconcert_singer",
    "remarks": "",
    "id": 31,
    "question": "Show names for all stadiums except for stadiums having a concert in year 2014.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "stadium",
        "columns": [
          "stadium_id",
          "name"
        ]
      },
      {
        "table": "concert",
        "columns": [
          "stadium_id",
          "year"
        ]
      }
    ],
    "gold_sql": "SELECT name FROM stadium EXCEPT SELECT T2.name FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.year  =  2014\tconcert_singer",
    "remarks": "",
    "id": 32,
    "question": "What are the names of all stadiums that did not have a concert in 2014?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "singer_in_concert",
        "columns": [
          "concert_id"
        ]
      },
      {
        "table": "concert",
        "columns": [
          "concert_id",
          "concert_name",
          "theme"
        ]
      }
    ],
    "gold_sql": "SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id\tconcert_singer",
    "remarks": "",
    "id": 33,
    "question": "Show the name and theme for all concerts and the number of singers in each concert.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "singer_in_concert",
        "columns": [
          "concert_id"
        ]
      },
      {
        "table": "concert",
        "columns": [
          "concert_id",
          "concert_name",
          "theme"
        ]
      }
    ],
    "gold_sql": "SELECT T2.concert_name ,  T2.theme ,  count(*) FROM singer_in_concert AS T1 JOIN concert AS T2 ON T1.concert_id  =  T2.concert_id GROUP BY T2.concert_id\tconcert_singer",
    "remarks": "",
    "id": 34,
    "question": "What are the names, themes, and number of singers for each and every concert?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "singer_in_concert",
        "columns": [
          "singer_id"
        ]
      },
      {
        "table": "singer",
        "columns": [
          "name",
          "singer_id"
        ]
      }
    ],
    "gold_sql": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id\tconcert_singer",
    "remarks": "",
    "id": 35,
    "question": "List singer names and number of concerts for each singer.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "singer_in_concert",
        "columns": [
          "singer_id"
        ]
      },
      {
        "table": "singer",
        "columns": [
          "name",
          "singer_id"
        ]
      }
    ],
    "gold_sql": "SELECT T2.name ,  count(*) FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id GROUP BY T2.singer_id\tconcert_singer",
    "remarks": "",
    "id": 36,
    "question": "What are the names of the singers and number of concerts for each person?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "singer_in_concert",
        "columns": [
          "concert_id",
          "singer_id"
        ]
      },
      {
        "table": "singer",
        "columns": [
          "name",
          "singer_id"
        ]
      },
      {
        "table": "concert",
        "columns": [
          "year",
          "concert_id"
        ]
      }
    ],
    "gold_sql": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014\tconcert_singer",
    "remarks": "",
    "id": 37,
    "question": "List all singer names in concerts in year 2014.",
    "involved_table_count": 3,
    "involved_column_count": 4
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "singer_in_concert",
        "columns": [
          "concert_id",
          "singer_id"
        ]
      },
      {
        "table": "singer",
        "columns": [
          "name",
          "singer_id"
        ]
      },
      {
        "table": "concert",
        "columns": [
          "year",
          "concert_id"
        ]
      }
    ],
    "gold_sql": "SELECT T2.name FROM singer_in_concert AS T1 JOIN singer AS T2 ON T1.singer_id  =  T2.singer_id JOIN concert AS T3 ON T1.concert_id  =  T3.concert_id WHERE T3.year  =  2014\tconcert_singer",
    "remarks": "",
    "id": 38,
    "question": "What are the names of the singers who performed in a concert in 2014?",
    "involved_table_count": 3,
    "involved_column_count": 4
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "singer",
        "columns": [
          "name",
          "country",
          "song_name"
        ]
      }
    ],
    "gold_sql": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'\tconcert_singer",
    "remarks": "",
    "id": 39,
    "question": "what is the name and nation of the singer who have a song having 'Hey' in its name?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "singer",
        "columns": [
          "name",
          "country",
          "song_name"
        ]
      }
    ],
    "gold_sql": "SELECT name ,  country FROM singer WHERE song_name LIKE '%Hey%'\tconcert_singer",
    "remarks": "",
    "id": 40,
    "question": "What is the name and country of origin of every singer who has a song with the word 'Hey' in its title?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "concert",
        "columns": [
          "stadium_id",
          "year"
        ]
      },
      {
        "table": "stadium",
        "columns": [
          "stadium_id",
          "location",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015\tconcert_singer",
    "remarks": "",
    "id": 41,
    "question": "Find the name and location of the stadiums which some concerts happened in the years of both 2014 and 2015.",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "concert",
        "columns": [
          "stadium_id",
          "year"
        ]
      },
      {
        "table": "stadium",
        "columns": [
          "stadium_id",
          "location",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2014 INTERSECT SELECT T2.name ,  T2.location FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id WHERE T1.Year  =  2015\tconcert_singer",
    "remarks": "",
    "id": 42,
    "question": "What are the names and locations of the stadiums that had concerts that occurred in both 2014 and 2015?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "concert",
        "columns": [
          "stadium_id"
        ]
      },
      {
        "table": "stadium",
        "columns": [
          "stadium_id",
          "capacity"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id ORDER BY T2.Capacity DESC LIMIT 1\tconcert_singer",
    "remarks": "",
    "id": 43,
    "question": "Find the number of concerts happened in the stadium with the highest capacity.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "concert_singer",
    "tables": [
      {
        "table": "concert",
        "columns": [
          "stadium_id"
        ]
      },
      {
        "table": "stadium",
        "columns": [
          "stadium_id",
          "capacity"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM concert AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.stadium_id ORDER BY T2.Capacity DESC LIMIT 1\tconcert_singer",
    "remarks": "",
    "id": 44,
    "question": "What are the number of concerts that occurred in the stadium with the largest capacity?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "pets_1",
    "tables": [
      {
        "table": "pets",
        "columns": [
          "weight"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM pets WHERE weight  >  10\tpets_1",
    "remarks": "",
    "id": 45,
    "question": "Find the number of pets whose weight is heavier than 10.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "pets_1",
    "tables": [
      {
        "table": "pets",
        "columns": [
          "weight"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM pets WHERE weight  >  10\tpets_1",
    "remarks": "",
    "id": 46,
    "question": "How many pets have a greater weight than 10?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "pets_1",
    "tables": [
      {
        "table": "pets",
        "columns": [
          "weight",
          "pet_age"
        ]
      }
    ],
    "gold_sql": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1\tpets_1",
    "remarks": "",
    "id": 47,
    "question": "Find the weight of the youngest dog.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "pets_1",
    "tables": [
      {
        "table": "pets",
        "columns": [
          "weight",
          "pet_age"
        ]
      }
    ],
    "gold_sql": "SELECT weight FROM pets ORDER BY pet_age LIMIT 1\tpets_1",
    "remarks": "",
    "id": 48,
    "question": "How much does the youngest dog weigh?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "pets_1",
    "tables": [
      {
        "table": "pets",
        "columns": [
          "weight",
          "pettype"
        ]
      }
    ],
    "gold_sql": "SELECT max(weight) ,  petType FROM pets GROUP BY petType\tpets_1",
    "remarks": "",
    "id": 49,
    "question": "Find the maximum weight for each type of pet. List the maximum weight and pet type.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "pets_1",
    "tables": [
      {
        "table": "pets",
        "columns": [
          "weight",
          "pettype"
        ]
      }
    ],
    "gold_sql": "SELECT max(weight) ,  petType FROM pets GROUP BY petType\tpets_1",
    "remarks": "",
    "id": 50,
    "question": "List the maximum weight and type for each type of pet.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "pets_1",
    "tables": [
      {
        "table": "student",
        "columns": [
          "age",
          "stuid"
        ]
      },
      {
        "table": "has_pet",
        "columns": [
          "stuid"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20\tpets_1",
    "remarks": "",
    "id": 51,
    "question": "Find number of pets owned by students who are older than 20.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "pets_1",
    "tables": [
      {
        "table": "student",
        "columns": [
          "age",
          "stuid"
        ]
      },
      {
        "table": "has_pet",
        "columns": [
          "stuid"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.age  >  20\tpets_1",
    "remarks": "",
    "id": 52,
    "question": "How many pets are owned by students that have an age greater than 20?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "pets_1",
    "tables": [
      {
        "table": "student",
        "columns": [
          "sex",
          "stuid"
        ]
      },
      {
        "table": "has_pet",
        "columns": [
          "petid",
          "stuid"
        ]
      },
      {
        "table": "pets",
        "columns": [
          "pettype",
          "petid"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'\tpets_1",
    "remarks": "",
    "id": 53,
    "question": "Find the number of dog pets that are raised by female students (with sex F).",
    "involved_table_count": 3,
    "involved_column_count": 4
  },
  {
    "database": "pets_1",
    "tables": [
      {
        "table": "student",
        "columns": [
          "sex",
          "stuid"
        ]
      },
      {
        "table": "has_pet",
        "columns": [
          "petid",
          "stuid"
        ]
      },
      {
        "table": "pets",
        "columns": [
          "pettype",
          "petid"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T2.petid  =  T3.petid WHERE T1.sex  =  'F' AND T3.pettype  =  'dog'\tpets_1",
    "remarks": "",
    "id": 54,
    "question": "How many dog pets are raised by female students?",
    "involved_table_count": 3,
    "involved_column_count": 4
  },
  {
    "database": "pets_1",
    "tables": [
      {
        "table": "pets",
        "columns": [
          "pettype"
        ]
      }
    ],
    "gold_sql": "SELECT count(DISTINCT pettype) FROM pets\tpets_1",
    "remarks": "",
    "id": 55,
    "question": "Find the number of distinct type of pets.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "pets_1",
    "tables": [
      {
        "table": "pets",
        "columns": [
          "pettype"
        ]
      }
    ],
    "gold_sql": "SELECT count(DISTINCT pettype) FROM pets\tpets_1",
    "remarks": "",
    "id": 56,
    "question": "How many different types of pet are there?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "pets_1",
    "tables": [
      {
        "table": "student",
        "columns": [
          "fname",
          "stuid"
        ]
      },
      {
        "table": "has_pet",
        "columns": [
          "petid",
          "stuid"
        ]
      },
      {
        "table": "pets",
        "columns": [
          "pettype",
          "petid"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'\tpets_1",
    "remarks": "",
    "id": 57,
    "question": "Find the first name of students who have cat or dog pet.",
    "involved_table_count": 3,
    "involved_column_count": 4
  },
  {
    "database": "pets_1",
    "tables": [
      {
        "table": "student",
        "columns": [
          "fname",
          "stuid"
        ]
      },
      {
        "table": "has_pet",
        "columns": [
          "petid",
          "stuid"
        ]
      },
      {
        "table": "pets",
        "columns": [
          "pettype",
          "petid"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' OR T3.pettype  =  'dog'\tpets_1",
    "remarks": "",
    "id": 58,
    "question": "What are the first names of every student who has a cat or dog as a pet?",
    "involved_table_count": 3,
    "involved_column_count": 4
  },
  {
    "database": "pets_1",
    "tables": [
      {
        "table": "student",
        "columns": [
          "fname",
          "stuid"
        ]
      },
      {
        "table": "has_pet",
        "columns": [
          "petid",
          "stuid"
        ]
      },
      {
        "table": "pets",
        "columns": [
          "pettype",
          "petid"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'\tpets_1",
    "remarks": "",
    "id": 59,
    "question": "Find the name of students who have both cat and dog pets.",
    "involved_table_count": 3,
    "involved_column_count": 4
  },
  {
    "database": "pets_1",
    "tables": [
      {
        "table": "student",
        "columns": [
          "fname",
          "stuid"
        ]
      },
      {
        "table": "has_pet",
        "columns": [
          "petid",
          "stuid"
        ]
      },
      {
        "table": "pets",
        "columns": [
          "pettype",
          "petid"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat' INTERSECT SELECT T1.Fname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog'\tpets_1",
    "remarks": "",
    "id": 60,
    "question": "What are the students' first names who have both cats and dogs as pets?",
    "involved_table_count": 3,
    "involved_column_count": 4
  },
  {
    "database": "pets_1",
    "tables": [
      {
        "table": "student",
        "columns": [
          "major",
          "age",
          "stuid"
        ]
      },
      {
        "table": "has_pet",
        "columns": [
          "petid",
          "stuid"
        ]
      },
      {
        "table": "pets",
        "columns": [
          "pettype",
          "petid"
        ]
      }
    ],
    "gold_sql": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')\tpets_1",
    "remarks": "",
    "id": 61,
    "question": "Find the major and age of students who do not have a cat pet.",
    "involved_table_count": 3,
    "involved_column_count": 5
  },
  {
    "database": "pets_1",
    "tables": [
      {
        "table": "student",
        "columns": [
          "major",
          "age",
          "stuid"
        ]
      },
      {
        "table": "has_pet",
        "columns": [
          "petid",
          "stuid"
        ]
      },
      {
        "table": "pets",
        "columns": [
          "pettype",
          "petid"
        ]
      }
    ],
    "gold_sql": "SELECT major ,  age FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')\tpets_1",
    "remarks": "",
    "id": 62,
    "question": "What major is every student who does not own a cat as a pet, and also how old are they?",
    "involved_table_count": 3,
    "involved_column_count": 5
  },
  {
    "database": "pets_1",
    "tables": [
      {
        "table": "student",
        "columns": [
          "stuid"
        ]
      },
      {
        "table": "has_pet",
        "columns": [
          "petid",
          "stuid"
        ]
      },
      {
        "table": "pets",
        "columns": [
          "pettype",
          "petid"
        ]
      }
    ],
    "gold_sql": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'\tpets_1",
    "remarks": "",
    "id": 63,
    "question": "Find the id of students who do not have a cat pet.",
    "involved_table_count": 3,
    "involved_column_count": 3
  },
  {
    "database": "pets_1",
    "tables": [
      {
        "table": "student",
        "columns": [
          "stuid"
        ]
      },
      {
        "table": "has_pet",
        "columns": [
          "petid",
          "stuid"
        ]
      },
      {
        "table": "pets",
        "columns": [
          "pettype",
          "petid"
        ]
      }
    ],
    "gold_sql": "SELECT stuid FROM student EXCEPT SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat'\tpets_1",
    "remarks": "",
    "id": 64,
    "question": "What are the ids of the students who do not own cats as pets?",
    "involved_table_count": 3,
    "involved_column_count": 3
  },
  {
    "database": "pets_1",
    "tables": [
      {
        "table": "student",
        "columns": [
          "fname",
          "age",
          "stuid"
        ]
      },
      {
        "table": "has_pet",
        "columns": [
          "petid",
          "stuid"
        ]
      },
      {
        "table": "pets",
        "columns": [
          "pettype",
          "petid"
        ]
      }
    ],
    "gold_sql": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')\tpets_1",
    "remarks": "",
    "id": 65,
    "question": "Find the first name and age of students who have a dog but do not have a cat as a pet.",
    "involved_table_count": 3,
    "involved_column_count": 5
  },
  {
    "database": "pets_1",
    "tables": [
      {
        "table": "student",
        "columns": [
          "fname",
          "age",
          "stuid"
        ]
      },
      {
        "table": "has_pet",
        "columns": [
          "petid",
          "stuid"
        ]
      },
      {
        "table": "pets",
        "columns": [
          "pettype",
          "petid"
        ]
      }
    ],
    "gold_sql": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'dog' AND T1.stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pettype  =  'cat')\tpets_1",
    "remarks": "",
    "id": 66,
    "question": "What is the first name of every student who has a dog but does not have a cat?",
    "involved_table_count": 3,
    "involved_column_count": 5
  },
  {
    "database": "pets_1",
    "tables": [
      {
        "table": "pets",
        "columns": [
          "weight",
          "pet_age",
          "pettype"
        ]
      }
    ],
    "gold_sql": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1\tpets_1",
    "remarks": "",
    "id": 67,
    "question": "Find the type and weight of the youngest pet.",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "pets_1",
    "tables": [
      {
        "table": "pets",
        "columns": [
          "weight",
          "pet_age",
          "pettype"
        ]
      }
    ],
    "gold_sql": "SELECT pettype ,  weight FROM pets ORDER BY pet_age LIMIT 1\tpets_1",
    "remarks": "",
    "id": 68,
    "question": "What type of pet is the youngest animal, and how much does it weigh?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "pets_1",
    "tables": [
      {
        "table": "pets",
        "columns": [
          "weight",
          "pet_age",
          "petid"
        ]
      }
    ],
    "gold_sql": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1\tpets_1",
    "remarks": "",
    "id": 69,
    "question": "Find the id and weight of all pets whose age is older than 1.",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "pets_1",
    "tables": [
      {
        "table": "pets",
        "columns": [
          "weight",
          "pet_age",
          "petid"
        ]
      }
    ],
    "gold_sql": "SELECT petid ,  weight FROM pets WHERE pet_age  >  1\tpets_1",
    "remarks": "",
    "id": 70,
    "question": "What is the id and weight of every pet who is older than 1?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "pets_1",
    "tables": [
      {
        "table": "pets",
        "columns": [
          "pet_age",
          "pettype"
        ]
      }
    ],
    "gold_sql": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype\tpets_1",
    "remarks": "",
    "id": 71,
    "question": "Find the average and maximum age for each type of pet.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "pets_1",
    "tables": [
      {
        "table": "pets",
        "columns": [
          "pet_age",
          "pettype"
        ]
      }
    ],
    "gold_sql": "SELECT avg(pet_age) ,  max(pet_age) ,  pettype FROM pets GROUP BY pettype\tpets_1",
    "remarks": "",
    "id": 72,
    "question": "What is the average and maximum age for each pet type?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "pets_1",
    "tables": [
      {
        "table": "pets",
        "columns": [
          "weight",
          "pettype"
        ]
      }
    ],
    "gold_sql": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype\tpets_1",
    "remarks": "",
    "id": 73,
    "question": "Find the average weight for each pet type.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "pets_1",
    "tables": [
      {
        "table": "pets",
        "columns": [
          "weight",
          "pettype"
        ]
      }
    ],
    "gold_sql": "SELECT avg(weight) ,  pettype FROM pets GROUP BY pettype\tpets_1",
    "remarks": "",
    "id": 74,
    "question": "What is the average weight for each type of pet?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "pets_1",
    "tables": [
      {
        "table": "student",
        "columns": [
          "fname",
          "age",
          "stuid"
        ]
      },
      {
        "table": "has_pet",
        "columns": [
          "stuid"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid\tpets_1",
    "remarks": "",
    "id": 75,
    "question": "Find the first name and age of students who have a pet.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "pets_1",
    "tables": [
      {
        "table": "student",
        "columns": [
          "fname",
          "age",
          "stuid"
        ]
      },
      {
        "table": "has_pet",
        "columns": [
          "stuid"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT T1.fname ,  T1.age FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid\tpets_1",
    "remarks": "",
    "id": 76,
    "question": "What are the different first names and ages of the students who do have pets?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "pets_1",
    "tables": [
      {
        "table": "student",
        "columns": [
          "lname",
          "stuid"
        ]
      },
      {
        "table": "has_pet",
        "columns": [
          "stuid",
          "petid"
        ]
      }
    ],
    "gold_sql": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'\tpets_1",
    "remarks": "",
    "id": 77,
    "question": "Find the id of the pet owned by student whose last name is \u2018Smith\u2019.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "pets_1",
    "tables": [
      {
        "table": "student",
        "columns": [
          "lname",
          "stuid"
        ]
      },
      {
        "table": "has_pet",
        "columns": [
          "stuid",
          "petid"
        ]
      }
    ],
    "gold_sql": "SELECT T2.petid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid WHERE T1.Lname  =  'Smith'\tpets_1",
    "remarks": "",
    "id": 78,
    "question": "What is the id of the pet owned by the student whose last name is 'Smith'?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "pets_1",
    "tables": [
      {
        "table": "student",
        "columns": [
          "stuid"
        ]
      },
      {
        "table": "has_pet",
        "columns": [
          "stuid"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid\tpets_1",
    "remarks": "",
    "id": 79,
    "question": "Find the number of pets for each student who has any pet and student id.",
    "involved_table_count": 2,
    "involved_column_count": 1
  },
  {
    "database": "pets_1",
    "tables": [
      {
        "table": "student",
        "columns": [
          "stuid"
        ]
      },
      {
        "table": "has_pet",
        "columns": [
          "stuid"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) ,  T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid\tpets_1",
    "remarks": "",
    "id": 80,
    "question": "For students who have pets, how many pets does each student have?",
    "involved_table_count": 2,
    "involved_column_count": 1
  },
  {
    "database": "pets_1",
    "tables": [
      {
        "table": "student",
        "columns": [
          "sex",
          "fname",
          "stuid"
        ]
      },
      {
        "table": "has_pet",
        "columns": [
          "stuid"
        ]
      }
    ],
    "gold_sql": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1\tpets_1",
    "remarks": "",
    "id": 81,
    "question": "Find the first name and gender of student who have more than one pet.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "pets_1",
    "tables": [
      {
        "table": "student",
        "columns": [
          "sex",
          "fname",
          "stuid"
        ]
      },
      {
        "table": "has_pet",
        "columns": [
          "stuid"
        ]
      }
    ],
    "gold_sql": "SELECT T1.fname ,  T1.sex FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid GROUP BY T1.stuid HAVING count(*)  >  1\tpets_1",
    "remarks": "",
    "id": 82,
    "question": "What is the first name and gender of the all the students who have more than one pet?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "pets_1",
    "tables": [
      {
        "table": "student",
        "columns": [
          "lname",
          "stuid"
        ]
      },
      {
        "table": "has_pet",
        "columns": [
          "petid",
          "stuid"
        ]
      },
      {
        "table": "pets",
        "columns": [
          "pet_age",
          "pettype",
          "petid"
        ]
      }
    ],
    "gold_sql": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'\tpets_1",
    "remarks": "",
    "id": 83,
    "question": "Find the last name of the student who has a cat that is age 3.",
    "involved_table_count": 3,
    "involved_column_count": 5
  },
  {
    "database": "pets_1",
    "tables": [
      {
        "table": "student",
        "columns": [
          "lname",
          "stuid"
        ]
      },
      {
        "table": "has_pet",
        "columns": [
          "petid",
          "stuid"
        ]
      },
      {
        "table": "pets",
        "columns": [
          "pet_age",
          "pettype",
          "petid"
        ]
      }
    ],
    "gold_sql": "SELECT T1.lname FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid JOIN pets AS T3 ON T3.petid  =  T2.petid WHERE T3.pet_age  =  3 AND T3.pettype  =  'cat'\tpets_1",
    "remarks": "",
    "id": 84,
    "question": "What is the last name of the student who has a cat that is 3 years old?",
    "involved_table_count": 3,
    "involved_column_count": 5
  },
  {
    "database": "pets_1",
    "tables": [
      {
        "table": "student",
        "columns": [
          "age",
          "stuid"
        ]
      },
      {
        "table": "has_pet",
        "columns": [
          "stuid"
        ]
      }
    ],
    "gold_sql": "SELECT avg(age) FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid)\tpets_1",
    "remarks": "",
    "id": 85,
    "question": "Find the average age of students who do not have any pet.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "pets_1",
    "tables": [
      {
        "table": "student",
        "columns": [
          "age",
          "stuid"
        ]
      },
      {
        "table": "has_pet",
        "columns": [
          "stuid"
        ]
      }
    ],
    "gold_sql": "SELECT avg(age) FROM student WHERE stuid NOT IN (SELECT T1.stuid FROM student AS T1 JOIN has_pet AS T2 ON T1.stuid  =  T2.stuid)\tpets_1",
    "remarks": "",
    "id": 86,
    "question": "What is the average age for all students who do not own any pets?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "continents",
        "columns": []
      }
    ],
    "gold_sql": "SELECT count(*) FROM CONTINENTS;\tcar_1",
    "remarks": "",
    "id": 87,
    "question": "How many continents are there?",
    "involved_table_count": 1,
    "involved_column_count": 0
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "continents",
        "columns": []
      }
    ],
    "gold_sql": "SELECT count(*) FROM CONTINENTS;\tcar_1",
    "remarks": "",
    "id": 88,
    "question": "What is the number of continents?",
    "involved_table_count": 1,
    "involved_column_count": 0
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "continents",
        "columns": [
          "continent",
          "contid"
        ]
      },
      {
        "table": "countries",
        "columns": [
          "continent"
        ]
      }
    ],
    "gold_sql": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;\tcar_1",
    "remarks": "",
    "id": 89,
    "question": "How many countries does each continent have? List the continent id, continent name and the number of countries.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "continents",
        "columns": [
          "continent",
          "contid"
        ]
      },
      {
        "table": "countries",
        "columns": [
          "continent"
        ]
      }
    ],
    "gold_sql": "SELECT T1.ContId ,  T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.Continent GROUP BY T1.ContId;\tcar_1",
    "remarks": "",
    "id": 90,
    "question": "For each continent, list its id, name, and how many countries it has?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "countries",
        "columns": []
      }
    ],
    "gold_sql": "SELECT count(*) FROM COUNTRIES;\tcar_1",
    "remarks": "",
    "id": 91,
    "question": "How many countries are listed?",
    "involved_table_count": 1,
    "involved_column_count": 0
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "countries",
        "columns": []
      }
    ],
    "gold_sql": "SELECT count(*) FROM COUNTRIES;\tcar_1",
    "remarks": "",
    "id": 92,
    "question": "How many countries exist?",
    "involved_table_count": 1,
    "involved_column_count": 0
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "car_makers",
        "columns": [
          "fullname",
          "id"
        ]
      },
      {
        "table": "model_list",
        "columns": [
          "maker"
        ]
      }
    ],
    "gold_sql": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;\tcar_1",
    "remarks": "",
    "id": 93,
    "question": "How many models does each car maker produce? List maker full name, id and the number.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "car_makers",
        "columns": [
          "fullname",
          "id"
        ]
      },
      {
        "table": "model_list",
        "columns": [
          "maker"
        ]
      }
    ],
    "gold_sql": "SELECT T1.FullName ,  T1.Id ,  count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id;\tcar_1",
    "remarks": "",
    "id": 94,
    "question": "What is the full name of each car maker, along with its id and how many models it produces?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "car_names",
        "columns": [
          "makeid",
          "model"
        ]
      },
      {
        "table": "cars_data",
        "columns": [
          "id",
          "horsepower"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;\tcar_1",
    "remarks": "",
    "id": 95,
    "question": "Which model of the car has the minimum horsepower?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "car_names",
        "columns": [
          "makeid",
          "model"
        ]
      },
      {
        "table": "cars_data",
        "columns": [
          "id",
          "horsepower"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.horsepower ASC LIMIT 1;\tcar_1",
    "remarks": "",
    "id": 96,
    "question": "What is the model of the car with the smallest amount of horsepower?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "cars_data",
        "columns": [
          "id",
          "weight"
        ]
      },
      {
        "table": "car_names",
        "columns": [
          "makeid",
          "model"
        ]
      }
    ],
    "gold_sql": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)\tcar_1",
    "remarks": "",
    "id": 97,
    "question": "Find the model of the car whose weight is below the average weight.",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "cars_data",
        "columns": [
          "id",
          "weight"
        ]
      },
      {
        "table": "car_names",
        "columns": [
          "makeid",
          "model"
        ]
      }
    ],
    "gold_sql": "SELECT T1.model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Weight  <  (SELECT avg(Weight) FROM CARS_DATA)\tcar_1",
    "remarks": "",
    "id": 98,
    "question": "What is the model for the car with a weight smaller than the average?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "car_makers",
        "columns": [
          "maker",
          "id"
        ]
      },
      {
        "table": "model_list",
        "columns": [
          "maker",
          "model"
        ]
      },
      {
        "table": "car_names",
        "columns": [
          "makeid",
          "model"
        ]
      },
      {
        "table": "cars_data",
        "columns": [
          "id",
          "year"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';\tcar_1",
    "remarks": "",
    "id": 99,
    "question": "Find the name of the makers that produced some cars in the year of 1970?",
    "involved_table_count": 4,
    "involved_column_count": 5
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "car_makers",
        "columns": [
          "maker",
          "id"
        ]
      },
      {
        "table": "model_list",
        "columns": [
          "maker",
          "model"
        ]
      },
      {
        "table": "car_names",
        "columns": [
          "makeid",
          "model"
        ]
      },
      {
        "table": "cars_data",
        "columns": [
          "id",
          "year"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model JOIN CARS_DATA AS T4 ON T3.MakeId  =  T4.id WHERE T4.year  =  '1970';\tcar_1",
    "remarks": "",
    "id": 100,
    "question": "What is the name of the different car makers who produced a car in 1970?",
    "involved_table_count": 4,
    "involved_column_count": 5
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "cars_data",
        "columns": [
          "id",
          "year"
        ]
      },
      {
        "table": "car_names",
        "columns": [
          "make",
          "makeid"
        ]
      }
    ],
    "gold_sql": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);\tcar_1",
    "remarks": "",
    "id": 101,
    "question": "Find the make and production time of the cars that were produced in the earliest year?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "cars_data",
        "columns": [
          "id",
          "year"
        ]
      },
      {
        "table": "car_names",
        "columns": [
          "make",
          "makeid"
        ]
      }
    ],
    "gold_sql": "SELECT T2.Make ,  T1.Year FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Year  =  (SELECT min(YEAR) FROM CARS_DATA);\tcar_1",
    "remarks": "",
    "id": 102,
    "question": "What is the maker of the carr produced in the earliest year and what year was it?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "model_list",
        "columns": [
          "model"
        ]
      },
      {
        "table": "car_names",
        "columns": [
          "makeid",
          "model"
        ]
      },
      {
        "table": "cars_data",
        "columns": [
          "id",
          "year"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;\tcar_1",
    "remarks": "",
    "id": 103,
    "question": "Which distinct car models are the produced after 1980?",
    "involved_table_count": 3,
    "involved_column_count": 4
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "model_list",
        "columns": [
          "model"
        ]
      },
      {
        "table": "car_names",
        "columns": [
          "makeid",
          "model"
        ]
      },
      {
        "table": "cars_data",
        "columns": [
          "id",
          "year"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.model  =  T2.model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.id WHERE T3.year  >  1980;\tcar_1",
    "remarks": "",
    "id": 104,
    "question": "What are the different models for the cards produced after 1980?",
    "involved_table_count": 3,
    "involved_column_count": 4
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "continents",
        "columns": [
          "continent",
          "contid"
        ]
      },
      {
        "table": "countries",
        "columns": [
          "continent",
          "countryid"
        ]
      },
      {
        "table": "car_makers",
        "columns": [
          "country"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;\tcar_1",
    "remarks": "",
    "id": 105,
    "question": "How many car makers are there in each continents? List the continent name and the count.",
    "involved_table_count": 3,
    "involved_column_count": 4
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "continents",
        "columns": [
          "continent",
          "contid"
        ]
      },
      {
        "table": "countries",
        "columns": [
          "continent",
          "countryid"
        ]
      },
      {
        "table": "car_makers",
        "columns": [
          "country"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Continent ,  count(*) FROM CONTINENTS AS T1 JOIN COUNTRIES AS T2 ON T1.ContId  =  T2.continent JOIN car_makers AS T3 ON T2.CountryId  =  T3.Country GROUP BY T1.Continent;\tcar_1",
    "remarks": "",
    "id": 106,
    "question": "What is the name of each continent and how many car makers are there in each one?",
    "involved_table_count": 3,
    "involved_column_count": 4
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "car_makers",
        "columns": [
          "country"
        ]
      },
      {
        "table": "countries",
        "columns": [
          "countryname",
          "countryid"
        ]
      }
    ],
    "gold_sql": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;\tcar_1",
    "remarks": "",
    "id": 107,
    "question": "Which of the countries has the most car makers? List the country name.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "car_makers",
        "columns": [
          "country"
        ]
      },
      {
        "table": "countries",
        "columns": [
          "countryname",
          "countryid"
        ]
      }
    ],
    "gold_sql": "SELECT T2.CountryName FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId GROUP BY T1.Country ORDER BY Count(*) DESC LIMIT 1;\tcar_1",
    "remarks": "",
    "id": 108,
    "question": "What is the name of the country with the most car makers?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "model_list",
        "columns": [
          "maker"
        ]
      },
      {
        "table": "car_makers",
        "columns": [
          "fullname",
          "id"
        ]
      }
    ],
    "gold_sql": "SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;\tcar_1",
    "remarks": "",
    "id": 109,
    "question": "How many car models are produced by each maker? List the count and the maker full name.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "model_list",
        "columns": [
          "maker"
        ]
      },
      {
        "table": "car_makers",
        "columns": [
          "fullname",
          "id"
        ]
      }
    ],
    "gold_sql": "SELECT Count(*) ,  T2.FullName ,  T2.id FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id GROUP BY T2.id;\tcar_1",
    "remarks": "",
    "id": 110,
    "question": "What is the number of car models that are produced by each maker and what is the id and full name of each maker?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "cars_data",
        "columns": [
          "id",
          "accelerate"
        ]
      },
      {
        "table": "car_names",
        "columns": [
          "make",
          "makeid"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';\tcar_1",
    "remarks": "",
    "id": 111,
    "question": "What is the accelerate of the car make amc hornet sportabout (sw)?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "cars_data",
        "columns": [
          "id",
          "accelerate"
        ]
      },
      {
        "table": "car_names",
        "columns": [
          "make",
          "makeid"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Accelerate FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Make  =  'amc hornet sportabout (sw)';\tcar_1",
    "remarks": "",
    "id": 112,
    "question": "How much does the car accelerate that makes amc hornet sportabout (sw)?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "car_makers",
        "columns": [
          "country"
        ]
      },
      {
        "table": "countries",
        "columns": [
          "countryname",
          "countryid"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';\tcar_1",
    "remarks": "",
    "id": 113,
    "question": "How many car makers are there in france?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "car_makers",
        "columns": [
          "country"
        ]
      },
      {
        "table": "countries",
        "columns": [
          "countryname",
          "countryid"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN COUNTRIES AS T2 ON T1.Country  =  T2.CountryId WHERE T2.CountryName  =  'france';\tcar_1",
    "remarks": "",
    "id": 114,
    "question": "What is the number of makers of care in France?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "model_list",
        "columns": [
          "maker"
        ]
      },
      {
        "table": "car_makers",
        "columns": [
          "id",
          "country"
        ]
      },
      {
        "table": "countries",
        "columns": [
          "countryname",
          "countryid"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';\tcar_1",
    "remarks": "",
    "id": 115,
    "question": "How many car models are produced in the usa?",
    "involved_table_count": 3,
    "involved_column_count": 5
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "model_list",
        "columns": [
          "maker"
        ]
      },
      {
        "table": "car_makers",
        "columns": [
          "id",
          "country"
        ]
      },
      {
        "table": "countries",
        "columns": [
          "countryname",
          "countryid"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM MODEL_LIST AS T1 JOIN CAR_MAKERS AS T2 ON T1.Maker  =  T2.Id JOIN COUNTRIES AS T3 ON T2.Country  =  T3.CountryId WHERE T3.CountryName  =  'usa';\tcar_1",
    "remarks": "",
    "id": 116,
    "question": "What is the count of the car models produced in the United States?",
    "involved_table_count": 3,
    "involved_column_count": 5
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "cars_data",
        "columns": [
          "mpg",
          "cylinders"
        ]
      }
    ],
    "gold_sql": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;\tcar_1",
    "remarks": "",
    "id": 117,
    "question": "What is the average miles per gallon(mpg) of the cars with 4 cylinders?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "cars_data",
        "columns": [
          "mpg",
          "cylinders"
        ]
      }
    ],
    "gold_sql": "SELECT avg(mpg) FROM CARS_DATA WHERE Cylinders  =  4;\tcar_1",
    "remarks": "",
    "id": 118,
    "question": "What is the average miles per gallon of all the cards with 4 cylinders?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "cars_data",
        "columns": [
          "cylinders",
          "year",
          "weight"
        ]
      }
    ],
    "gold_sql": "SELECT Weight FROM CARS_DATA WHERE Cylinders  =  4 AND YEAR  =  1974 ORDER BY Weight ASC LIMIT 1;\tcar_1",
    "remarks": "",
    "id": 119,
    "question": "What is the smallest weight of the car produced with 8 cylinders on 1974?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "cars_data",
        "columns": [
          "cylinders",
          "year",
          "weight"
        ]
      }
    ],
    "gold_sql": "SELECT Weight FROM CARS_DATA WHERE Cylinders  =  4 AND YEAR  =  1974 ORDER BY Weight ASC LIMIT 1;\tcar_1",
    "remarks": "",
    "id": 120,
    "question": "What is the minimu weight of the car with 8 cylinders produced in 1974?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "model_list",
        "columns": [
          "maker",
          "model"
        ]
      }
    ],
    "gold_sql": "SELECT Maker ,  Model FROM MODEL_LIST;\tcar_1",
    "remarks": "",
    "id": 121,
    "question": "What are all the makers and models?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "model_list",
        "columns": [
          "maker",
          "model"
        ]
      }
    ],
    "gold_sql": "SELECT Maker ,  Model FROM MODEL_LIST;\tcar_1",
    "remarks": "",
    "id": 122,
    "question": "What are the makers and models?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "countries",
        "columns": [
          "countryname",
          "countryid"
        ]
      },
      {
        "table": "car_makers",
        "columns": [
          "country"
        ]
      }
    ],
    "gold_sql": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;\tcar_1",
    "remarks": "",
    "id": 123,
    "question": "What are the countries having at least one car maker? List name and id.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "countries",
        "columns": [
          "countryname",
          "countryid"
        ]
      },
      {
        "table": "car_makers",
        "columns": [
          "country"
        ]
      }
    ],
    "gold_sql": "SELECT T1.CountryName ,  T1.CountryId FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >=  1;\tcar_1",
    "remarks": "",
    "id": 124,
    "question": "What are the names and ids of all countries with at least one car maker?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "cars_data",
        "columns": [
          "horsepower"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;\tcar_1",
    "remarks": "",
    "id": 125,
    "question": "What is the number of the cars with horsepower more than 150?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "cars_data",
        "columns": [
          "horsepower"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM CARS_DATA WHERE horsepower  >  150;\tcar_1",
    "remarks": "",
    "id": 126,
    "question": "What is the number of cars with a horsepower greater than 150?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "cars_data",
        "columns": [
          "year",
          "weight"
        ]
      }
    ],
    "gold_sql": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;\tcar_1",
    "remarks": "",
    "id": 127,
    "question": "What is the average weight of cars each year?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "cars_data",
        "columns": [
          "year",
          "weight"
        ]
      }
    ],
    "gold_sql": "SELECT avg(Weight) ,  YEAR FROM CARS_DATA GROUP BY YEAR;\tcar_1",
    "remarks": "",
    "id": 128,
    "question": "What is the average weight and year for each year?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "countries",
        "columns": [
          "countryname",
          "continent",
          "countryid"
        ]
      },
      {
        "table": "continents",
        "columns": [
          "continent",
          "contid"
        ]
      },
      {
        "table": "car_makers",
        "columns": [
          "country"
        ]
      }
    ],
    "gold_sql": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;\tcar_1",
    "remarks": "",
    "id": 129,
    "question": "Which countries in europe have at least 3 car manufacturers?",
    "involved_table_count": 3,
    "involved_column_count": 5
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "countries",
        "columns": [
          "countryname",
          "continent",
          "countryid"
        ]
      },
      {
        "table": "continents",
        "columns": [
          "continent",
          "contid"
        ]
      },
      {
        "table": "car_makers",
        "columns": [
          "country"
        ]
      }
    ],
    "gold_sql": "SELECT T1.CountryName FROM COUNTRIES AS T1 JOIN CONTINENTS AS T2 ON T1.Continent  =  T2.ContId JOIN CAR_MAKERS AS T3 ON T1.CountryId  =  T3.Country WHERE T2.Continent  =  'europe' GROUP BY T1.CountryName HAVING count(*)  >=  3;\tcar_1",
    "remarks": "",
    "id": 130,
    "question": "What are the names of all European countries with at least 3 manufacturers?",
    "involved_table_count": 3,
    "involved_column_count": 5
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "car_names",
        "columns": [
          "make",
          "makeid"
        ]
      },
      {
        "table": "cars_data",
        "columns": [
          "cylinders",
          "id",
          "horsepower"
        ]
      }
    ],
    "gold_sql": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;\tcar_1",
    "remarks": "",
    "id": 131,
    "question": "What is the maximum horsepower and the make of the car models with 3 cylinders?",
    "involved_table_count": 2,
    "involved_column_count": 5
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "car_names",
        "columns": [
          "make",
          "makeid"
        ]
      },
      {
        "table": "cars_data",
        "columns": [
          "cylinders",
          "id",
          "horsepower"
        ]
      }
    ],
    "gold_sql": "SELECT T2.horsepower ,  T1.Make FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.cylinders  =  3 ORDER BY T2.horsepower DESC LIMIT 1;\tcar_1",
    "remarks": "",
    "id": 132,
    "question": "What is the largest amount of horsepower for the models with 3 cylinders and what make is it?",
    "involved_table_count": 2,
    "involved_column_count": 5
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "car_names",
        "columns": [
          "makeid",
          "model"
        ]
      },
      {
        "table": "cars_data",
        "columns": [
          "mpg",
          "id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;\tcar_1",
    "remarks": "",
    "id": 133,
    "question": "Which model saves the most gasoline? That is to say, have the maximum miles per gallon.",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "car_names",
        "columns": [
          "makeid",
          "model"
        ]
      },
      {
        "table": "cars_data",
        "columns": [
          "mpg",
          "id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id ORDER BY T2.mpg DESC LIMIT 1;\tcar_1",
    "remarks": "",
    "id": 134,
    "question": "What is the car wmodel with the highest mpg?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "cars_data",
        "columns": [
          "year",
          "horsepower"
        ]
      }
    ],
    "gold_sql": "SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;\tcar_1",
    "remarks": "",
    "id": 135,
    "question": "What is the average horsepower of the cars before 1980?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "cars_data",
        "columns": [
          "year",
          "horsepower"
        ]
      }
    ],
    "gold_sql": "SELECT avg(horsepower) FROM CARS_DATA WHERE YEAR  <  1980;\tcar_1",
    "remarks": "",
    "id": 136,
    "question": "What is the average horsepower for all cards produced before 1980?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "car_names",
        "columns": [
          "makeid",
          "model"
        ]
      },
      {
        "table": "cars_data",
        "columns": [
          "id",
          "edispl"
        ]
      }
    ],
    "gold_sql": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';\tcar_1",
    "remarks": "",
    "id": 137,
    "question": "What is the average edispl of the cars of model volvo?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "car_names",
        "columns": [
          "makeid",
          "model"
        ]
      },
      {
        "table": "cars_data",
        "columns": [
          "id",
          "edispl"
        ]
      }
    ],
    "gold_sql": "SELECT avg(T2.edispl) FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T1.Model  =  'volvo';\tcar_1",
    "remarks": "",
    "id": 138,
    "question": "What is the average edispl for all volvos?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "cars_data",
        "columns": [
          "cylinders",
          "accelerate"
        ]
      }
    ],
    "gold_sql": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;\tcar_1",
    "remarks": "",
    "id": 139,
    "question": "What is the maximum accelerate for different number of cylinders?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "cars_data",
        "columns": [
          "cylinders",
          "accelerate"
        ]
      }
    ],
    "gold_sql": "SELECT max(Accelerate) ,  Cylinders FROM CARS_DATA GROUP BY Cylinders;\tcar_1",
    "remarks": "",
    "id": 140,
    "question": "What is the maximum accelerate for all the different cylinders?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "car_names",
        "columns": [
          "model"
        ]
      }
    ],
    "gold_sql": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;\tcar_1",
    "remarks": "",
    "id": 141,
    "question": "Which model has the most version(make) of cars?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "car_names",
        "columns": [
          "model"
        ]
      }
    ],
    "gold_sql": "SELECT Model FROM CAR_NAMES GROUP BY Model ORDER BY count(*) DESC LIMIT 1;\tcar_1",
    "remarks": "",
    "id": 142,
    "question": "What model has the most different versions?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "cars_data",
        "columns": [
          "cylinders"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;\tcar_1",
    "remarks": "",
    "id": 143,
    "question": "How many cars have more than 4 cylinders?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "cars_data",
        "columns": [
          "cylinders"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM CARS_DATA WHERE Cylinders  >  4;\tcar_1",
    "remarks": "",
    "id": 144,
    "question": "What is the number of cars with more than 4 cylinders?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "cars_data",
        "columns": [
          "year"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;\tcar_1",
    "remarks": "",
    "id": 145,
    "question": "how many cars were produced in 1980?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "cars_data",
        "columns": [
          "year"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM CARS_DATA WHERE YEAR  =  1980;\tcar_1",
    "remarks": "",
    "id": 146,
    "question": "In 1980, how many cars were made?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "car_makers",
        "columns": [
          "fullname",
          "id"
        ]
      },
      {
        "table": "model_list",
        "columns": [
          "maker"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';\tcar_1",
    "remarks": "",
    "id": 147,
    "question": "How many car models were produced by the maker with full name American Motor Company?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "car_makers",
        "columns": [
          "fullname",
          "id"
        ]
      },
      {
        "table": "model_list",
        "columns": [
          "maker"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker WHERE T1.FullName  =  'American Motor Company';\tcar_1",
    "remarks": "",
    "id": 148,
    "question": "What is the number of car models created by the car maker American Motor Company?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "car_makers",
        "columns": [
          "fullname",
          "id"
        ]
      },
      {
        "table": "model_list",
        "columns": [
          "maker"
        ]
      }
    ],
    "gold_sql": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;\tcar_1",
    "remarks": "",
    "id": 149,
    "question": "Which makers designed more than 3 car models? List full name and the id.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "car_makers",
        "columns": [
          "fullname",
          "id"
        ]
      },
      {
        "table": "model_list",
        "columns": [
          "maker"
        ]
      }
    ],
    "gold_sql": "SELECT T1.FullName ,  T1.Id FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >  3;\tcar_1",
    "remarks": "",
    "id": 150,
    "question": "What are the names and ids of all makers with more than 3 models?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "car_names",
        "columns": [
          "makeid",
          "model"
        ]
      },
      {
        "table": "model_list",
        "columns": [
          "maker",
          "model"
        ]
      },
      {
        "table": "car_makers",
        "columns": [
          "fullname",
          "id"
        ]
      },
      {
        "table": "cars_data",
        "columns": [
          "id",
          "weight"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;\tcar_1",
    "remarks": "",
    "id": 151,
    "question": "Which distinctive models are produced by maker with the full name General Motors or weighing more than 3500?",
    "involved_table_count": 4,
    "involved_column_count": 6
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "car_names",
        "columns": [
          "makeid",
          "model"
        ]
      },
      {
        "table": "model_list",
        "columns": [
          "maker",
          "model"
        ]
      },
      {
        "table": "car_makers",
        "columns": [
          "fullname",
          "id"
        ]
      },
      {
        "table": "cars_data",
        "columns": [
          "id",
          "weight"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT T2.Model FROM CAR_NAMES AS T1 JOIN MODEL_LIST AS T2 ON T1.Model  =  T2.Model JOIN CAR_MAKERS AS T3 ON T2.Maker  =  T3.Id JOIN CARS_DATA AS T4 ON T1.MakeId  =  T4.Id WHERE T3.FullName  =  'General Motors' OR T4.weight  >  3500;\tcar_1",
    "remarks": "",
    "id": 152,
    "question": "What are the different models created by either the car maker General Motors or weighed more than 3500?",
    "involved_table_count": 4,
    "involved_column_count": 6
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "cars_data",
        "columns": [
          "year",
          "weight"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT T1.Year FROM CARS_DATA AS T1 WHERE T1.Weight  >  3000 AND T1.weight  <  4000;\tcar_1",
    "remarks": "",
    "id": 153,
    "question": "In which years cars were produced weighing no less than 3000 and no more than 4000?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "cars_data",
        "columns": [
          "year",
          "weight"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT T1.Year FROM CARS_DATA AS T1 WHERE T1.Weight  >  3000 AND T1.weight  <  4000;\tcar_1",
    "remarks": "",
    "id": 154,
    "question": "What are the different years in which there were cars produced that weighed less than 4000 and also cars that weighted more than 3000?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "cars_data",
        "columns": [
          "horsepower",
          "accelerate"
        ]
      }
    ],
    "gold_sql": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;\tcar_1",
    "remarks": "",
    "id": 155,
    "question": "What is the horsepower of the car with the largest accelerate?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "cars_data",
        "columns": [
          "horsepower",
          "accelerate"
        ]
      }
    ],
    "gold_sql": "SELECT T1.horsepower FROM CARS_DATA AS T1 ORDER BY T1.accelerate DESC LIMIT 1;\tcar_1",
    "remarks": "",
    "id": 156,
    "question": "What is the horsepower of the car with the greatest accelerate?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "cars_data",
        "columns": [
          "cylinders",
          "id",
          "accelerate"
        ]
      },
      {
        "table": "car_names",
        "columns": [
          "makeid",
          "model"
        ]
      }
    ],
    "gold_sql": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;\tcar_1",
    "remarks": "",
    "id": 157,
    "question": "For model volvo, how many cylinders does the car with the least accelerate have?",
    "involved_table_count": 2,
    "involved_column_count": 5
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "cars_data",
        "columns": [
          "cylinders",
          "id",
          "accelerate"
        ]
      },
      {
        "table": "car_names",
        "columns": [
          "makeid",
          "model"
        ]
      }
    ],
    "gold_sql": "SELECT T1.cylinders FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T2.Model  =  'volvo' ORDER BY T1.accelerate ASC LIMIT 1;\tcar_1",
    "remarks": "",
    "id": 158,
    "question": "For a volvo model, how many cylinders does the version with least accelerate have?",
    "involved_table_count": 2,
    "involved_column_count": 5
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "cars_data",
        "columns": [
          "horsepower",
          "accelerate"
        ]
      }
    ],
    "gold_sql": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );\tcar_1",
    "remarks": "",
    "id": 159,
    "question": "How many cars have a larger accelerate than the car with the largest horsepower?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "cars_data",
        "columns": [
          "horsepower",
          "accelerate"
        ]
      }
    ],
    "gold_sql": "SELECT COUNT(*) FROM CARS_DATA WHERE Accelerate  >  ( SELECT Accelerate FROM CARS_DATA ORDER BY Horsepower DESC LIMIT 1 );\tcar_1",
    "remarks": "",
    "id": 160,
    "question": "What is the number of cars with a greater accelerate than the one with the most horsepower?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "countries",
        "columns": [
          "countryid"
        ]
      },
      {
        "table": "car_makers",
        "columns": [
          "country"
        ]
      }
    ],
    "gold_sql": "SELECT COUNT(*) FROM ( SELECT T1.CountryId ,  COUNT(*) FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >  2 );\tcar_1",
    "remarks": "",
    "id": 161,
    "question": "How many countries has more than 2 car makers?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "countries",
        "columns": [
          "countryid"
        ]
      },
      {
        "table": "car_makers",
        "columns": [
          "country"
        ]
      }
    ],
    "gold_sql": "SELECT COUNT(*) FROM ( SELECT T1.CountryId ,  COUNT(*) FROM COUNTRIES AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.CountryId HAVING count(*)  >  2 );\tcar_1",
    "remarks": "",
    "id": 162,
    "question": "What is the number of countries with more than 2 car makers?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "cars_data",
        "columns": [
          "cylinders"
        ]
      }
    ],
    "gold_sql": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;\tcar_1",
    "remarks": "",
    "id": 163,
    "question": "How many cars has over 6 cylinders?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "cars_data",
        "columns": [
          "cylinders"
        ]
      }
    ],
    "gold_sql": "SELECT COUNT(*) FROM CARS_DATA WHERE Cylinders  >  6;\tcar_1",
    "remarks": "",
    "id": 164,
    "question": "What is the number of carsw ith over 6 cylinders?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "car_names",
        "columns": [
          "makeid",
          "model"
        ]
      },
      {
        "table": "cars_data",
        "columns": [
          "cylinders",
          "id",
          "horsepower"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;\tcar_1",
    "remarks": "",
    "id": 165,
    "question": "For the cars with 4 cylinders, which model has the largest horsepower?",
    "involved_table_count": 2,
    "involved_column_count": 5
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "car_names",
        "columns": [
          "makeid",
          "model"
        ]
      },
      {
        "table": "cars_data",
        "columns": [
          "cylinders",
          "id",
          "horsepower"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Model FROM CAR_NAMES AS T1 JOIN CARS_DATA AS T2 ON T1.MakeId  =  T2.Id WHERE T2.Cylinders  =  4 ORDER BY T2.horsepower DESC LIMIT 1;\tcar_1",
    "remarks": "",
    "id": 166,
    "question": "For all of the 4 cylinder cars, which model has the most horsepower?",
    "involved_table_count": 2,
    "involved_column_count": 5
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "cars_data",
        "columns": [
          "cylinders",
          "id",
          "horsepower"
        ]
      },
      {
        "table": "car_names",
        "columns": [
          "make",
          "makeid"
        ]
      }
    ],
    "gold_sql": "SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;\tcar_1",
    "remarks": "",
    "id": 167,
    "question": "Among the cars with more than lowest horsepower, which ones do not have more than 3 cylinders? List the car makeid and make name.",
    "involved_table_count": 2,
    "involved_column_count": 5
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "cars_data",
        "columns": [
          "cylinders",
          "id",
          "horsepower"
        ]
      },
      {
        "table": "car_names",
        "columns": [
          "make",
          "makeid"
        ]
      }
    ],
    "gold_sql": "SELECT T2.MakeId ,  T2.Make FROM CARS_DATA AS T1 JOIN CAR_NAMES AS T2 ON T1.Id  =  T2.MakeId WHERE T1.Horsepower  >  (SELECT min(Horsepower) FROM CARS_DATA) AND T1.Cylinders  <=  3;\tcar_1",
    "remarks": "",
    "id": 168,
    "question": "Among the cars that do not have the minimum horsepower, what are the make ids and names of al those with less than 4 cylinders?",
    "involved_table_count": 2,
    "involved_column_count": 5
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "cars_data",
        "columns": [
          "mpg",
          "year",
          "cylinders"
        ]
      }
    ],
    "gold_sql": "SELECT mpg FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980 ORDER BY mpg DESC LIMIT 1;\tcar_1",
    "remarks": "",
    "id": 169,
    "question": "What is the maximum miles per gallon of the car with 8 cylinders or produced before 1980?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "cars_data",
        "columns": [
          "mpg",
          "year",
          "cylinders"
        ]
      }
    ],
    "gold_sql": "SELECT mpg FROM CARS_DATA WHERE Cylinders  =  8 OR YEAR  <  1980 ORDER BY mpg DESC LIMIT 1;\tcar_1",
    "remarks": "",
    "id": 170,
    "question": "What is the maximum mpg of the cars that had 8 cylinders or that were produced before 1980?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "model_list",
        "columns": [
          "maker",
          "model"
        ]
      },
      {
        "table": "car_names",
        "columns": [
          "makeid",
          "model"
        ]
      },
      {
        "table": "cars_data",
        "columns": [
          "id",
          "weight"
        ]
      },
      {
        "table": "car_makers",
        "columns": [
          "fullname",
          "id"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';\tcar_1",
    "remarks": "",
    "id": 171,
    "question": "Which models are lighter than 3500 but not built by the 'Ford Motor Company'?",
    "involved_table_count": 4,
    "involved_column_count": 6
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "model_list",
        "columns": [
          "maker",
          "model"
        ]
      },
      {
        "table": "car_names",
        "columns": [
          "makeid",
          "model"
        ]
      },
      {
        "table": "cars_data",
        "columns": [
          "id",
          "weight"
        ]
      },
      {
        "table": "car_makers",
        "columns": [
          "fullname",
          "id"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT T1.model FROM MODEL_LIST AS T1 JOIN CAR_NAMES AS T2 ON T1.Model  =  T2.Model JOIN CARS_DATA AS T3 ON T2.MakeId  =  T3.Id JOIN CAR_MAKERS AS T4 ON T1.Maker  =  T4.Id WHERE T3.weight  <  3500 AND T4.FullName != 'Ford Motor Company';\tcar_1",
    "remarks": "",
    "id": 172,
    "question": "What are the different models wthat are lighter than 3500 but were not built by the Ford Motor Company?",
    "involved_table_count": 4,
    "involved_column_count": 6
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "countries",
        "columns": [
          "countryname",
          "countryid"
        ]
      },
      {
        "table": "car_makers",
        "columns": [
          "country"
        ]
      }
    ],
    "gold_sql": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;\tcar_1",
    "remarks": "",
    "id": 173,
    "question": "What are the name of the countries where there is not a single car maker?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "countries",
        "columns": [
          "countryname",
          "countryid"
        ]
      },
      {
        "table": "car_makers",
        "columns": [
          "country"
        ]
      }
    ],
    "gold_sql": "SELECT CountryName FROM countries EXCEPT SELECT T1.CountryName FROM countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.countryId  =  T2.Country;\tcar_1",
    "remarks": "",
    "id": 174,
    "question": "What are the names of the countries with no car makers?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "car_makers",
        "columns": [
          "maker",
          "id"
        ]
      },
      {
        "table": "model_list",
        "columns": [
          "maker",
          "model"
        ]
      },
      {
        "table": "car_names",
        "columns": [
          "model"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;\tcar_1",
    "remarks": "",
    "id": 175,
    "question": "Which are the car makers which produce at least 2 models and more than 3 car makes? List the id and the maker.",
    "involved_table_count": 3,
    "involved_column_count": 3
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "car_makers",
        "columns": [
          "maker",
          "id"
        ]
      },
      {
        "table": "model_list",
        "columns": [
          "maker",
          "model"
        ]
      },
      {
        "table": "car_names",
        "columns": [
          "model"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker GROUP BY T1.Id HAVING count(*)  >=  2 INTERSECT SELECT T1.Id ,  T1.Maker FROM CAR_MAKERS AS T1 JOIN MODEL_LIST AS T2 ON T1.Id  =  T2.Maker JOIN CAR_NAMES AS T3 ON T2.model  =  T3.model GROUP BY T1.Id HAVING count(*)  >  3;\tcar_1",
    "remarks": "",
    "id": 176,
    "question": "What are the ids and makers of all car makers that produce at least 2 models and make more than 3 cars?",
    "involved_table_count": 3,
    "involved_column_count": 3
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "countries",
        "columns": [
          "countryname",
          "countryid"
        ]
      },
      {
        "table": "car_makers",
        "columns": [
          "id",
          "country"
        ]
      },
      {
        "table": "model_list",
        "columns": [
          "maker",
          "model"
        ]
      }
    ],
    "gold_sql": "SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';\tcar_1",
    "remarks": "",
    "id": 177,
    "question": "What are the id and names of the countries which have more than 3 car makers or produce the 'fiat' model?",
    "involved_table_count": 3,
    "involved_column_count": 6
  },
  {
    "database": "car_1",
    "tables": [
      {
        "table": "countries",
        "columns": [
          "countryname",
          "countryid"
        ]
      },
      {
        "table": "car_makers",
        "columns": [
          "id",
          "country"
        ]
      },
      {
        "table": "model_list",
        "columns": [
          "maker",
          "model"
        ]
      }
    ],
    "gold_sql": "SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country GROUP BY T1.countryId HAVING count(*)  >  3 UNION SELECT T1.countryId ,  T1.CountryName FROM Countries AS T1 JOIN CAR_MAKERS AS T2 ON T1.CountryId  =  T2.Country JOIN MODEL_LIST AS T3 ON T2.Id  =  T3.Maker WHERE T3.Model  =  'fiat';\tcar_1",
    "remarks": "",
    "id": 178,
    "question": "What are the ids and names of all countries that either have more than 3 car makers or produce fiats?",
    "involved_table_count": 3,
    "involved_column_count": 6
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airlines",
        "columns": [
          "airline",
          "country"
        ]
      }
    ],
    "gold_sql": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"\tflight_2",
    "remarks": "",
    "id": 179,
    "question": "Which country does Airline \"JetBlue Airways\" belong to?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airlines",
        "columns": [
          "airline",
          "country"
        ]
      }
    ],
    "gold_sql": "SELECT Country FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"\tflight_2",
    "remarks": "",
    "id": 180,
    "question": "What country is Jetblue Airways affiliated with?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airlines",
        "columns": [
          "airline",
          "abbreviation"
        ]
      }
    ],
    "gold_sql": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"\tflight_2",
    "remarks": "",
    "id": 181,
    "question": "What is the abbreviation of Airline \"JetBlue Airways\"?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airlines",
        "columns": [
          "airline",
          "abbreviation"
        ]
      }
    ],
    "gold_sql": "SELECT Abbreviation FROM AIRLINES WHERE Airline  =  \"JetBlue Airways\"\tflight_2",
    "remarks": "",
    "id": 182,
    "question": "Which abbreviation corresponds to Jetblue Airways?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airlines",
        "columns": [
          "airline",
          "abbreviation",
          "country"
        ]
      }
    ],
    "gold_sql": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"\tflight_2",
    "remarks": "",
    "id": 183,
    "question": "List all airline names and their abbreviations in \"USA\".",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airlines",
        "columns": [
          "airline",
          "abbreviation",
          "country"
        ]
      }
    ],
    "gold_sql": "SELECT Airline ,  Abbreviation FROM AIRLINES WHERE Country  =  \"USA\"\tflight_2",
    "remarks": "",
    "id": 184,
    "question": "What are the airline names and abbreviations for airlines in the USA?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airports",
        "columns": [
          "city",
          "airportcode",
          "airportname"
        ]
      }
    ],
    "gold_sql": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"\tflight_2",
    "remarks": "",
    "id": 185,
    "question": "List the airport code and name in the city of Anthony.",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airports",
        "columns": [
          "city",
          "airportcode",
          "airportname"
        ]
      }
    ],
    "gold_sql": "SELECT AirportCode ,  AirportName FROM AIRPORTS WHERE city  =  \"Anthony\"\tflight_2",
    "remarks": "",
    "id": 186,
    "question": "Give the airport code and airport name corresonding to the city Anthony.",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airlines",
        "columns": []
      }
    ],
    "gold_sql": "SELECT count(*) FROM AIRLINES\tflight_2",
    "remarks": "",
    "id": 187,
    "question": "How many airlines do we have?",
    "involved_table_count": 1,
    "involved_column_count": 0
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airlines",
        "columns": []
      }
    ],
    "gold_sql": "SELECT count(*) FROM AIRLINES\tflight_2",
    "remarks": "",
    "id": 188,
    "question": "What is the total number of airlines?",
    "involved_table_count": 1,
    "involved_column_count": 0
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airports",
        "columns": []
      }
    ],
    "gold_sql": "SELECT count(*) FROM AIRPORTS\tflight_2",
    "remarks": "",
    "id": 189,
    "question": "How many airports do we have?",
    "involved_table_count": 1,
    "involved_column_count": 0
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airports",
        "columns": []
      }
    ],
    "gold_sql": "SELECT count(*) FROM AIRPORTS\tflight_2",
    "remarks": "",
    "id": 190,
    "question": "Return the number of  airports.",
    "involved_table_count": 1,
    "involved_column_count": 0
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "flights",
        "columns": []
      }
    ],
    "gold_sql": "SELECT count(*) FROM FLIGHTS\tflight_2",
    "remarks": "",
    "id": 191,
    "question": "How many flights do we have?",
    "involved_table_count": 1,
    "involved_column_count": 0
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "flights",
        "columns": []
      }
    ],
    "gold_sql": "SELECT count(*) FROM FLIGHTS\tflight_2",
    "remarks": "",
    "id": 192,
    "question": "Return the number of flights.",
    "involved_table_count": 1,
    "involved_column_count": 0
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airlines",
        "columns": [
          "airline",
          "abbreviation"
        ]
      }
    ],
    "gold_sql": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"\tflight_2",
    "remarks": "",
    "id": 193,
    "question": "Which airline has abbreviation 'UAL'?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airlines",
        "columns": [
          "airline",
          "abbreviation"
        ]
      }
    ],
    "gold_sql": "SELECT Airline FROM AIRLINES WHERE Abbreviation  =  \"UAL\"\tflight_2",
    "remarks": "",
    "id": 194,
    "question": "Give the airline with abbreviation 'UAL'.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airlines",
        "columns": [
          "country"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"\tflight_2",
    "remarks": "",
    "id": 195,
    "question": "How many airlines are from USA?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airlines",
        "columns": [
          "country"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM AIRLINES WHERE Country  =  \"USA\"\tflight_2",
    "remarks": "",
    "id": 196,
    "question": "Return the number of airlines in the USA.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airports",
        "columns": [
          "city",
          "country",
          "airportname"
        ]
      }
    ],
    "gold_sql": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"\tflight_2",
    "remarks": "",
    "id": 197,
    "question": "Which city and country is the Alton airport at?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airports",
        "columns": [
          "city",
          "country",
          "airportname"
        ]
      }
    ],
    "gold_sql": "SELECT City ,  Country FROM AIRPORTS WHERE AirportName  =  \"Alton\"\tflight_2",
    "remarks": "",
    "id": 198,
    "question": "Give the city and country for the Alton airport.",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airports",
        "columns": [
          "airportcode",
          "airportname"
        ]
      }
    ],
    "gold_sql": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"\tflight_2",
    "remarks": "",
    "id": 199,
    "question": "What is the airport name for airport 'AKO'?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airports",
        "columns": [
          "airportcode",
          "airportname"
        ]
      }
    ],
    "gold_sql": "SELECT AirportName FROM AIRPORTS WHERE AirportCode  =  \"AKO\"\tflight_2",
    "remarks": "",
    "id": 200,
    "question": "Return the name of the airport with code 'AKO'.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airports",
        "columns": [
          "city",
          "airportname"
        ]
      }
    ],
    "gold_sql": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"\tflight_2",
    "remarks": "",
    "id": 201,
    "question": "What are airport names at City 'Aberdeen'?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airports",
        "columns": [
          "city",
          "airportname"
        ]
      }
    ],
    "gold_sql": "SELECT AirportName FROM AIRPORTS WHERE City = \"Aberdeen\"\tflight_2",
    "remarks": "",
    "id": 202,
    "question": "What are the names of airports in Aberdeen?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "flights",
        "columns": [
          "sourceairport"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"\tflight_2",
    "remarks": "",
    "id": 203,
    "question": "How many flights depart from 'APG'?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "flights",
        "columns": [
          "sourceairport"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM FLIGHTS WHERE SourceAirport  =  \"APG\"\tflight_2",
    "remarks": "",
    "id": 204,
    "question": "Count the number of flights departing from 'APG'.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "flights",
        "columns": [
          "destairport"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"\tflight_2",
    "remarks": "",
    "id": 205,
    "question": "How many flights have destination ATO?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "flights",
        "columns": [
          "destairport"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM FLIGHTS WHERE DestAirport  =  \"ATO\"\tflight_2",
    "remarks": "",
    "id": 206,
    "question": "Count the number of flights into ATO.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "flights",
        "columns": [
          "sourceairport"
        ]
      },
      {
        "table": "airports",
        "columns": [
          "city",
          "airportcode"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"\tflight_2",
    "remarks": "",
    "id": 207,
    "question": "How many flights depart from City Aberdeen?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "flights",
        "columns": [
          "sourceairport"
        ]
      },
      {
        "table": "airports",
        "columns": [
          "city",
          "airportcode"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"\tflight_2",
    "remarks": "",
    "id": 208,
    "question": "Return the number of flights departing from Aberdeen.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "flights",
        "columns": [
          "destairport"
        ]
      },
      {
        "table": "airports",
        "columns": [
          "city",
          "airportcode"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"\tflight_2",
    "remarks": "",
    "id": 209,
    "question": "How many flights arriving in Aberdeen city?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "flights",
        "columns": [
          "destairport"
        ]
      },
      {
        "table": "airports",
        "columns": [
          "city",
          "airportcode"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"\tflight_2",
    "remarks": "",
    "id": 210,
    "question": "Return the number of flights arriving in Aberdeen.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "flights",
        "columns": [
          "destairport",
          "sourceairport"
        ]
      },
      {
        "table": "airports",
        "columns": [
          "city",
          "airportcode"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"\tflight_2",
    "remarks": "",
    "id": 211,
    "question": "How many flights depart from City 'Aberdeen' and have destination City 'Ashley'?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "flights",
        "columns": [
          "destairport",
          "sourceairport"
        ]
      },
      {
        "table": "airports",
        "columns": [
          "city",
          "airportcode"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRPORTS AS T3 ON T1.SourceAirport  =  T3.AirportCode WHERE T2.City  =  \"Ashley\" AND T3.City  =  \"Aberdeen\"\tflight_2",
    "remarks": "",
    "id": 212,
    "question": "How many flights fly from Aberdeen to Ashley?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "flights",
        "columns": [
          "airline"
        ]
      },
      {
        "table": "airlines",
        "columns": [
          "airline",
          "uid"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"\tflight_2",
    "remarks": "",
    "id": 213,
    "question": "How many flights does airline 'JetBlue Airways' have?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "flights",
        "columns": [
          "airline"
        ]
      },
      {
        "table": "airlines",
        "columns": [
          "airline",
          "uid"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T1.Airline  =  T2.uid WHERE T2.Airline = \"JetBlue Airways\"\tflight_2",
    "remarks": "",
    "id": 214,
    "question": "Give the number of Jetblue Airways flights.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airlines",
        "columns": [
          "airline",
          "uid"
        ]
      },
      {
        "table": "flights",
        "columns": [
          "destairport",
          "airline"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"\tflight_2",
    "remarks": "",
    "id": 215,
    "question": "How many 'United Airlines' flights go to Airport 'ASY'?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airlines",
        "columns": [
          "airline",
          "uid"
        ]
      },
      {
        "table": "flights",
        "columns": [
          "destairport",
          "airline"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.DestAirport  =  \"ASY\"\tflight_2",
    "remarks": "",
    "id": 216,
    "question": "Count the number of United Airlines flights arriving in ASY Airport.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airlines",
        "columns": [
          "airline",
          "uid"
        ]
      },
      {
        "table": "flights",
        "columns": [
          "airline",
          "sourceairport"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"\tflight_2",
    "remarks": "",
    "id": 217,
    "question": "How many 'United Airlines' flights depart from Airport 'AHD'?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airlines",
        "columns": [
          "airline",
          "uid"
        ]
      },
      {
        "table": "flights",
        "columns": [
          "airline",
          "sourceairport"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T2.Airline  =  T1.uid WHERE T1.Airline  =  \"United Airlines\" AND T2.SourceAirport  =  \"AHD\"\tflight_2",
    "remarks": "",
    "id": 218,
    "question": "Return the number of United Airlines flights leaving from AHD Airport.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "flights",
        "columns": [
          "destairport",
          "airline"
        ]
      },
      {
        "table": "airports",
        "columns": [
          "city",
          "airportcode"
        ]
      },
      {
        "table": "airlines",
        "columns": [
          "airline",
          "uid"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"\tflight_2",
    "remarks": "",
    "id": 219,
    "question": "How many United Airlines flights go to City 'Aberdeen'?",
    "involved_table_count": 3,
    "involved_column_count": 5
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "flights",
        "columns": [
          "destairport",
          "airline"
        ]
      },
      {
        "table": "airports",
        "columns": [
          "city",
          "airportcode"
        ]
      },
      {
        "table": "airlines",
        "columns": [
          "airline",
          "uid"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport  =  T2.AirportCode JOIN AIRLINES AS T3 ON T3.uid  =  T1.Airline WHERE T2.City  =  \"Aberdeen\" AND T3.Airline  =  \"United Airlines\"\tflight_2",
    "remarks": "",
    "id": 220,
    "question": "Count the number of United Airlines flights that arrive in Aberdeen.",
    "involved_table_count": 3,
    "involved_column_count": 5
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airports",
        "columns": [
          "city",
          "airportcode"
        ]
      },
      {
        "table": "flights",
        "columns": [
          "destairport"
        ]
      }
    ],
    "gold_sql": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1\tflight_2",
    "remarks": "",
    "id": 221,
    "question": "Which city has most number of arriving flights?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airports",
        "columns": [
          "city",
          "airportcode"
        ]
      },
      {
        "table": "flights",
        "columns": [
          "destairport"
        ]
      }
    ],
    "gold_sql": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1\tflight_2",
    "remarks": "",
    "id": 222,
    "question": "Which city has the most frequent destination airport?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airports",
        "columns": [
          "city",
          "airportcode"
        ]
      },
      {
        "table": "flights",
        "columns": [
          "sourceairport"
        ]
      }
    ],
    "gold_sql": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1\tflight_2",
    "remarks": "",
    "id": 223,
    "question": "Which city has most number of departing flights?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airports",
        "columns": [
          "city",
          "airportcode"
        ]
      },
      {
        "table": "flights",
        "columns": [
          "sourceairport"
        ]
      }
    ],
    "gold_sql": "SELECT T1.City FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.SourceAirport GROUP BY T1.City ORDER BY count(*) DESC LIMIT 1\tflight_2",
    "remarks": "",
    "id": 224,
    "question": "Which city is the most frequent source airport?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airports",
        "columns": [
          "airportcode"
        ]
      },
      {
        "table": "flights",
        "columns": [
          "destairport",
          "sourceairport"
        ]
      }
    ],
    "gold_sql": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1\tflight_2",
    "remarks": "",
    "id": 225,
    "question": "What is the code of airport that has the highest number of flights?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airports",
        "columns": [
          "airportcode"
        ]
      },
      {
        "table": "flights",
        "columns": [
          "destairport",
          "sourceairport"
        ]
      }
    ],
    "gold_sql": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) DESC LIMIT 1\tflight_2",
    "remarks": "",
    "id": 226,
    "question": "What is the airport code of the airport with the most flights?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airports",
        "columns": [
          "airportcode"
        ]
      },
      {
        "table": "flights",
        "columns": [
          "destairport",
          "sourceairport"
        ]
      }
    ],
    "gold_sql": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1\tflight_2",
    "remarks": "",
    "id": 227,
    "question": "What is the code of airport that has fewest number of flights?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airports",
        "columns": [
          "airportcode"
        ]
      },
      {
        "table": "flights",
        "columns": [
          "destairport",
          "sourceairport"
        ]
      }
    ],
    "gold_sql": "SELECT T1.AirportCode FROM AIRPORTS AS T1 JOIN FLIGHTS AS T2 ON T1.AirportCode  =  T2.DestAirport OR T1.AirportCode  =  T2.SourceAirport GROUP BY T1.AirportCode ORDER BY count(*) LIMIT 1\tflight_2",
    "remarks": "",
    "id": 228,
    "question": "Give the code of the airport with the least flights.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airlines",
        "columns": [
          "airline",
          "uid"
        ]
      },
      {
        "table": "flights",
        "columns": [
          "airline"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1\tflight_2",
    "remarks": "",
    "id": 229,
    "question": "Which airline has most number of flights?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airlines",
        "columns": [
          "airline",
          "uid"
        ]
      },
      {
        "table": "flights",
        "columns": [
          "airline"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) DESC LIMIT 1\tflight_2",
    "remarks": "",
    "id": 230,
    "question": "What airline serves the most flights?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airlines",
        "columns": [
          "airline",
          "uid",
          "abbreviation",
          "country"
        ]
      },
      {
        "table": "flights",
        "columns": [
          "airline"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1\tflight_2",
    "remarks": "",
    "id": 231,
    "question": "Find the abbreviation and country of the airline that has fewest number of flights?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airlines",
        "columns": [
          "airline",
          "uid",
          "abbreviation",
          "country"
        ]
      },
      {
        "table": "flights",
        "columns": [
          "airline"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Abbreviation ,  T1.Country FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline ORDER BY count(*) LIMIT 1\tflight_2",
    "remarks": "",
    "id": 232,
    "question": "What is the abbreviation of the airilne has the fewest flights and what country is it in?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airlines",
        "columns": [
          "airline",
          "uid"
        ]
      },
      {
        "table": "flights",
        "columns": [
          "airline",
          "sourceairport"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"\tflight_2",
    "remarks": "",
    "id": 233,
    "question": "What are airlines that have some flight departing from airport 'AHD'?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airlines",
        "columns": [
          "airline",
          "uid"
        ]
      },
      {
        "table": "flights",
        "columns": [
          "airline",
          "sourceairport"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"AHD\"\tflight_2",
    "remarks": "",
    "id": 234,
    "question": "Which airlines have a flight with source airport AHD?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airlines",
        "columns": [
          "airline",
          "uid"
        ]
      },
      {
        "table": "flights",
        "columns": [
          "destairport",
          "airline"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"\tflight_2",
    "remarks": "",
    "id": 235,
    "question": "What are airlines that have flights arriving at airport 'AHD'?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airlines",
        "columns": [
          "airline",
          "uid"
        ]
      },
      {
        "table": "flights",
        "columns": [
          "destairport",
          "airline"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.DestAirport  =  \"AHD\"\tflight_2",
    "remarks": "",
    "id": 236,
    "question": "Which airlines have a flight with destination airport AHD?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airlines",
        "columns": [
          "airline",
          "uid"
        ]
      },
      {
        "table": "flights",
        "columns": [
          "airline",
          "sourceairport"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"\tflight_2",
    "remarks": "",
    "id": 237,
    "question": "Find all airlines that have flights from both airports 'APG' and 'CVO'.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airlines",
        "columns": [
          "airline",
          "uid"
        ]
      },
      {
        "table": "flights",
        "columns": [
          "airline",
          "sourceairport"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\" INTERSECT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\"\tflight_2",
    "remarks": "",
    "id": 238,
    "question": "Which airlines have departing flights from both APG and CVO airports?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airlines",
        "columns": [
          "airline",
          "uid"
        ]
      },
      {
        "table": "flights",
        "columns": [
          "airline",
          "sourceairport"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"\tflight_2",
    "remarks": "",
    "id": 239,
    "question": "Find all airlines that have flights from airport 'CVO' but not from 'APG'.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airlines",
        "columns": [
          "airline",
          "uid"
        ]
      },
      {
        "table": "flights",
        "columns": [
          "airline",
          "sourceairport"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"CVO\" EXCEPT SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline WHERE T2.SourceAirport  =  \"APG\"\tflight_2",
    "remarks": "",
    "id": 240,
    "question": "Which airlines have departures from CVO but not from APG airports?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airlines",
        "columns": [
          "airline",
          "uid"
        ]
      },
      {
        "table": "flights",
        "columns": [
          "airline"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10\tflight_2",
    "remarks": "",
    "id": 241,
    "question": "Find all airlines that have at least 10 flights.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airlines",
        "columns": [
          "airline",
          "uid"
        ]
      },
      {
        "table": "flights",
        "columns": [
          "airline"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  >  10\tflight_2",
    "remarks": "",
    "id": 242,
    "question": "Which airlines have at least 10 flights?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airlines",
        "columns": [
          "airline",
          "uid"
        ]
      },
      {
        "table": "flights",
        "columns": [
          "airline"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200\tflight_2",
    "remarks": "",
    "id": 243,
    "question": "Find all airlines that have fewer than 200 flights.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "airlines",
        "columns": [
          "airline",
          "uid"
        ]
      },
      {
        "table": "flights",
        "columns": [
          "airline"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Airline FROM AIRLINES AS T1 JOIN FLIGHTS AS T2 ON T1.uid  =  T2.Airline GROUP BY T1.Airline HAVING count(*)  <  200\tflight_2",
    "remarks": "",
    "id": 244,
    "question": "Which airlines have less than 200 flights?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "flights",
        "columns": [
          "airline",
          "flightno"
        ]
      },
      {
        "table": "airlines",
        "columns": [
          "airline",
          "uid"
        ]
      }
    ],
    "gold_sql": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"\tflight_2",
    "remarks": "",
    "id": 245,
    "question": "What are flight numbers of Airline \"United Airlines\"?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "flights",
        "columns": [
          "airline",
          "flightno"
        ]
      },
      {
        "table": "airlines",
        "columns": [
          "airline",
          "uid"
        ]
      }
    ],
    "gold_sql": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRLINES AS T2 ON T2.uid  =  T1.Airline WHERE T2.Airline  =  \"United Airlines\"\tflight_2",
    "remarks": "",
    "id": 246,
    "question": "Which flight numbers correspond to United Airlines flights?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "flights",
        "columns": [
          "flightno",
          "sourceairport"
        ]
      }
    ],
    "gold_sql": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"\tflight_2",
    "remarks": "",
    "id": 247,
    "question": "What are flight numbers of flights departing from Airport \"APG\"?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "flights",
        "columns": [
          "flightno",
          "sourceairport"
        ]
      }
    ],
    "gold_sql": "SELECT FlightNo FROM FLIGHTS WHERE SourceAirport  =  \"APG\"\tflight_2",
    "remarks": "",
    "id": 248,
    "question": "Give the flight numbers of flights leaving from APG.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "flights",
        "columns": [
          "destairport",
          "flightno"
        ]
      }
    ],
    "gold_sql": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"\tflight_2",
    "remarks": "",
    "id": 249,
    "question": "What are flight numbers of flights arriving at Airport \"APG\"?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "flights",
        "columns": [
          "destairport",
          "flightno"
        ]
      }
    ],
    "gold_sql": "SELECT FlightNo FROM FLIGHTS WHERE DestAirport  =  \"APG\"\tflight_2",
    "remarks": "",
    "id": 250,
    "question": "Give the flight numbers of flights landing at APG.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "flights",
        "columns": [
          "flightno",
          "sourceairport"
        ]
      },
      {
        "table": "airports",
        "columns": [
          "city",
          "airportcode"
        ]
      }
    ],
    "gold_sql": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"\tflight_2",
    "remarks": "",
    "id": 251,
    "question": "What are flight numbers of flights departing from City \"Aberdeen \"?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "flights",
        "columns": [
          "flightno",
          "sourceairport"
        ]
      },
      {
        "table": "airports",
        "columns": [
          "city",
          "airportcode"
        ]
      }
    ],
    "gold_sql": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.SourceAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"\tflight_2",
    "remarks": "",
    "id": 252,
    "question": "Give the flight numbers of flights leaving from Aberdeen.",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "flights",
        "columns": [
          "destairport",
          "flightno"
        ]
      },
      {
        "table": "airports",
        "columns": [
          "city",
          "airportcode"
        ]
      }
    ],
    "gold_sql": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"\tflight_2",
    "remarks": "",
    "id": 253,
    "question": "What are flight numbers of flights arriving at City \"Aberdeen\"?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "flights",
        "columns": [
          "destairport",
          "flightno"
        ]
      },
      {
        "table": "airports",
        "columns": [
          "city",
          "airportcode"
        ]
      }
    ],
    "gold_sql": "SELECT T1.FlightNo FROM FLIGHTS AS T1 JOIN AIRPORTS AS T2 ON T1.DestAirport   =  T2.AirportCode WHERE T2.City  =  \"Aberdeen\"\tflight_2",
    "remarks": "",
    "id": 254,
    "question": "Give the flight numbers of flights arriving in Aberdeen.",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "flights",
        "columns": [
          "destairport"
        ]
      },
      {
        "table": "airports",
        "columns": [
          "city",
          "airportcode"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"\tflight_2",
    "remarks": "",
    "id": 255,
    "question": "Find the number of flights landing in the city of Aberdeen or Abilene.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "flights",
        "columns": [
          "destairport"
        ]
      },
      {
        "table": "airports",
        "columns": [
          "city",
          "airportcode"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM Flights AS T1 JOIN Airports AS T2 ON T1.DestAirport  =  T2.AirportCode WHERE T2.city  =  \"Aberdeen\" OR T2.city  =  \"Abilene\"\tflight_2",
    "remarks": "",
    "id": 256,
    "question": "How many flights land in Aberdeen or Abilene?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "flights",
        "columns": [
          "destairport",
          "sourceairport"
        ]
      },
      {
        "table": "airports",
        "columns": [
          "airportcode",
          "airportname"
        ]
      }
    ],
    "gold_sql": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)\tflight_2",
    "remarks": "",
    "id": 257,
    "question": "Find the name of airports which do not have any flight in and out.",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "flight_2",
    "tables": [
      {
        "table": "flights",
        "columns": [
          "destairport",
          "sourceairport"
        ]
      },
      {
        "table": "airports",
        "columns": [
          "airportcode",
          "airportname"
        ]
      }
    ],
    "gold_sql": "SELECT AirportName FROM Airports WHERE AirportCode NOT IN (SELECT SourceAirport FROM Flights UNION SELECT DestAirport FROM Flights)\tflight_2",
    "remarks": "",
    "id": 258,
    "question": "Which airports do not have departing or arriving flights?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "employee_hire_evaluation",
    "tables": [
      {
        "table": "employee",
        "columns": []
      }
    ],
    "gold_sql": "SELECT count(*) FROM employee\temployee_hire_evaluation",
    "remarks": "",
    "id": 259,
    "question": "How many employees are there?",
    "involved_table_count": 1,
    "involved_column_count": 0
  },
  {
    "database": "employee_hire_evaluation",
    "tables": [
      {
        "table": "employee",
        "columns": []
      }
    ],
    "gold_sql": "SELECT count(*) FROM employee\temployee_hire_evaluation",
    "remarks": "",
    "id": 260,
    "question": "Count the number of employees",
    "involved_table_count": 1,
    "involved_column_count": 0
  },
  {
    "database": "employee_hire_evaluation",
    "tables": [
      {
        "table": "employee",
        "columns": [
          "name",
          "age"
        ]
      }
    ],
    "gold_sql": "SELECT name FROM employee ORDER BY age\temployee_hire_evaluation",
    "remarks": "",
    "id": 261,
    "question": "Sort employee names by their age in ascending order.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "employee_hire_evaluation",
    "tables": [
      {
        "table": "employee",
        "columns": [
          "name",
          "age"
        ]
      }
    ],
    "gold_sql": "SELECT name FROM employee ORDER BY age\temployee_hire_evaluation",
    "remarks": "",
    "id": 262,
    "question": "List the names of employees and sort in ascending order of age.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "employee_hire_evaluation",
    "tables": [
      {
        "table": "employee",
        "columns": [
          "city"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) ,  city FROM employee GROUP BY city\temployee_hire_evaluation",
    "remarks": "",
    "id": 263,
    "question": "What is the number of employees from each city?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "employee_hire_evaluation",
    "tables": [
      {
        "table": "employee",
        "columns": [
          "city"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) ,  city FROM employee GROUP BY city\temployee_hire_evaluation",
    "remarks": "",
    "id": 264,
    "question": "Count the number of employees for each city.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "employee_hire_evaluation",
    "tables": [
      {
        "table": "employee",
        "columns": [
          "city",
          "age"
        ]
      }
    ],
    "gold_sql": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1\temployee_hire_evaluation",
    "remarks": "",
    "id": 265,
    "question": "Which cities do more than one employee under age 30 come from?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "employee_hire_evaluation",
    "tables": [
      {
        "table": "employee",
        "columns": [
          "city",
          "age"
        ]
      }
    ],
    "gold_sql": "SELECT city FROM employee WHERE age  <  30 GROUP BY city HAVING count(*)  >  1\temployee_hire_evaluation",
    "remarks": "",
    "id": 266,
    "question": "Find the cities that have more than one employee under age 30.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "employee_hire_evaluation",
    "tables": [
      {
        "table": "shop",
        "columns": [
          "location"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION\temployee_hire_evaluation",
    "remarks": "",
    "id": 267,
    "question": "Find the number of shops in each location.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "employee_hire_evaluation",
    "tables": [
      {
        "table": "shop",
        "columns": [
          "location"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) ,  LOCATION FROM shop GROUP BY LOCATION\temployee_hire_evaluation",
    "remarks": "",
    "id": 268,
    "question": "How many shops are there in each location?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "employee_hire_evaluation",
    "tables": [
      {
        "table": "shop",
        "columns": [
          "district",
          "number_products",
          "manager_name"
        ]
      }
    ],
    "gold_sql": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1\temployee_hire_evaluation",
    "remarks": "",
    "id": 269,
    "question": "Find the manager name and district of the shop whose number of products is the largest.",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "employee_hire_evaluation",
    "tables": [
      {
        "table": "shop",
        "columns": [
          "district",
          "number_products",
          "manager_name"
        ]
      }
    ],
    "gold_sql": "SELECT manager_name ,  district FROM shop ORDER BY number_products DESC LIMIT 1\temployee_hire_evaluation",
    "remarks": "",
    "id": 270,
    "question": "What are the manager name and district of the shop that sells the largest number of products?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "employee_hire_evaluation",
    "tables": [
      {
        "table": "shop",
        "columns": [
          "number_products"
        ]
      }
    ],
    "gold_sql": "SELECT min(Number_products) ,  max(Number_products) FROM shop\temployee_hire_evaluation",
    "remarks": "",
    "id": 271,
    "question": "find the minimum and maximum number of products of all stores.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "employee_hire_evaluation",
    "tables": [
      {
        "table": "shop",
        "columns": [
          "number_products"
        ]
      }
    ],
    "gold_sql": "SELECT min(Number_products) ,  max(Number_products) FROM shop\temployee_hire_evaluation",
    "remarks": "",
    "id": 272,
    "question": "What are the minimum and maximum number of products across all the shops?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "employee_hire_evaluation",
    "tables": [
      {
        "table": "shop",
        "columns": [
          "district",
          "location",
          "name",
          "number_products"
        ]
      }
    ],
    "gold_sql": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC\temployee_hire_evaluation",
    "remarks": "",
    "id": 273,
    "question": "Return the name, location and district of all shops in descending order of number of products.",
    "involved_table_count": 1,
    "involved_column_count": 4
  },
  {
    "database": "employee_hire_evaluation",
    "tables": [
      {
        "table": "shop",
        "columns": [
          "district",
          "location",
          "name",
          "number_products"
        ]
      }
    ],
    "gold_sql": "SELECT name ,  LOCATION ,  district FROM shop ORDER BY number_products DESC\temployee_hire_evaluation",
    "remarks": "",
    "id": 274,
    "question": "Sort all the shops by number products in descending order, and return the name, location and district of each shop.",
    "involved_table_count": 1,
    "involved_column_count": 4
  },
  {
    "database": "employee_hire_evaluation",
    "tables": [
      {
        "table": "shop",
        "columns": [
          "name",
          "number_products"
        ]
      }
    ],
    "gold_sql": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)\temployee_hire_evaluation",
    "remarks": "",
    "id": 275,
    "question": "Find the names of stores whose number products is more than the average number of products.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "employee_hire_evaluation",
    "tables": [
      {
        "table": "shop",
        "columns": [
          "name",
          "number_products"
        ]
      }
    ],
    "gold_sql": "SELECT name FROM shop WHERE number_products  >  (SELECT avg(number_products) FROM shop)\temployee_hire_evaluation",
    "remarks": "",
    "id": 276,
    "question": "Which shops' number products is above the average? Give me the shop names.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "employee_hire_evaluation",
    "tables": [
      {
        "table": "employee",
        "columns": [
          "employee_id",
          "name"
        ]
      },
      {
        "table": "evaluation",
        "columns": [
          "employee_id"
        ]
      }
    ],
    "gold_sql": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1\temployee_hire_evaluation",
    "remarks": "",
    "id": 277,
    "question": "find the name of employee who was awarded the most times in the evaluation.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "employee_hire_evaluation",
    "tables": [
      {
        "table": "employee",
        "columns": [
          "employee_id",
          "name"
        ]
      },
      {
        "table": "evaluation",
        "columns": [
          "employee_id"
        ]
      }
    ],
    "gold_sql": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID GROUP BY t2.Employee_ID ORDER BY count(*) DESC LIMIT 1\temployee_hire_evaluation",
    "remarks": "",
    "id": 278,
    "question": "Which employee received the most awards in evaluations? Give me the employee name.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "employee_hire_evaluation",
    "tables": [
      {
        "table": "employee",
        "columns": [
          "employee_id",
          "name"
        ]
      },
      {
        "table": "evaluation",
        "columns": [
          "employee_id",
          "bonus"
        ]
      }
    ],
    "gold_sql": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1\temployee_hire_evaluation",
    "remarks": "",
    "id": 279,
    "question": "Find the name of the employee who got the highest one time bonus.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "employee_hire_evaluation",
    "tables": [
      {
        "table": "employee",
        "columns": [
          "employee_id",
          "name"
        ]
      },
      {
        "table": "evaluation",
        "columns": [
          "employee_id",
          "bonus"
        ]
      }
    ],
    "gold_sql": "SELECT t1.name FROM employee AS t1 JOIN evaluation AS t2 ON t1.Employee_ID  =  t2.Employee_ID ORDER BY t2.bonus DESC LIMIT 1\temployee_hire_evaluation",
    "remarks": "",
    "id": 280,
    "question": "Which employee received the biggest bonus? Give me the employee name.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "employee_hire_evaluation",
    "tables": [
      {
        "table": "evaluation",
        "columns": [
          "employee_id"
        ]
      },
      {
        "table": "employee",
        "columns": [
          "employee_id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)\temployee_hire_evaluation",
    "remarks": "",
    "id": 281,
    "question": "Find the names of employees who never won any award in the evaluation.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "employee_hire_evaluation",
    "tables": [
      {
        "table": "evaluation",
        "columns": [
          "employee_id"
        ]
      },
      {
        "table": "employee",
        "columns": [
          "employee_id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT name FROM employee WHERE Employee_ID NOT IN (SELECT Employee_ID FROM evaluation)\temployee_hire_evaluation",
    "remarks": "",
    "id": 282,
    "question": "What are the names of the employees who never received any evaluation?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "employee_hire_evaluation",
    "tables": [
      {
        "table": "hiring",
        "columns": [
          "shop_id"
        ]
      },
      {
        "table": "shop",
        "columns": [
          "shop_id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1\temployee_hire_evaluation",
    "remarks": "",
    "id": 283,
    "question": "What is the name of the shop that is hiring the largest number of employees?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "employee_hire_evaluation",
    "tables": [
      {
        "table": "hiring",
        "columns": [
          "shop_id"
        ]
      },
      {
        "table": "shop",
        "columns": [
          "shop_id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t1.shop_id ORDER BY count(*) DESC LIMIT 1\temployee_hire_evaluation",
    "remarks": "",
    "id": 284,
    "question": "Which shop has the most employees? Give me the shop name.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "employee_hire_evaluation",
    "tables": [
      {
        "table": "hiring",
        "columns": [
          "shop_id"
        ]
      },
      {
        "table": "shop",
        "columns": [
          "shop_id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)\temployee_hire_evaluation",
    "remarks": "",
    "id": 285,
    "question": "Find the name of the shops that do not hire any employee.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "employee_hire_evaluation",
    "tables": [
      {
        "table": "hiring",
        "columns": [
          "shop_id"
        ]
      },
      {
        "table": "shop",
        "columns": [
          "shop_id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT name FROM shop WHERE shop_id NOT IN (SELECT shop_id FROM hiring)\temployee_hire_evaluation",
    "remarks": "",
    "id": 286,
    "question": "Which shops run with no employees? Find the shop names",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "employee_hire_evaluation",
    "tables": [
      {
        "table": "hiring",
        "columns": [
          "shop_id"
        ]
      },
      {
        "table": "shop",
        "columns": [
          "shop_id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name\temployee_hire_evaluation",
    "remarks": "",
    "id": 287,
    "question": "Find the number of employees hired in each shop; show the shop name as well.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "employee_hire_evaluation",
    "tables": [
      {
        "table": "hiring",
        "columns": [
          "shop_id"
        ]
      },
      {
        "table": "shop",
        "columns": [
          "shop_id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) ,  t2.name FROM hiring AS t1 JOIN shop AS t2 ON t1.shop_id  =  t2.shop_id GROUP BY t2.name\temployee_hire_evaluation",
    "remarks": "",
    "id": 288,
    "question": "For each shop, return the number of employees working there and the name of the shop.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "employee_hire_evaluation",
    "tables": [
      {
        "table": "evaluation",
        "columns": [
          "bonus"
        ]
      }
    ],
    "gold_sql": "SELECT sum(bonus) FROM evaluation\temployee_hire_evaluation",
    "remarks": "",
    "id": 289,
    "question": "What is total bonus given in all evaluations?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "employee_hire_evaluation",
    "tables": [
      {
        "table": "evaluation",
        "columns": [
          "bonus"
        ]
      }
    ],
    "gold_sql": "SELECT sum(bonus) FROM evaluation\temployee_hire_evaluation",
    "remarks": "",
    "id": 290,
    "question": "Find the total amount of bonus given in all the evaluations.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "employee_hire_evaluation",
    "tables": [
      {
        "table": "hiring",
        "columns": []
      }
    ],
    "gold_sql": "SELECT * FROM hiring\temployee_hire_evaluation",
    "remarks": "",
    "id": 291,
    "question": "Give me all the information about hiring.",
    "involved_table_count": 1,
    "involved_column_count": 0
  },
  {
    "database": "employee_hire_evaluation",
    "tables": [
      {
        "table": "hiring",
        "columns": []
      }
    ],
    "gold_sql": "SELECT * FROM hiring\temployee_hire_evaluation",
    "remarks": "",
    "id": 292,
    "question": "What is all the information about hiring?",
    "involved_table_count": 1,
    "involved_column_count": 0
  },
  {
    "database": "employee_hire_evaluation",
    "tables": [
      {
        "table": "shop",
        "columns": [
          "district",
          "number_products"
        ]
      }
    ],
    "gold_sql": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000\temployee_hire_evaluation",
    "remarks": "",
    "id": 293,
    "question": "Which district has both stores with less than 3000 products and stores with more than 10000 products?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "employee_hire_evaluation",
    "tables": [
      {
        "table": "shop",
        "columns": [
          "district",
          "number_products"
        ]
      }
    ],
    "gold_sql": "SELECT district FROM shop WHERE Number_products  <  3000 INTERSECT SELECT district FROM shop WHERE Number_products  >  10000\temployee_hire_evaluation",
    "remarks": "",
    "id": 294,
    "question": "Find the districts in which there are both shops selling less than 3000 products and shops selling more than 10000 products.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "employee_hire_evaluation",
    "tables": [
      {
        "table": "shop",
        "columns": [
          "location"
        ]
      }
    ],
    "gold_sql": "SELECT count(DISTINCT LOCATION) FROM shop\temployee_hire_evaluation",
    "remarks": "",
    "id": 295,
    "question": "How many different store locations are there?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "employee_hire_evaluation",
    "tables": [
      {
        "table": "shop",
        "columns": [
          "location"
        ]
      }
    ],
    "gold_sql": "SELECT count(DISTINCT LOCATION) FROM shop\temployee_hire_evaluation",
    "remarks": "",
    "id": 296,
    "question": "Count the number of distinct store locations.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "documents",
        "columns": []
      }
    ],
    "gold_sql": "SELECT count(*) FROM Documents\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 297,
    "question": "How many documents do we have?",
    "involved_table_count": 1,
    "involved_column_count": 0
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "documents",
        "columns": []
      }
    ],
    "gold_sql": "SELECT count(*) FROM Documents\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 298,
    "question": "Count the number of documents.",
    "involved_table_count": 1,
    "involved_column_count": 0
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "documents",
        "columns": [
          "document_id",
          "document_name",
          "document_description"
        ]
      }
    ],
    "gold_sql": "SELECT document_id ,  document_name ,  document_description FROM Documents\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 299,
    "question": "List document IDs, document names, and document descriptions for all documents.",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "documents",
        "columns": [
          "document_id",
          "document_name",
          "document_description"
        ]
      }
    ],
    "gold_sql": "SELECT document_id ,  document_name ,  document_description FROM Documents\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 300,
    "question": "What are the ids, names, and descriptions for all documents?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "documents",
        "columns": [
          "template_id",
          "document_name",
          "document_description"
        ]
      }
    ],
    "gold_sql": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 301,
    "question": "What is the document name and template id for document with description with the letter 'w' in it?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "documents",
        "columns": [
          "template_id",
          "document_name",
          "document_description"
        ]
      }
    ],
    "gold_sql": "SELECT document_name ,  template_id FROM Documents WHERE Document_Description LIKE \"%w%\"\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 302,
    "question": "Return the names and template ids for documents that contain the letter w in their description.",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "documents",
        "columns": [
          "document_name",
          "template_id",
          "document_id",
          "document_description"
        ]
      }
    ],
    "gold_sql": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 303,
    "question": "What is the document id, template id and description for document named \"Robbin CV\"?",
    "involved_table_count": 1,
    "involved_column_count": 4
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "documents",
        "columns": [
          "document_name",
          "template_id",
          "document_id",
          "document_description"
        ]
      }
    ],
    "gold_sql": "SELECT document_id ,  template_id ,  Document_Description FROM Documents WHERE document_name  =  \"Robbin CV\"\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 304,
    "question": "Return the document id, template id, and description for the document with the name Robbin CV.",
    "involved_table_count": 1,
    "involved_column_count": 4
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "documents",
        "columns": [
          "template_id"
        ]
      }
    ],
    "gold_sql": "SELECT count(DISTINCT template_id) FROM Documents\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 305,
    "question": "How many different templates do all document use?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "documents",
        "columns": [
          "template_id"
        ]
      }
    ],
    "gold_sql": "SELECT count(DISTINCT template_id) FROM Documents\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 306,
    "question": "Count the number of different templates used for documents.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "documents",
        "columns": [
          "template_id"
        ]
      },
      {
        "table": "templates",
        "columns": [
          "template_type_code",
          "template_id"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 307,
    "question": "How many documents are using the template with type code 'PPT'?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "documents",
        "columns": [
          "template_id"
        ]
      },
      {
        "table": "templates",
        "columns": [
          "template_type_code",
          "template_id"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM Documents AS T1 JOIN Templates AS T2 ON T1.Template_ID  =  T2.Template_ID WHERE T2.Template_Type_Code  =  'PPT'\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 308,
    "question": "Count the number of documents that use the PPT template type.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "documents",
        "columns": [
          "template_id"
        ]
      }
    ],
    "gold_sql": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 309,
    "question": "Show all template ids and number of documents using each template.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "documents",
        "columns": [
          "template_id"
        ]
      }
    ],
    "gold_sql": "SELECT template_id ,  count(*) FROM Documents GROUP BY template_id\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 310,
    "question": "What are all different template ids used for documents, and how many times were each of them used?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "documents",
        "columns": [
          "template_id"
        ]
      },
      {
        "table": "templates",
        "columns": [
          "template_type_code",
          "template_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 311,
    "question": "What is the id and type code for the template used by the most documents?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "documents",
        "columns": [
          "template_id"
        ]
      },
      {
        "table": "templates",
        "columns": [
          "template_type_code",
          "template_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.template_id ,  T2.Template_Type_Code FROM Documents AS T1 JOIN Templates AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_id ORDER BY count(*) DESC LIMIT 1\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 312,
    "question": "Return the id and type code of the template that is used for the greatest number of documents.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "documents",
        "columns": [
          "template_id"
        ]
      }
    ],
    "gold_sql": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 313,
    "question": "Show ids for all templates that are used by more than one document.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "documents",
        "columns": [
          "template_id"
        ]
      }
    ],
    "gold_sql": "SELECT template_id FROM Documents GROUP BY template_id HAVING count(*)  >  1\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 314,
    "question": "What are the template ids of any templates used in more than a single document?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "templates",
        "columns": [
          "template_id"
        ]
      },
      {
        "table": "documents",
        "columns": [
          "template_id"
        ]
      }
    ],
    "gold_sql": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 315,
    "question": "Show ids for all templates not used by any document.",
    "involved_table_count": 2,
    "involved_column_count": 1
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "templates",
        "columns": [
          "template_id"
        ]
      },
      {
        "table": "documents",
        "columns": [
          "template_id"
        ]
      }
    ],
    "gold_sql": "SELECT template_id FROM Templates EXCEPT SELECT template_id FROM Documents\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 316,
    "question": "What are the ids for templates that are not used in any documents?",
    "involved_table_count": 2,
    "involved_column_count": 1
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "templates",
        "columns": []
      }
    ],
    "gold_sql": "SELECT count(*) FROM Templates\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 317,
    "question": "How many templates do we have?",
    "involved_table_count": 1,
    "involved_column_count": 0
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "templates",
        "columns": []
      }
    ],
    "gold_sql": "SELECT count(*) FROM Templates\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 318,
    "question": "Count the number of templates.",
    "involved_table_count": 1,
    "involved_column_count": 0
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "templates",
        "columns": [
          "template_type_code",
          "template_id",
          "version_number"
        ]
      }
    ],
    "gold_sql": "SELECT template_id ,  version_number ,  template_type_code FROM Templates\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 319,
    "question": "Show template ids, version numbers, and template type codes for all templates.",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "templates",
        "columns": [
          "template_type_code",
          "template_id",
          "version_number"
        ]
      }
    ],
    "gold_sql": "SELECT template_id ,  version_number ,  template_type_code FROM Templates\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 320,
    "question": "What are the ids, version numbers, and type codes for each template?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "templates",
        "columns": [
          "template_type_code"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT template_type_code FROM Templates\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 321,
    "question": "Show all distinct template type codes for all templates.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "templates",
        "columns": [
          "template_type_code"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT template_type_code FROM Templates\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 322,
    "question": "What are the different template type codes?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "templates",
        "columns": [
          "template_type_code",
          "template_id"
        ]
      }
    ],
    "gold_sql": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 323,
    "question": "What are the ids of templates with template type code PP or PPT?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "templates",
        "columns": [
          "template_type_code",
          "template_id"
        ]
      }
    ],
    "gold_sql": "SELECT template_id FROM Templates WHERE template_type_code  =  \"PP\" OR template_type_code  =  \"PPT\"\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 324,
    "question": "Return the ids of templates that have the code PP or PPT.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "templates",
        "columns": [
          "template_type_code"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 325,
    "question": "How many templates have template type code CV?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "templates",
        "columns": [
          "template_type_code"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM Templates WHERE template_type_code  =  \"CV\"\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 326,
    "question": "Count the number of templates of the type CV.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "templates",
        "columns": [
          "template_type_code",
          "version_number"
        ]
      }
    ],
    "gold_sql": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 327,
    "question": "What is the version number and template type code for the template with version number later than 5?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "templates",
        "columns": [
          "template_type_code",
          "version_number"
        ]
      }
    ],
    "gold_sql": "SELECT version_number ,  template_type_code FROM Templates WHERE version_number  >  5\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 328,
    "question": "Return the version numbers and template type codes of templates with a version number greater than 5.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "templates",
        "columns": [
          "template_type_code"
        ]
      }
    ],
    "gold_sql": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 329,
    "question": "Show all template type codes and number of templates for each.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "templates",
        "columns": [
          "template_type_code"
        ]
      }
    ],
    "gold_sql": "SELECT template_type_code ,  count(*) FROM Templates GROUP BY template_type_code\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 330,
    "question": "What are the different template type codes, and how many templates correspond to each?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "templates",
        "columns": [
          "template_type_code"
        ]
      }
    ],
    "gold_sql": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 331,
    "question": "Which template type code has most number of templates?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "templates",
        "columns": [
          "template_type_code"
        ]
      }
    ],
    "gold_sql": "SELECT template_type_code FROM Templates GROUP BY template_type_code ORDER BY count(*) DESC LIMIT 1\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 332,
    "question": "Return the type code of the template type that the most templates belong to.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "templates",
        "columns": [
          "template_type_code"
        ]
      }
    ],
    "gold_sql": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 333,
    "question": "Show all template type codes with less than three templates.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "templates",
        "columns": [
          "template_type_code"
        ]
      }
    ],
    "gold_sql": "SELECT template_type_code FROM Templates GROUP BY template_type_code HAVING count(*)  <  3\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 334,
    "question": "What are the codes of template types that have fewer than 3 templates?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "templates",
        "columns": [
          "template_type_code",
          "version_number"
        ]
      }
    ],
    "gold_sql": "SELECT min(Version_Number) ,  template_type_code FROM Templates\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 335,
    "question": "What the smallest version number and its template type code?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "templates",
        "columns": [
          "template_type_code",
          "version_number"
        ]
      }
    ],
    "gold_sql": "SELECT min(Version_Number) ,  template_type_code FROM Templates\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 336,
    "question": "Return the lowest version number, along with its corresponding template type code.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "templates",
        "columns": [
          "template_type_code",
          "template_id"
        ]
      },
      {
        "table": "documents",
        "columns": [
          "template_id",
          "document_name"
        ]
      }
    ],
    "gold_sql": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 337,
    "question": "What is the template type code of the template used by document with the name \"Data base\"?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "templates",
        "columns": [
          "template_type_code",
          "template_id"
        ]
      },
      {
        "table": "documents",
        "columns": [
          "template_id",
          "document_name"
        ]
      }
    ],
    "gold_sql": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T2.document_name  =  \"Data base\"\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 338,
    "question": "Return the template type code of the template that is used by a document named Data base.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "templates",
        "columns": [
          "template_type_code",
          "template_id"
        ]
      },
      {
        "table": "documents",
        "columns": [
          "template_id",
          "document_name"
        ]
      }
    ],
    "gold_sql": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 339,
    "question": "Show all document names using templates with template type code BK.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "templates",
        "columns": [
          "template_type_code",
          "template_id"
        ]
      },
      {
        "table": "documents",
        "columns": [
          "template_id",
          "document_name"
        ]
      }
    ],
    "gold_sql": "SELECT T2.document_name FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id WHERE T1.template_type_code  =  \"BK\"\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 340,
    "question": "What are the names of documents that use templates with the code BK?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "templates",
        "columns": [
          "template_type_code",
          "template_id"
        ]
      },
      {
        "table": "documents",
        "columns": [
          "template_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 341,
    "question": "Show all template type codes and the number of documents using each type.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "templates",
        "columns": [
          "template_type_code",
          "template_id"
        ]
      },
      {
        "table": "documents",
        "columns": [
          "template_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.template_type_code ,  count(*) FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 342,
    "question": "What are the different template type codes, and how many documents use each type?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "templates",
        "columns": [
          "template_type_code",
          "template_id"
        ]
      },
      {
        "table": "documents",
        "columns": [
          "template_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 343,
    "question": "Which template type code is used by most number of documents?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "templates",
        "columns": [
          "template_type_code",
          "template_id"
        ]
      },
      {
        "table": "documents",
        "columns": [
          "template_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id GROUP BY T1.template_type_code ORDER BY count(*) DESC LIMIT 1\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 344,
    "question": "Return the code of the template type that is most commonly used in documents.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "templates",
        "columns": [
          "template_type_code",
          "template_id"
        ]
      },
      {
        "table": "documents",
        "columns": [
          "template_id"
        ]
      }
    ],
    "gold_sql": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id\tcre_Doc_Template_Mgt",
    "remarks": "Qualification failed: Column '\"template_type_code\"' could not be resolved.",
    "id": 345,
    "question": "Show all template type codes that are not used by any document.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "templates",
        "columns": [
          "template_type_code",
          "template_id"
        ]
      },
      {
        "table": "documents",
        "columns": [
          "template_id"
        ]
      }
    ],
    "gold_sql": "SELECT template_type_code FROM Templates EXCEPT SELECT template_type_code FROM Templates AS T1 JOIN Documents AS T2 ON T1.template_id  =  T2.template_id\tcre_Doc_Template_Mgt",
    "remarks": "Qualification failed: Column '\"template_type_code\"' could not be resolved.",
    "id": 346,
    "question": "What are the codes of template types that are not used for any document?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "ref_template_types",
        "columns": [
          "template_type_code",
          "template_type_description"
        ]
      }
    ],
    "gold_sql": "SELECT template_type_code ,  template_type_description FROM Ref_template_types\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 347,
    "question": "Show all template type codes and descriptions.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "ref_template_types",
        "columns": [
          "template_type_code",
          "template_type_description"
        ]
      }
    ],
    "gold_sql": "SELECT template_type_code ,  template_type_description FROM Ref_template_types\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 348,
    "question": "What are the type codes and descriptions for all template types?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "ref_template_types",
        "columns": [
          "template_type_code",
          "template_type_description"
        ]
      }
    ],
    "gold_sql": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 349,
    "question": "What is the template type descriptions for template type code \"AD\".",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "ref_template_types",
        "columns": [
          "template_type_code",
          "template_type_description"
        ]
      }
    ],
    "gold_sql": "SELECT template_type_description FROM Ref_template_types WHERE template_type_code  =  \"AD\"\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 350,
    "question": "Return the template type description of the template type with the code AD.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "ref_template_types",
        "columns": [
          "template_type_code",
          "template_type_description"
        ]
      }
    ],
    "gold_sql": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 351,
    "question": "What is the template type code for template type description \"Book\".",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "ref_template_types",
        "columns": [
          "template_type_code",
          "template_type_description"
        ]
      }
    ],
    "gold_sql": "SELECT template_type_code FROM Ref_template_types WHERE template_type_description  =  \"Book\"\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 352,
    "question": "Return the type code of the template type with the description \"Book\".",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "ref_template_types",
        "columns": [
          "template_type_code",
          "template_type_description"
        ]
      },
      {
        "table": "templates",
        "columns": [
          "template_type_code",
          "template_id"
        ]
      },
      {
        "table": "documents",
        "columns": [
          "template_id"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 353,
    "question": "What are the distinct template type descriptions for the templates ever used by any document?",
    "involved_table_count": 3,
    "involved_column_count": 3
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "ref_template_types",
        "columns": [
          "template_type_code",
          "template_type_description"
        ]
      },
      {
        "table": "templates",
        "columns": [
          "template_type_code",
          "template_id"
        ]
      },
      {
        "table": "documents",
        "columns": [
          "template_id"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT T1.template_type_description FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code JOIN Documents AS T3 ON T2.Template_ID  =  T3.template_ID\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 354,
    "question": "Return the different descriptions for templates that have been used in a document.",
    "involved_table_count": 3,
    "involved_column_count": 3
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "ref_template_types",
        "columns": [
          "template_type_code",
          "template_type_description"
        ]
      },
      {
        "table": "templates",
        "columns": [
          "template_type_code",
          "template_id"
        ]
      }
    ],
    "gold_sql": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 355,
    "question": "What are the template ids with template type description \"Presentation\".",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "ref_template_types",
        "columns": [
          "template_type_code",
          "template_type_description"
        ]
      },
      {
        "table": "templates",
        "columns": [
          "template_type_code",
          "template_id"
        ]
      }
    ],
    "gold_sql": "SELECT T2.template_id FROM Ref_template_types AS T1 JOIN Templates AS T2 ON T1.template_type_code  = T2.template_type_code WHERE T1.template_type_description  =  \"Presentation\"\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 356,
    "question": "Return the ids corresponding to templates with the description 'Presentation'.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "paragraphs",
        "columns": []
      }
    ],
    "gold_sql": "SELECT count(*) FROM Paragraphs\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 357,
    "question": "How many paragraphs in total?",
    "involved_table_count": 1,
    "involved_column_count": 0
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "paragraphs",
        "columns": []
      }
    ],
    "gold_sql": "SELECT count(*) FROM Paragraphs\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 358,
    "question": "Count the number of paragraphs.",
    "involved_table_count": 1,
    "involved_column_count": 0
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "paragraphs",
        "columns": [
          "document_id"
        ]
      },
      {
        "table": "documents",
        "columns": [
          "document_id",
          "document_name"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 359,
    "question": "How many paragraphs for the document with name 'Summer Show'?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "paragraphs",
        "columns": [
          "document_id"
        ]
      },
      {
        "table": "documents",
        "columns": [
          "document_id",
          "document_name"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_ID  =  T2.document_ID WHERE T2.document_name  =  'Summer Show'\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 360,
    "question": "Count the number of paragraphs in the document named 'Summer Show'.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "paragraphs",
        "columns": [
          "paragraph_text",
          "other_details"
        ]
      }
    ],
    "gold_sql": "SELECT Other_Details FROM Paragraphs WHERE paragraph_text  =  'Korea'\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 361,
    "question": "Show paragraph details for paragraph with text 'Korea'.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "paragraphs",
        "columns": [
          "paragraph_text",
          "other_details"
        ]
      }
    ],
    "gold_sql": "SELECT Other_Details FROM Paragraphs WHERE paragraph_text  =  'Korea'\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 362,
    "question": "What are the details for the paragraph that includes the text 'Korea'?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "paragraphs",
        "columns": [
          "paragraph_id",
          "document_id",
          "paragraph_text"
        ]
      },
      {
        "table": "documents",
        "columns": [
          "document_id",
          "document_name"
        ]
      }
    ],
    "gold_sql": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 363,
    "question": "Show all paragraph ids and texts for the document with name 'Welcome to NY'.",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "paragraphs",
        "columns": [
          "paragraph_id",
          "document_id",
          "paragraph_text"
        ]
      },
      {
        "table": "documents",
        "columns": [
          "document_id",
          "document_name"
        ]
      }
    ],
    "gold_sql": "SELECT T1.paragraph_id ,   T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.Document_Name  =  'Welcome to NY'\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 364,
    "question": "What are the ids and texts of paragraphs in the document titled 'Welcome to NY'?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "paragraphs",
        "columns": [
          "paragraph_text",
          "document_id"
        ]
      },
      {
        "table": "documents",
        "columns": [
          "document_id",
          "document_name"
        ]
      }
    ],
    "gold_sql": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 365,
    "question": "Show all paragraph texts for the document \"Customer reviews\".",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "paragraphs",
        "columns": [
          "paragraph_text",
          "document_id"
        ]
      },
      {
        "table": "documents",
        "columns": [
          "document_id",
          "document_name"
        ]
      }
    ],
    "gold_sql": "SELECT T1.paragraph_text FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Customer reviews\"\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 366,
    "question": "What are the paragraph texts for the document with the name 'Customer reviews'?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "paragraphs",
        "columns": [
          "document_id"
        ]
      }
    ],
    "gold_sql": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 367,
    "question": "Show all document ids and the number of paragraphs in each document. Order by document id.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "paragraphs",
        "columns": [
          "document_id"
        ]
      }
    ],
    "gold_sql": "SELECT document_id ,  count(*) FROM Paragraphs GROUP BY document_id ORDER BY document_id\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 368,
    "question": "Return the different document ids along with the number of paragraphs corresponding to each, ordered by id.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "paragraphs",
        "columns": [
          "document_id"
        ]
      },
      {
        "table": "documents",
        "columns": [
          "document_id",
          "document_name"
        ]
      }
    ],
    "gold_sql": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 369,
    "question": "Show all document ids, names and the number of paragraphs in each document.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "paragraphs",
        "columns": [
          "document_id"
        ]
      },
      {
        "table": "documents",
        "columns": [
          "document_id",
          "document_name"
        ]
      }
    ],
    "gold_sql": "SELECT T1.document_id ,  T2.document_name ,  count(*) FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 370,
    "question": "What are the ids and names of each document, as well as the number of paragraphs in each?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "paragraphs",
        "columns": [
          "document_id"
        ]
      }
    ],
    "gold_sql": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 371,
    "question": "List all document ids with at least two paragraphs.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "paragraphs",
        "columns": [
          "document_id"
        ]
      }
    ],
    "gold_sql": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*)  >=  2\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 372,
    "question": "What are the ids of documents that have 2 or more paragraphs?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "paragraphs",
        "columns": [
          "document_id"
        ]
      },
      {
        "table": "documents",
        "columns": [
          "document_id",
          "document_name"
        ]
      }
    ],
    "gold_sql": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 373,
    "question": "What is the document id and name with greatest number of paragraphs?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "paragraphs",
        "columns": [
          "document_id"
        ]
      },
      {
        "table": "documents",
        "columns": [
          "document_id",
          "document_name"
        ]
      }
    ],
    "gold_sql": "SELECT T1.document_id ,  T2.document_name FROM Paragraphs AS T1 JOIN Documents AS T2 ON T1.document_id  =  T2.document_id GROUP BY T1.document_id ORDER BY count(*) DESC LIMIT 1\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 374,
    "question": "Return the id and name of the document with the most paragraphs.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "paragraphs",
        "columns": [
          "document_id"
        ]
      }
    ],
    "gold_sql": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 375,
    "question": "What is the document id with least number of paragraphs?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "paragraphs",
        "columns": [
          "document_id"
        ]
      }
    ],
    "gold_sql": "SELECT document_id FROM Paragraphs GROUP BY document_id ORDER BY count(*) ASC LIMIT 1\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 376,
    "question": "Return the id of the document with the fewest paragraphs.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "paragraphs",
        "columns": [
          "document_id"
        ]
      }
    ],
    "gold_sql": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 377,
    "question": "What is the document id with 1 to 2 paragraphs?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "paragraphs",
        "columns": [
          "document_id"
        ]
      }
    ],
    "gold_sql": "SELECT document_id FROM Paragraphs GROUP BY document_id HAVING count(*) BETWEEN 1 AND 2\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 378,
    "question": "Give the ids of documents that have between one and two paragraphs.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "paragraphs",
        "columns": [
          "paragraph_text",
          "document_id"
        ]
      }
    ],
    "gold_sql": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 379,
    "question": "Show the document id with paragraph text 'Brazil' and 'Ireland'.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "cre_Doc_Template_Mgt",
    "tables": [
      {
        "table": "paragraphs",
        "columns": [
          "paragraph_text",
          "document_id"
        ]
      }
    ],
    "gold_sql": "SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Brazil' INTERSECT SELECT document_id FROM Paragraphs WHERE paragraph_text  =  'Ireland'\tcre_Doc_Template_Mgt",
    "remarks": "",
    "id": 380,
    "question": "What are the ids of documents that contain the paragraph text 'Brazil' and 'Ireland'?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "course_teach",
    "tables": [
      {
        "table": "teacher",
        "columns": []
      }
    ],
    "gold_sql": "SELECT count(*) FROM teacher\tcourse_teach",
    "remarks": "",
    "id": 381,
    "question": "How many teachers are there?",
    "involved_table_count": 1,
    "involved_column_count": 0
  },
  {
    "database": "course_teach",
    "tables": [
      {
        "table": "teacher",
        "columns": []
      }
    ],
    "gold_sql": "SELECT count(*) FROM teacher\tcourse_teach",
    "remarks": "",
    "id": 382,
    "question": "What is the total count of teachers?",
    "involved_table_count": 1,
    "involved_column_count": 0
  },
  {
    "database": "course_teach",
    "tables": [
      {
        "table": "teacher",
        "columns": [
          "name",
          "age"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM teacher ORDER BY Age ASC\tcourse_teach",
    "remarks": "",
    "id": 383,
    "question": "List the names of teachers in ascending order of age.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "course_teach",
    "tables": [
      {
        "table": "teacher",
        "columns": [
          "name",
          "age"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM teacher ORDER BY Age ASC\tcourse_teach",
    "remarks": "",
    "id": 384,
    "question": "What are the names of the teachers ordered by ascending age?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "course_teach",
    "tables": [
      {
        "table": "teacher",
        "columns": [
          "hometown",
          "age"
        ]
      }
    ],
    "gold_sql": "SELECT Age ,  Hometown FROM teacher\tcourse_teach",
    "remarks": "",
    "id": 385,
    "question": "What are the age and hometown of teachers?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "course_teach",
    "tables": [
      {
        "table": "teacher",
        "columns": [
          "hometown",
          "age"
        ]
      }
    ],
    "gold_sql": "SELECT Age ,  Hometown FROM teacher\tcourse_teach",
    "remarks": "",
    "id": 386,
    "question": "What is the age and hometown of every teacher?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "course_teach",
    "tables": [
      {
        "table": "teacher",
        "columns": [
          "name",
          "hometown"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM teacher WHERE Hometown != \"Little Lever Urban Distric\"\tcourse_teach",
    "remarks": "",
    "id": 387,
    "question": "List the name of teachers whose hometown is not \"Little Lever Urban District\".",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "course_teach",
    "tables": [
      {
        "table": "teacher",
        "columns": [
          "name",
          "hometown"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM teacher WHERE Hometown != \"Little Lever Urban Distric\"\tcourse_teach",
    "remarks": "",
    "id": 388,
    "question": "What are the names of the teachers whose hometown is not \"Little Lever Urban District\"?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "course_teach",
    "tables": [
      {
        "table": "teacher",
        "columns": [
          "name",
          "age"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33\tcourse_teach",
    "remarks": "",
    "id": 389,
    "question": "Show the name of teachers aged either 32 or 33?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "course_teach",
    "tables": [
      {
        "table": "teacher",
        "columns": [
          "name",
          "age"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM teacher WHERE Age  =  32 OR Age  =  33\tcourse_teach",
    "remarks": "",
    "id": 390,
    "question": "What are the names of the teachers who are aged either 32 or 33?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "course_teach",
    "tables": [
      {
        "table": "teacher",
        "columns": [
          "age",
          "hometown"
        ]
      }
    ],
    "gold_sql": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1\tcourse_teach",
    "remarks": "",
    "id": 391,
    "question": "What is the hometown of the youngest teacher?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "course_teach",
    "tables": [
      {
        "table": "teacher",
        "columns": [
          "age",
          "hometown"
        ]
      }
    ],
    "gold_sql": "SELECT Hometown FROM teacher ORDER BY Age ASC LIMIT 1\tcourse_teach",
    "remarks": "",
    "id": 392,
    "question": "Where is the youngest teacher from?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "course_teach",
    "tables": [
      {
        "table": "teacher",
        "columns": [
          "hometown"
        ]
      }
    ],
    "gold_sql": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown\tcourse_teach",
    "remarks": "",
    "id": 393,
    "question": "Show different hometown of teachers and the number of teachers from each hometown.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "course_teach",
    "tables": [
      {
        "table": "teacher",
        "columns": [
          "hometown"
        ]
      }
    ],
    "gold_sql": "SELECT Hometown ,  COUNT(*) FROM teacher GROUP BY Hometown\tcourse_teach",
    "remarks": "",
    "id": 394,
    "question": "For each hometown, how many teachers are there?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "course_teach",
    "tables": [
      {
        "table": "teacher",
        "columns": [
          "hometown"
        ]
      }
    ],
    "gold_sql": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1\tcourse_teach",
    "remarks": "",
    "id": 395,
    "question": "List the most common hometown of teachers.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "course_teach",
    "tables": [
      {
        "table": "teacher",
        "columns": [
          "hometown"
        ]
      }
    ],
    "gold_sql": "SELECT Hometown FROM teacher GROUP BY Hometown ORDER BY COUNT(*) DESC LIMIT 1\tcourse_teach",
    "remarks": "",
    "id": 396,
    "question": "What is the most commmon hometowns for teachers?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "course_teach",
    "tables": [
      {
        "table": "teacher",
        "columns": [
          "hometown"
        ]
      }
    ],
    "gold_sql": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2\tcourse_teach",
    "remarks": "",
    "id": 397,
    "question": "Show the hometowns shared by at least two teachers.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "course_teach",
    "tables": [
      {
        "table": "teacher",
        "columns": [
          "hometown"
        ]
      }
    ],
    "gold_sql": "SELECT Hometown FROM teacher GROUP BY Hometown HAVING COUNT(*)  >=  2\tcourse_teach",
    "remarks": "",
    "id": 398,
    "question": "What are the towns from which at least two teachers come from?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "course_teach",
    "tables": [
      {
        "table": "course_arrange",
        "columns": [
          "teacher_id",
          "course_id"
        ]
      },
      {
        "table": "course",
        "columns": [
          "course_id",
          "course"
        ]
      },
      {
        "table": "teacher",
        "columns": [
          "teacher_id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID\tcourse_teach",
    "remarks": "",
    "id": 399,
    "question": "Show names of teachers and the courses they are arranged to teach.",
    "involved_table_count": 3,
    "involved_column_count": 4
  },
  {
    "database": "course_teach",
    "tables": [
      {
        "table": "course_arrange",
        "columns": [
          "teacher_id",
          "course_id"
        ]
      },
      {
        "table": "course",
        "columns": [
          "course_id",
          "course"
        ]
      },
      {
        "table": "teacher",
        "columns": [
          "teacher_id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID\tcourse_teach",
    "remarks": "",
    "id": 400,
    "question": "What is the name of each teacher and what course they teach?",
    "involved_table_count": 3,
    "involved_column_count": 4
  },
  {
    "database": "course_teach",
    "tables": [
      {
        "table": "course_arrange",
        "columns": [
          "teacher_id",
          "course_id"
        ]
      },
      {
        "table": "course",
        "columns": [
          "course_id",
          "course"
        ]
      },
      {
        "table": "teacher",
        "columns": [
          "teacher_id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name\tcourse_teach",
    "remarks": "",
    "id": 401,
    "question": "Show names of teachers and the courses they are arranged to teach in ascending alphabetical order of the teacher's name.",
    "involved_table_count": 3,
    "involved_column_count": 4
  },
  {
    "database": "course_teach",
    "tables": [
      {
        "table": "course_arrange",
        "columns": [
          "teacher_id",
          "course_id"
        ]
      },
      {
        "table": "course",
        "columns": [
          "course_id",
          "course"
        ]
      },
      {
        "table": "teacher",
        "columns": [
          "teacher_id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT T3.Name ,  T2.Course FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID ORDER BY T3.Name\tcourse_teach",
    "remarks": "",
    "id": 402,
    "question": "What are the names of the teachers and the courses they teach in ascending alphabetical order by the name of the teacher?",
    "involved_table_count": 3,
    "involved_column_count": 4
  },
  {
    "database": "course_teach",
    "tables": [
      {
        "table": "course_arrange",
        "columns": [
          "teacher_id",
          "course_id"
        ]
      },
      {
        "table": "course",
        "columns": [
          "course_id",
          "course"
        ]
      },
      {
        "table": "teacher",
        "columns": [
          "teacher_id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"\tcourse_teach",
    "remarks": "",
    "id": 403,
    "question": "Show the name of the teacher for the math course.",
    "involved_table_count": 3,
    "involved_column_count": 4
  },
  {
    "database": "course_teach",
    "tables": [
      {
        "table": "course_arrange",
        "columns": [
          "teacher_id",
          "course_id"
        ]
      },
      {
        "table": "course",
        "columns": [
          "course_id",
          "course"
        ]
      },
      {
        "table": "teacher",
        "columns": [
          "teacher_id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT T3.Name FROM course_arrange AS T1 JOIN course AS T2 ON T1.Course_ID  =  T2.Course_ID JOIN teacher AS T3 ON T1.Teacher_ID  =  T3.Teacher_ID WHERE T2.Course  =  \"Math\"\tcourse_teach",
    "remarks": "",
    "id": 404,
    "question": "What are the names of the people who teach math courses?",
    "involved_table_count": 3,
    "involved_column_count": 4
  },
  {
    "database": "course_teach",
    "tables": [
      {
        "table": "course_arrange",
        "columns": [
          "teacher_id"
        ]
      },
      {
        "table": "teacher",
        "columns": [
          "teacher_id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name\tcourse_teach",
    "remarks": "",
    "id": 405,
    "question": "Show names of teachers and the number of courses they teach.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "course_teach",
    "tables": [
      {
        "table": "course_arrange",
        "columns": [
          "teacher_id"
        ]
      },
      {
        "table": "teacher",
        "columns": [
          "teacher_id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT T2.Name ,  COUNT(*) FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name\tcourse_teach",
    "remarks": "",
    "id": 406,
    "question": "What are the names of the teachers and how many courses do they teach?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "course_teach",
    "tables": [
      {
        "table": "course_arrange",
        "columns": [
          "teacher_id"
        ]
      },
      {
        "table": "teacher",
        "columns": [
          "teacher_id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2\tcourse_teach",
    "remarks": "",
    "id": 407,
    "question": "Show names of teachers that teach at least two courses.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "course_teach",
    "tables": [
      {
        "table": "course_arrange",
        "columns": [
          "teacher_id"
        ]
      },
      {
        "table": "teacher",
        "columns": [
          "teacher_id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT T2.Name FROM course_arrange AS T1 JOIN teacher AS T2 ON T1.Teacher_ID  =  T2.Teacher_ID GROUP BY T2.Name HAVING COUNT(*)  >=  2\tcourse_teach",
    "remarks": "",
    "id": 408,
    "question": "What are the names of the teachers who teach at least two courses?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "course_teach",
    "tables": [
      {
        "table": "course_arrange",
        "columns": [
          "teacher_id"
        ]
      },
      {
        "table": "teacher",
        "columns": [
          "teacher_id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)\tcourse_teach",
    "remarks": "",
    "id": 409,
    "question": "List the names of teachers who have not been arranged to teach courses.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "course_teach",
    "tables": [
      {
        "table": "course_arrange",
        "columns": [
          "teacher_id"
        ]
      },
      {
        "table": "teacher",
        "columns": [
          "teacher_id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM teacher WHERE Teacher_id NOT IN (SELECT Teacher_id FROM course_arrange)\tcourse_teach",
    "remarks": "",
    "id": 410,
    "question": "What are the names of the teachers whose courses have not been arranged?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "museum_visit",
    "tables": [
      {
        "table": "visitor",
        "columns": [
          "age"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM visitor WHERE age  <  30\tmuseum_visit",
    "remarks": "",
    "id": 411,
    "question": "How many visitors below age 30 are there?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "museum_visit",
    "tables": [
      {
        "table": "visitor",
        "columns": [
          "level_of_membership",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT name FROM visitor WHERE Level_of_membership  >  4 ORDER BY Level_of_membership DESC\tmuseum_visit",
    "remarks": "",
    "id": 412,
    "question": "Find the names of the visitors whose membership level is higher than 4, and order the results by the level from high to low.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "museum_visit",
    "tables": [
      {
        "table": "visitor",
        "columns": [
          "level_of_membership",
          "age"
        ]
      }
    ],
    "gold_sql": "SELECT avg(age) FROM visitor WHERE Level_of_membership  <=  4\tmuseum_visit",
    "remarks": "",
    "id": 413,
    "question": "What is the average age of the visitors whose membership level is not higher than 4?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "museum_visit",
    "tables": [
      {
        "table": "visitor",
        "columns": [
          "level_of_membership",
          "name",
          "age"
        ]
      }
    ],
    "gold_sql": "SELECT name ,  Level_of_membership FROM visitor WHERE Level_of_membership  >  4 ORDER BY age DESC\tmuseum_visit",
    "remarks": "",
    "id": 414,
    "question": "Find the name and membership level of the visitors whose membership level is higher than 4, and sort by their age from old to young.",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "museum_visit",
    "tables": [
      {
        "table": "museum",
        "columns": [
          "museum_id",
          "name",
          "num_of_staff"
        ]
      }
    ],
    "gold_sql": "SELECT museum_id ,  name FROM museum ORDER BY num_of_staff DESC LIMIT 1\tmuseum_visit",
    "remarks": "",
    "id": 415,
    "question": "Find the id and name of the museum that has the most staff members?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "museum_visit",
    "tables": [
      {
        "table": "museum",
        "columns": [
          "open_year",
          "num_of_staff"
        ]
      }
    ],
    "gold_sql": "SELECT avg(num_of_staff) FROM museum WHERE open_year  <  2009\tmuseum_visit",
    "remarks": "",
    "id": 416,
    "question": "Find the average number of staff working for the museums that were open before 2009.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "museum_visit",
    "tables": [
      {
        "table": "museum",
        "columns": [
          "open_year",
          "name",
          "num_of_staff"
        ]
      }
    ],
    "gold_sql": "SELECT Num_of_Staff ,  Open_Year FROM museum WHERE name  =  'Plaza Museum'\tmuseum_visit",
    "remarks": "",
    "id": 417,
    "question": "What are the opening year and staff number of the museum named Plaza Museum?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "museum_visit",
    "tables": [
      {
        "table": "museum",
        "columns": [
          "open_year",
          "name",
          "num_of_staff"
        ]
      }
    ],
    "gold_sql": "SELECT name FROM museum WHERE num_of_staff  >  (SELECT min(num_of_staff) FROM museum WHERE open_year  >  2010)\tmuseum_visit",
    "remarks": "",
    "id": 418,
    "question": "find the names of museums which have more staff than the minimum staff number of all museums opened after 2010.",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "museum_visit",
    "tables": [
      {
        "table": "visitor",
        "columns": [
          "id",
          "name",
          "age"
        ]
      },
      {
        "table": "visit",
        "columns": [
          "visitor_id"
        ]
      }
    ],
    "gold_sql": "SELECT t1.id ,  t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t1.id HAVING count(*)  >  1\tmuseum_visit",
    "remarks": "",
    "id": 419,
    "question": "find the id, name and age for visitors who visited some museums more than once.",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "museum_visit",
    "tables": [
      {
        "table": "visitor",
        "columns": [
          "level_of_membership",
          "name",
          "id"
        ]
      },
      {
        "table": "visit",
        "columns": [
          "total_spent",
          "visitor_id"
        ]
      }
    ],
    "gold_sql": "SELECT t2.visitor_id ,  t1.name ,  t1.Level_of_membership FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id GROUP BY t2.visitor_id ORDER BY sum(t2.Total_spent) DESC LIMIT 1\tmuseum_visit",
    "remarks": "",
    "id": 420,
    "question": "What are the id, name and membership level of visitors who have spent the largest amount of money in total in all museum tickets?",
    "involved_table_count": 2,
    "involved_column_count": 5
  },
  {
    "database": "museum_visit",
    "tables": [
      {
        "table": "museum",
        "columns": [
          "museum_id",
          "name"
        ]
      },
      {
        "table": "visit",
        "columns": [
          "museum_id"
        ]
      }
    ],
    "gold_sql": "SELECT t2.Museum_ID ,  t1.name FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID GROUP BY t2.Museum_ID ORDER BY count(*) DESC LIMIT 1\tmuseum_visit",
    "remarks": "",
    "id": 421,
    "question": "What are the id and name of the museum visited most times?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "museum_visit",
    "tables": [
      {
        "table": "visit",
        "columns": [
          "museum_id"
        ]
      },
      {
        "table": "museum",
        "columns": [
          "museum_id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT name FROM museum WHERE Museum_ID NOT IN (SELECT museum_id FROM visit)\tmuseum_visit",
    "remarks": "",
    "id": 422,
    "question": "What is the name of the museum that had no visitor yet?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "museum_visit",
    "tables": [
      {
        "table": "visitor",
        "columns": [
          "id",
          "name",
          "age"
        ]
      },
      {
        "table": "visit",
        "columns": [
          "num_of_ticket",
          "visitor_id"
        ]
      }
    ],
    "gold_sql": "SELECT t1.name ,  t1.age FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id ORDER BY t2.num_of_ticket DESC LIMIT 1\tmuseum_visit",
    "remarks": "",
    "id": 423,
    "question": "Find the name and age of the visitor who bought the most tickets at once.",
    "involved_table_count": 2,
    "involved_column_count": 5
  },
  {
    "database": "museum_visit",
    "tables": [
      {
        "table": "visit",
        "columns": [
          "num_of_ticket"
        ]
      }
    ],
    "gold_sql": "SELECT avg(num_of_ticket) ,  max(num_of_ticket) FROM visit\tmuseum_visit",
    "remarks": "",
    "id": 424,
    "question": "What are the average and maximum number of tickets bought in all visits?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "museum_visit",
    "tables": [
      {
        "table": "visitor",
        "columns": [
          "id",
          "level_of_membership"
        ]
      },
      {
        "table": "visit",
        "columns": [
          "total_spent",
          "visitor_id"
        ]
      }
    ],
    "gold_sql": "SELECT sum(t2.Total_spent) FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id WHERE t1.Level_of_membership  =  1\tmuseum_visit",
    "remarks": "",
    "id": 425,
    "question": "What is the total ticket expense of the visitors whose membership level is 1?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "museum_visit",
    "tables": [
      {
        "table": "visitor",
        "columns": [
          "id",
          "name"
        ]
      },
      {
        "table": "visit",
        "columns": [
          "museum_id",
          "visitor_id"
        ]
      },
      {
        "table": "museum",
        "columns": [
          "open_year",
          "museum_id"
        ]
      }
    ],
    "gold_sql": "SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  <  2009 INTERSECT SELECT t1.name FROM visitor AS t1 JOIN visit AS t2 ON t1.id  =  t2.visitor_id JOIN museum AS t3 ON t3.Museum_ID  =  t2.Museum_ID WHERE t3.open_year  >  2011\tmuseum_visit",
    "remarks": "",
    "id": 426,
    "question": "What is the name of the visitor who visited both a museum opened before 2009 and a museum opened after 2011?",
    "involved_table_count": 3,
    "involved_column_count": 5
  },
  {
    "database": "museum_visit",
    "tables": [
      {
        "table": "museum",
        "columns": [
          "open_year",
          "museum_id"
        ]
      },
      {
        "table": "visit",
        "columns": [
          "museum_id",
          "visitor_id"
        ]
      },
      {
        "table": "visitor",
        "columns": [
          "id"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM visitor WHERE id NOT IN (SELECT t2.visitor_id FROM museum AS t1 JOIN visit AS t2 ON t1.Museum_ID  =  t2.Museum_ID WHERE t1.open_year  >  2010)\tmuseum_visit",
    "remarks": "",
    "id": 427,
    "question": "Find the number of visitors who did not visit any museum opened after 2010.",
    "involved_table_count": 3,
    "involved_column_count": 4
  },
  {
    "database": "museum_visit",
    "tables": [
      {
        "table": "museum",
        "columns": [
          "open_year"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM museum WHERE open_year  >  2013 OR open_year  <  2008\tmuseum_visit",
    "remarks": "",
    "id": 428,
    "question": "How many museums were opened after 2013 or before 2008?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "players",
        "columns": []
      }
    ],
    "gold_sql": "SELECT count(*) FROM players\twta_1",
    "remarks": "",
    "id": 429,
    "question": "Find the total number of players.",
    "involved_table_count": 1,
    "involved_column_count": 0
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "players",
        "columns": []
      }
    ],
    "gold_sql": "SELECT count(*) FROM players\twta_1",
    "remarks": "",
    "id": 430,
    "question": "How many players are there?",
    "involved_table_count": 1,
    "involved_column_count": 0
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "matches",
        "columns": []
      }
    ],
    "gold_sql": "SELECT count(*) FROM matches\twta_1",
    "remarks": "",
    "id": 431,
    "question": "Find the total number of matches.",
    "involved_table_count": 1,
    "involved_column_count": 0
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "matches",
        "columns": []
      }
    ],
    "gold_sql": "SELECT count(*) FROM matches\twta_1",
    "remarks": "",
    "id": 432,
    "question": "Count the number of matches.",
    "involved_table_count": 1,
    "involved_column_count": 0
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "players",
        "columns": [
          "country_code",
          "first_name",
          "birth_date"
        ]
      }
    ],
    "gold_sql": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'\twta_1",
    "remarks": "",
    "id": 433,
    "question": "List the first name and birth date of all players from the country with code USA.",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "players",
        "columns": [
          "country_code",
          "first_name",
          "birth_date"
        ]
      }
    ],
    "gold_sql": "SELECT first_name ,  birth_date FROM players WHERE country_code  =  'USA'\twta_1",
    "remarks": "",
    "id": 434,
    "question": "What are the first names and birth dates of players from the USA?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "matches",
        "columns": [
          "loser_age",
          "winner_age"
        ]
      }
    ],
    "gold_sql": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches\twta_1",
    "remarks": "",
    "id": 435,
    "question": "Find the average age of losers and winners of all matches.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "matches",
        "columns": [
          "loser_age",
          "winner_age"
        ]
      }
    ],
    "gold_sql": "SELECT avg(loser_age) ,  avg(winner_age) FROM matches\twta_1",
    "remarks": "",
    "id": 436,
    "question": "What are the average ages of losers and winners across matches?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "matches",
        "columns": [
          "winner_rank"
        ]
      }
    ],
    "gold_sql": "SELECT avg(winner_rank) FROM matches\twta_1",
    "remarks": "",
    "id": 437,
    "question": "Find the average rank of winners in all matches.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "matches",
        "columns": [
          "winner_rank"
        ]
      }
    ],
    "gold_sql": "SELECT avg(winner_rank) FROM matches\twta_1",
    "remarks": "",
    "id": 438,
    "question": "What is the average rank for winners in all matches?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "matches",
        "columns": [
          "loser_rank"
        ]
      }
    ],
    "gold_sql": "SELECT min(loser_rank) FROM matches\twta_1",
    "remarks": "",
    "id": 439,
    "question": "Find the highest rank of losers in all matches.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "matches",
        "columns": [
          "loser_rank"
        ]
      }
    ],
    "gold_sql": "SELECT min(loser_rank) FROM matches\twta_1",
    "remarks": "",
    "id": 440,
    "question": "What is the best rank of losers across all matches?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "players",
        "columns": [
          "country_code"
        ]
      }
    ],
    "gold_sql": "SELECT count(DISTINCT country_code) FROM players\twta_1",
    "remarks": "",
    "id": 441,
    "question": "find the number of distinct country codes of all players.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "players",
        "columns": [
          "country_code"
        ]
      }
    ],
    "gold_sql": "SELECT count(DISTINCT country_code) FROM players\twta_1",
    "remarks": "",
    "id": 442,
    "question": "How many distinct countries do players come from?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "matches",
        "columns": [
          "loser_name"
        ]
      }
    ],
    "gold_sql": "SELECT count(DISTINCT loser_name) FROM matches\twta_1",
    "remarks": "",
    "id": 443,
    "question": "Find the number of distinct name of losers.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "matches",
        "columns": [
          "loser_name"
        ]
      }
    ],
    "gold_sql": "SELECT count(DISTINCT loser_name) FROM matches\twta_1",
    "remarks": "",
    "id": 444,
    "question": "How many different loser names are there?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "matches",
        "columns": [
          "tourney_name"
        ]
      }
    ],
    "gold_sql": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10\twta_1",
    "remarks": "",
    "id": 445,
    "question": "Find the name of tourney that has more than 10 matches.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "matches",
        "columns": [
          "tourney_name"
        ]
      }
    ],
    "gold_sql": "SELECT tourney_name FROM matches GROUP BY tourney_name HAVING count(*)  >  10\twta_1",
    "remarks": "",
    "id": 446,
    "question": "What are the names of tournaments that have more than 10 matches?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "matches",
        "columns": [
          "year",
          "winner_name"
        ]
      }
    ],
    "gold_sql": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016\twta_1",
    "remarks": "",
    "id": 447,
    "question": "List the names of all winners who played in both 2013 and 2016.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "matches",
        "columns": [
          "year",
          "winner_name"
        ]
      }
    ],
    "gold_sql": "SELECT winner_name FROM matches WHERE YEAR  =  2013 INTERSECT SELECT winner_name FROM matches WHERE YEAR  =  2016\twta_1",
    "remarks": "",
    "id": 448,
    "question": "What are the names of players who won in both 2013 and 2016?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "matches",
        "columns": [
          "year"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016\twta_1",
    "remarks": "",
    "id": 449,
    "question": "List the number of all matches who played in years of 2013 or 2016.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "matches",
        "columns": [
          "year"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM matches WHERE YEAR  =  2013 OR YEAR  =  2016\twta_1",
    "remarks": "",
    "id": 450,
    "question": "How many matches were played in 2013 or 2016?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "players",
        "columns": [
          "player_id",
          "country_code",
          "first_name"
        ]
      },
      {
        "table": "matches",
        "columns": [
          "winner_id",
          "tourney_name"
        ]
      }
    ],
    "gold_sql": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'\twta_1",
    "remarks": "",
    "id": 451,
    "question": "What are the country code and first name of the players who won in both tourney WTA Championships and Australian Open?",
    "involved_table_count": 2,
    "involved_column_count": 5
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "players",
        "columns": [
          "player_id",
          "country_code",
          "first_name"
        ]
      },
      {
        "table": "matches",
        "columns": [
          "winner_id",
          "tourney_name"
        ]
      }
    ],
    "gold_sql": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'WTA Championships' INTERSECT SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id WHERE T2.tourney_name  =  'Australian Open'\twta_1",
    "remarks": "",
    "id": 452,
    "question": "What are the first names and country codes for players who won both the WTA Championships and the Australian Open?",
    "involved_table_count": 2,
    "involved_column_count": 5
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "players",
        "columns": [
          "country_code",
          "first_name",
          "birth_date"
        ]
      }
    ],
    "gold_sql": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1\twta_1",
    "remarks": "",
    "id": 453,
    "question": "Find the first name and country code of the oldest player.",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "players",
        "columns": [
          "country_code",
          "first_name",
          "birth_date"
        ]
      }
    ],
    "gold_sql": "SELECT first_name ,  country_code FROM players ORDER BY birth_date LIMIT 1\twta_1",
    "remarks": "",
    "id": 454,
    "question": "What is the first name and country code of the oldest player?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "players",
        "columns": [
          "last_name",
          "first_name",
          "birth_date"
        ]
      }
    ],
    "gold_sql": "SELECT first_name ,  last_name FROM players ORDER BY birth_date\twta_1",
    "remarks": "",
    "id": 455,
    "question": "List the first and last name of all players in the order of birth date.",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "players",
        "columns": [
          "last_name",
          "first_name",
          "birth_date"
        ]
      }
    ],
    "gold_sql": "SELECT first_name ,  last_name FROM players ORDER BY birth_date\twta_1",
    "remarks": "",
    "id": 456,
    "question": "What are the full names of all players, sorted by birth date?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "players",
        "columns": [
          "last_name",
          "hand",
          "first_name",
          "birth_date"
        ]
      }
    ],
    "gold_sql": "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date\twta_1",
    "remarks": "",
    "id": 457,
    "question": "List the first and last name of all players who are left / L hand in the order of birth date.",
    "involved_table_count": 1,
    "involved_column_count": 4
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "players",
        "columns": [
          "last_name",
          "hand",
          "first_name",
          "birth_date"
        ]
      }
    ],
    "gold_sql": "SELECT first_name ,  last_name FROM players WHERE hand  =  'L' ORDER BY birth_date\twta_1",
    "remarks": "",
    "id": 458,
    "question": "What are the full names of all left handed players, in order of birth date?",
    "involved_table_count": 1,
    "involved_column_count": 4
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "players",
        "columns": [
          "player_id",
          "country_code",
          "first_name"
        ]
      },
      {
        "table": "rankings",
        "columns": [
          "tours",
          "player_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1\twta_1",
    "remarks": "",
    "id": 459,
    "question": "Find the first name and country code of the player who did the most number of tours.",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "players",
        "columns": [
          "player_id",
          "country_code",
          "first_name"
        ]
      },
      {
        "table": "rankings",
        "columns": [
          "tours",
          "player_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.country_code ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id ORDER BY T2.tours DESC LIMIT 1\twta_1",
    "remarks": "",
    "id": 460,
    "question": "What is the first name and country code of the player with the most tours?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "matches",
        "columns": [
          "year"
        ]
      }
    ],
    "gold_sql": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1\twta_1",
    "remarks": "",
    "id": 461,
    "question": "Find the year that has the most number of matches.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "matches",
        "columns": [
          "year"
        ]
      }
    ],
    "gold_sql": "SELECT YEAR FROM matches GROUP BY YEAR ORDER BY count(*) DESC LIMIT 1\twta_1",
    "remarks": "",
    "id": 462,
    "question": "Which year had the most matches?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "matches",
        "columns": [
          "winner_name",
          "winner_rank_points"
        ]
      }
    ],
    "gold_sql": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1\twta_1",
    "remarks": "",
    "id": 463,
    "question": "Find the name and rank points of the winner who won the most times.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "matches",
        "columns": [
          "winner_name",
          "winner_rank_points"
        ]
      }
    ],
    "gold_sql": "SELECT winner_name ,  winner_rank_points FROM matches GROUP BY winner_name ORDER BY count(*) DESC LIMIT 1\twta_1",
    "remarks": "",
    "id": 464,
    "question": "What is the name of the winner who has won the most matches, and how many rank points does this player have?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "matches",
        "columns": [
          "winner_name",
          "tourney_name",
          "winner_rank_points"
        ]
      }
    ],
    "gold_sql": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1\twta_1",
    "remarks": "",
    "id": 465,
    "question": "Find the name of the winner who has the highest rank points and participated in the Australian Open tourney.",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "matches",
        "columns": [
          "winner_name",
          "tourney_name",
          "winner_rank_points"
        ]
      }
    ],
    "gold_sql": "SELECT winner_name FROM matches WHERE tourney_name  =  'Australian Open' ORDER BY winner_rank_points DESC LIMIT 1\twta_1",
    "remarks": "",
    "id": 466,
    "question": "What is the name of the winner with the most rank points who participated in the Australian Open tournament?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "matches",
        "columns": [
          "loser_name",
          "winner_name",
          "minutes"
        ]
      }
    ],
    "gold_sql": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1\twta_1",
    "remarks": "",
    "id": 467,
    "question": "find the names of loser and winner who played in the match with greatest number of minutes.",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "matches",
        "columns": [
          "loser_name",
          "winner_name",
          "minutes"
        ]
      }
    ],
    "gold_sql": "SELECT winner_name ,  loser_name FROM matches ORDER BY minutes DESC LIMIT 1\twta_1",
    "remarks": "",
    "id": 468,
    "question": "What are the names of the winner and loser who played in the longest match?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "players",
        "columns": [
          "player_id",
          "first_name"
        ]
      },
      {
        "table": "rankings",
        "columns": [
          "player_id"
        ]
      }
    ],
    "gold_sql": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name\twta_1",
    "remarks": "Qualification failed: Column '\"ranking\"' could not be resolved.",
    "id": 469,
    "question": "Find the average ranking for each player and their first name.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "players",
        "columns": [
          "player_id",
          "first_name"
        ]
      },
      {
        "table": "rankings",
        "columns": [
          "player_id"
        ]
      }
    ],
    "gold_sql": "SELECT avg(ranking) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name\twta_1",
    "remarks": "Qualification failed: Column '\"ranking\"' could not be resolved.",
    "id": 470,
    "question": "What are the first names of all players, and their average rankings?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "players",
        "columns": [
          "player_id",
          "first_name"
        ]
      },
      {
        "table": "rankings",
        "columns": [
          "player_id"
        ]
      }
    ],
    "gold_sql": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name\twta_1",
    "remarks": "Qualification failed: Column '\"ranking_points\"' could not be resolved.",
    "id": 471,
    "question": "Find the total ranking points for each player and their first name.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "players",
        "columns": [
          "player_id",
          "first_name"
        ]
      },
      {
        "table": "rankings",
        "columns": [
          "player_id"
        ]
      }
    ],
    "gold_sql": "SELECT sum(ranking_points) ,  T1.first_name FROM players AS T1 JOIN rankings AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.first_name\twta_1",
    "remarks": "Qualification failed: Column '\"ranking_points\"' could not be resolved.",
    "id": 472,
    "question": "What are the first names of all players, and their total ranking points?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "players",
        "columns": [
          "country_code"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) ,  country_code FROM players GROUP BY country_code\twta_1",
    "remarks": "",
    "id": 473,
    "question": "find the number of players for each country.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "players",
        "columns": [
          "country_code"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) ,  country_code FROM players GROUP BY country_code\twta_1",
    "remarks": "",
    "id": 474,
    "question": "How many players are from each country?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "players",
        "columns": [
          "country_code"
        ]
      }
    ],
    "gold_sql": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1\twta_1",
    "remarks": "",
    "id": 475,
    "question": "find the code of the country where has the greatest number of players.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "players",
        "columns": [
          "country_code"
        ]
      }
    ],
    "gold_sql": "SELECT country_code FROM players GROUP BY country_code ORDER BY count(*) DESC LIMIT 1\twta_1",
    "remarks": "",
    "id": 476,
    "question": "What is the code of the country with the most players?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "players",
        "columns": [
          "country_code"
        ]
      }
    ],
    "gold_sql": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50\twta_1",
    "remarks": "",
    "id": 477,
    "question": "Find the codes of countries that have more than 50 players.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "players",
        "columns": [
          "country_code"
        ]
      }
    ],
    "gold_sql": "SELECT country_code FROM players GROUP BY country_code HAVING count(*)  >  50\twta_1",
    "remarks": "",
    "id": 478,
    "question": "What are the codes of countries with more than 50 players?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "rankings",
        "columns": [
          "tours",
          "ranking_date"
        ]
      }
    ],
    "gold_sql": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date\twta_1",
    "remarks": "",
    "id": 479,
    "question": "Find the total number of tours for each ranking date.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "rankings",
        "columns": [
          "tours",
          "ranking_date"
        ]
      }
    ],
    "gold_sql": "SELECT sum(tours) ,  ranking_date FROM rankings GROUP BY ranking_date\twta_1",
    "remarks": "",
    "id": 480,
    "question": "How many total tours were there for each ranking date?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "matches",
        "columns": [
          "year"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR\twta_1",
    "remarks": "",
    "id": 481,
    "question": "Find the number of matches happened in each year.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "matches",
        "columns": [
          "year"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) ,  YEAR FROM matches GROUP BY YEAR\twta_1",
    "remarks": "",
    "id": 482,
    "question": "How many matches were played in each year?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "matches",
        "columns": [
          "winner_age",
          "winner_name",
          "winner_rank"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3\twta_1",
    "remarks": "",
    "id": 483,
    "question": "Find the name and rank of the 3 youngest winners across all matches.",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "matches",
        "columns": [
          "winner_age",
          "winner_name",
          "winner_rank"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT winner_name ,  winner_rank FROM matches ORDER BY winner_age LIMIT 3\twta_1",
    "remarks": "",
    "id": 484,
    "question": "What are the names and ranks of the three youngest winners across all matches?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "matches",
        "columns": [
          "winner_hand",
          "winner_name",
          "tourney_name"
        ]
      }
    ],
    "gold_sql": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'\twta_1",
    "remarks": "",
    "id": 485,
    "question": "How many different winners both participated in the WTA Championships and were left handed?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "matches",
        "columns": [
          "winner_hand",
          "winner_name",
          "tourney_name"
        ]
      }
    ],
    "gold_sql": "SELECT count(DISTINCT winner_name) FROM matches WHERE tourney_name  =  'WTA Championships' AND winner_hand  =  'L'\twta_1",
    "remarks": "",
    "id": 486,
    "question": "Find the number of left handed winners who participated in the WTA Championships.",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "players",
        "columns": [
          "player_id",
          "country_code",
          "first_name",
          "birth_date"
        ]
      },
      {
        "table": "matches",
        "columns": [
          "winner_id",
          "winner_rank_points"
        ]
      }
    ],
    "gold_sql": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1\twta_1",
    "remarks": "",
    "id": 487,
    "question": "Find the first name, country code and birth date of the winner who has the highest rank points in all matches.",
    "involved_table_count": 2,
    "involved_column_count": 6
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "players",
        "columns": [
          "player_id",
          "country_code",
          "first_name",
          "birth_date"
        ]
      },
      {
        "table": "matches",
        "columns": [
          "winner_id",
          "winner_rank_points"
        ]
      }
    ],
    "gold_sql": "SELECT T1.first_name ,  T1.country_code ,  T1.birth_date FROM players AS T1 JOIN matches AS T2 ON T1.player_id  =  T2.winner_id ORDER BY T2.winner_rank_points DESC LIMIT 1\twta_1",
    "remarks": "",
    "id": 488,
    "question": "What is the first name, country code, and birth date of the player with the most winner rank points across all matches?",
    "involved_table_count": 2,
    "involved_column_count": 6
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "players",
        "columns": [
          "hand"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) ,  hand FROM players GROUP BY hand\twta_1",
    "remarks": "",
    "id": 489,
    "question": "Find the number of players for each hand type.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "wta_1",
    "tables": [
      {
        "table": "players",
        "columns": [
          "hand"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) ,  hand FROM players GROUP BY hand\twta_1",
    "remarks": "",
    "id": 490,
    "question": "How many players are there for each hand type?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "battle_death",
    "tables": [
      {
        "table": "ship",
        "columns": [
          "disposition_of_ship"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM ship WHERE disposition_of_ship  =  'Captured'\tbattle_death",
    "remarks": "",
    "id": 491,
    "question": "How many ships ended up being 'Captured'?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "battle_death",
    "tables": [
      {
        "table": "ship",
        "columns": [
          "tonnage",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT name ,  tonnage FROM ship ORDER BY name DESC\tbattle_death",
    "remarks": "",
    "id": 492,
    "question": "List the name and tonnage ordered by in descending alphaetical order for the names.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "battle_death",
    "tables": [
      {
        "table": "battle",
        "columns": [
          "name",
          "date"
        ]
      }
    ],
    "gold_sql": "SELECT name ,  date FROM battle\tbattle_death",
    "remarks": "",
    "id": 493,
    "question": "List the name, date and result of each battle.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "battle_death",
    "tables": [
      {
        "table": "death",
        "columns": [
          "killed"
        ]
      }
    ],
    "gold_sql": "SELECT max(killed) ,  min(killed) FROM death\tbattle_death",
    "remarks": "",
    "id": 494,
    "question": "What is maximum and minimum death toll caused each time?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "battle_death",
    "tables": [
      {
        "table": "death",
        "columns": [
          "injured"
        ]
      }
    ],
    "gold_sql": "SELECT avg(injured) FROM death\tbattle_death",
    "remarks": "",
    "id": 495,
    "question": "What is the average number of injuries caused each time?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "battle_death",
    "tables": [
      {
        "table": "death",
        "columns": [
          "injured",
          "killed",
          "caused_by_ship_id"
        ]
      },
      {
        "table": "ship",
        "columns": [
          "tonnage",
          "id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.killed ,  T1.injured FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id WHERE T2.tonnage  =  't'\tbattle_death",
    "remarks": "",
    "id": 496,
    "question": "What are the death and injury situations caused by the ship with tonnage 't'?",
    "involved_table_count": 2,
    "involved_column_count": 5
  },
  {
    "database": "battle_death",
    "tables": [
      {
        "table": "battle",
        "columns": [
          "bulgarian_commander",
          "result",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT name ,  RESULT FROM battle WHERE bulgarian_commander != 'Boril'\tbattle_death",
    "remarks": "",
    "id": 497,
    "question": "What are the name and results of the battles when the bulgarian commander is not 'Boril'",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "battle_death",
    "tables": [
      {
        "table": "battle",
        "columns": [
          "id",
          "name"
        ]
      },
      {
        "table": "ship",
        "columns": [
          "ship_type",
          "lost_in_battle"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.ship_type  =  'Brig'\tbattle_death",
    "remarks": "",
    "id": 498,
    "question": "What are the different ids and names of the battles that lost any 'Brig' type shipes?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "battle_death",
    "tables": [
      {
        "table": "battle",
        "columns": [
          "id",
          "name"
        ]
      },
      {
        "table": "ship",
        "columns": [
          "id",
          "lost_in_battle"
        ]
      },
      {
        "table": "death",
        "columns": [
          "killed",
          "caused_by_ship_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.id ,  T1.name FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle JOIN death AS T3 ON T2.id  =  T3.caused_by_ship_id GROUP BY T1.id HAVING sum(T3.killed)  >  10\tbattle_death",
    "remarks": "",
    "id": 499,
    "question": "What are the ids and names of the battles that led to more than 10 people killed in total.",
    "involved_table_count": 3,
    "involved_column_count": 5
  },
  {
    "database": "battle_death",
    "tables": [
      {
        "table": "death",
        "columns": [
          "caused_by_ship_id"
        ]
      },
      {
        "table": "ship",
        "columns": [
          "id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT T2.id ,  T2.name FROM death AS T1 JOIN ship AS t2 ON T1.caused_by_ship_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1\tbattle_death",
    "remarks": "",
    "id": 500,
    "question": "What is the ship id and name that caused most total injuries?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "battle_death",
    "tables": [
      {
        "table": "battle",
        "columns": [
          "bulgarian_commander",
          "name",
          "latin_commander"
        ]
      }
    ],
    "gold_sql": "SELECT name FROM battle WHERE bulgarian_commander  =  'Kaloyan' AND latin_commander  =  'Baldwin I'\tbattle_death",
    "remarks": "",
    "id": 501,
    "question": "What are the distinct battle names which are between bulgarian commander 'Kaloyan' and latin commander 'Baldwin I'?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "battle_death",
    "tables": [
      {
        "table": "battle",
        "columns": [
          "result"
        ]
      }
    ],
    "gold_sql": "SELECT count(DISTINCT RESULT) FROM battle\tbattle_death",
    "remarks": "",
    "id": 502,
    "question": "How many different results are there for the battles?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "battle_death",
    "tables": [
      {
        "table": "ship",
        "columns": [
          "tonnage",
          "lost_in_battle"
        ]
      },
      {
        "table": "battle",
        "columns": [
          "id"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM battle WHERE id NOT IN ( SELECT lost_in_battle FROM ship WHERE tonnage  =  '225' );\tbattle_death",
    "remarks": "",
    "id": 503,
    "question": "How many battles did not lose any ship with tonnage '225'?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "battle_death",
    "tables": [
      {
        "table": "battle",
        "columns": [
          "id",
          "name",
          "date"
        ]
      },
      {
        "table": "ship",
        "columns": [
          "name",
          "lost_in_battle"
        ]
      }
    ],
    "gold_sql": "SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'Lettice' INTERSECT SELECT T1.name ,  T1.date FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.name  =  'HMS Atalanta'\tbattle_death",
    "remarks": "",
    "id": 504,
    "question": "List the name and date the battle that has lost the ship named 'Lettice' and the ship named 'HMS Atalanta'",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "battle_death",
    "tables": [
      {
        "table": "battle",
        "columns": [
          "bulgarian_commander",
          "result",
          "name",
          "id"
        ]
      },
      {
        "table": "ship",
        "columns": [
          "location",
          "lost_in_battle"
        ]
      }
    ],
    "gold_sql": "SELECT name ,  RESULT ,  bulgarian_commander FROM battle EXCEPT SELECT T1.name ,  T1.result ,  T1.bulgarian_commander FROM battle AS T1 JOIN ship AS T2 ON T1.id  =  T2.lost_in_battle WHERE T2.location  =  'English Channel'\tbattle_death",
    "remarks": "",
    "id": 505,
    "question": "Show names, results and bulgarian commanders of the battles with no ships lost in the 'English Channel'.",
    "involved_table_count": 2,
    "involved_column_count": 6
  },
  {
    "database": "battle_death",
    "tables": [
      {
        "table": "death",
        "columns": [
          "note"
        ]
      }
    ],
    "gold_sql": "SELECT note FROM death WHERE note LIKE '%East%'\tbattle_death",
    "remarks": "",
    "id": 506,
    "question": "What are the notes of the death events which has substring 'East'?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "addresses",
        "columns": [
          "line_1",
          "line_2"
        ]
      }
    ],
    "gold_sql": "SELECT line_1 ,  line_2 FROM addresses\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 507,
    "question": "what are all the addresses including line 1 and line 2?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "addresses",
        "columns": [
          "line_1",
          "line_2"
        ]
      }
    ],
    "gold_sql": "SELECT line_1 ,  line_2 FROM addresses\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 508,
    "question": "What is the first and second line for all addresses?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "courses",
        "columns": []
      }
    ],
    "gold_sql": "SELECT count(*) FROM Courses\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 509,
    "question": "How many courses in total are listed?",
    "involved_table_count": 1,
    "involved_column_count": 0
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "courses",
        "columns": []
      }
    ],
    "gold_sql": "SELECT count(*) FROM Courses\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 510,
    "question": "How many courses are there?",
    "involved_table_count": 1,
    "involved_column_count": 0
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "courses",
        "columns": [
          "course_name",
          "course_description"
        ]
      }
    ],
    "gold_sql": "SELECT course_description FROM Courses WHERE course_name  =  'math'\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 511,
    "question": "How is the math course described?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "courses",
        "columns": [
          "course_name",
          "course_description"
        ]
      }
    ],
    "gold_sql": "SELECT course_description FROM Courses WHERE course_name  =  'math'\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 512,
    "question": "What are the descriptions for all the math courses?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "addresses",
        "columns": [
          "city",
          "zip_postcode"
        ]
      }
    ],
    "gold_sql": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 513,
    "question": "What is the zip code of the address in the city Port Chelsea?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "addresses",
        "columns": [
          "city",
          "zip_postcode"
        ]
      }
    ],
    "gold_sql": "SELECT zip_postcode FROM Addresses WHERE city  =  'Port Chelsea'\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 514,
    "question": "What is the zip code for Port Chelsea?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "degree_programs",
        "columns": [
          "department_id"
        ]
      },
      {
        "table": "departments",
        "columns": [
          "department_name",
          "department_id"
        ]
      }
    ],
    "gold_sql": "SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 515,
    "question": "Which department offers the most number of degrees? List department name and id.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "degree_programs",
        "columns": [
          "department_id"
        ]
      },
      {
        "table": "departments",
        "columns": [
          "department_name",
          "department_id"
        ]
      }
    ],
    "gold_sql": "SELECT T2.department_name ,  T1.department_id FROM Degree_Programs AS T1 JOIN Departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id ORDER BY count(*) DESC LIMIT 1\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 516,
    "question": "For each department id, what is the name of the department with the most number of degrees?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "degree_programs",
        "columns": [
          "department_id"
        ]
      }
    ],
    "gold_sql": "SELECT count(DISTINCT department_id) FROM Degree_Programs\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 517,
    "question": "How many departments offer any degree?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "degree_programs",
        "columns": [
          "department_id"
        ]
      }
    ],
    "gold_sql": "SELECT count(DISTINCT department_id) FROM Degree_Programs\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 518,
    "question": "How many different departments offer degrees?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "degree_programs",
        "columns": [
          "degree_summary_name"
        ]
      }
    ],
    "gold_sql": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 519,
    "question": "How many different degree names are offered?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "degree_programs",
        "columns": [
          "degree_summary_name"
        ]
      }
    ],
    "gold_sql": "SELECT count(DISTINCT degree_summary_name) FROM Degree_Programs\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 520,
    "question": "How many different degrees are offered?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "departments",
        "columns": [
          "department_name",
          "department_id"
        ]
      },
      {
        "table": "degree_programs",
        "columns": [
          "department_id"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 521,
    "question": "How many degrees does the engineering department offer?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "departments",
        "columns": [
          "department_name",
          "department_id"
        ]
      },
      {
        "table": "degree_programs",
        "columns": [
          "department_id"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM Departments AS T1 JOIN Degree_Programs AS T2 ON T1.department_id  =  T2.department_id WHERE T1.department_name  =  'engineer'\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 522,
    "question": "How many degrees does the engineering department have?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "sections",
        "columns": [
          "section_name",
          "section_description"
        ]
      }
    ],
    "gold_sql": "SELECT section_name ,  section_description FROM Sections\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 523,
    "question": "What are the names and descriptions of all the sections?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "sections",
        "columns": [
          "section_name",
          "section_description"
        ]
      }
    ],
    "gold_sql": "SELECT section_name ,  section_description FROM Sections\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 524,
    "question": "What are the names and descriptions for all the sections?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "courses",
        "columns": [
          "course_name",
          "course_id"
        ]
      },
      {
        "table": "sections",
        "columns": [
          "course_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 525,
    "question": "What are the names and id of courses having at most 2 sections?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "courses",
        "columns": [
          "course_name",
          "course_id"
        ]
      },
      {
        "table": "sections",
        "columns": [
          "course_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.course_name ,  T1.course_id FROM Courses AS T1 JOIN Sections AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_id HAVING count(*)  <=  2\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 526,
    "question": "What are the names and ids of every course with less than 2 sections?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "sections",
        "columns": [
          "section_name"
        ]
      }
    ],
    "gold_sql": "SELECT section_name FROM Sections ORDER BY section_name DESC\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 527,
    "question": "List the section_name in reversed lexicographical order.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "sections",
        "columns": [
          "section_name"
        ]
      }
    ],
    "gold_sql": "SELECT section_name FROM Sections ORDER BY section_name DESC\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 528,
    "question": "What are the names of the sections in reverse alphabetical order?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "semesters",
        "columns": [
          "semester_name",
          "semester_id"
        ]
      },
      {
        "table": "student_enrolment",
        "columns": [
          "semester_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 529,
    "question": "What is the semester which most student registered in? Show both the name and the id.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "semesters",
        "columns": [
          "semester_name",
          "semester_id"
        ]
      },
      {
        "table": "student_enrolment",
        "columns": [
          "semester_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.semester_name ,  T1.semester_id FROM Semesters AS T1 JOIN Student_Enrolment AS T2 ON T1.semester_id  =  T2.semester_id GROUP BY T1.semester_id ORDER BY count(*) DESC LIMIT 1\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 530,
    "question": "For each semester, what is the name and id of the one with the most students registered?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "departments",
        "columns": [
          "department_description",
          "department_name"
        ]
      }
    ],
    "gold_sql": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 531,
    "question": "What is the description of the department whose name has the substring the computer?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "departments",
        "columns": [
          "department_description",
          "department_name"
        ]
      }
    ],
    "gold_sql": "SELECT department_description FROM Departments WHERE department_name LIKE '%computer%'\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 532,
    "question": "What is the department description for the one whose name has the word computer?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "students",
        "columns": [
          "last_name",
          "student_id",
          "first_name",
          "middle_name"
        ]
      },
      {
        "table": "student_enrolment",
        "columns": [
          "student_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 533,
    "question": "Who are enrolled in 2 degree programs in one semester? List the first name, middle name and last name and the id.",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "students",
        "columns": [
          "last_name",
          "student_id",
          "first_name",
          "middle_name"
        ]
      },
      {
        "table": "student_enrolment",
        "columns": [
          "student_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.first_name ,  T1.middle_name ,  T1.last_name ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING count(*)  =  2\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 534,
    "question": "What are the first, middle, and last names, along with the ids, of all students who enrolled in 2 degree programs in one semester?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "students",
        "columns": [
          "last_name",
          "student_id",
          "first_name",
          "middle_name"
        ]
      },
      {
        "table": "student_enrolment",
        "columns": [
          "degree_program_id",
          "student_id"
        ]
      },
      {
        "table": "degree_programs",
        "columns": [
          "degree_program_id",
          "degree_summary_name"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 535,
    "question": "Who is enrolled in a Bachelor degree program? List the first name, middle name, last name.",
    "involved_table_count": 3,
    "involved_column_count": 6
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "students",
        "columns": [
          "last_name",
          "student_id",
          "first_name",
          "middle_name"
        ]
      },
      {
        "table": "student_enrolment",
        "columns": [
          "degree_program_id",
          "student_id"
        ]
      },
      {
        "table": "degree_programs",
        "columns": [
          "degree_program_id",
          "degree_summary_name"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT T1.first_name ,  T1.middle_name ,  T1.last_name FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id JOIN Degree_Programs AS T3 ON T2.degree_program_id  =  T3.degree_program_id WHERE T3.degree_summary_name  =  'Bachelor'\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 536,
    "question": "What are the first, middle, and last names for everybody enrolled in a Bachelors program?",
    "involved_table_count": 3,
    "involved_column_count": 6
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "degree_programs",
        "columns": [
          "degree_program_id",
          "degree_summary_name"
        ]
      },
      {
        "table": "student_enrolment",
        "columns": [
          "degree_program_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 537,
    "question": "Find the kind of program which most number of students are enrolled in?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "degree_programs",
        "columns": [
          "degree_program_id",
          "degree_summary_name"
        ]
      },
      {
        "table": "student_enrolment",
        "columns": [
          "degree_program_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_summary_name ORDER BY count(*) DESC LIMIT 1\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 538,
    "question": "What is the degree summary name that has the most number of students enrolled?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "degree_programs",
        "columns": [
          "degree_program_id",
          "degree_summary_name"
        ]
      },
      {
        "table": "student_enrolment",
        "columns": [
          "degree_program_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 539,
    "question": "Find the program which most number of students are enrolled in. List both the id and the summary.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "degree_programs",
        "columns": [
          "degree_program_id",
          "degree_summary_name"
        ]
      },
      {
        "table": "student_enrolment",
        "columns": [
          "degree_program_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.degree_program_id ,  T1.degree_summary_name FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id GROUP BY T1.degree_program_id ORDER BY count(*) DESC LIMIT 1\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 540,
    "question": "What is the program id and the summary of the degree that has the most students enrolled?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "students",
        "columns": [
          "last_name",
          "student_id",
          "first_name",
          "middle_name"
        ]
      },
      {
        "table": "student_enrolment",
        "columns": [
          "student_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 541,
    "question": "Which student has enrolled for the most times in any program? List the id, first name, middle name, last name, the number of enrollments and student id.",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "students",
        "columns": [
          "last_name",
          "student_id",
          "first_name",
          "middle_name"
        ]
      },
      {
        "table": "student_enrolment",
        "columns": [
          "student_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.student_id ,  T1.first_name ,  T1.middle_name ,  T1.last_name ,  count(*) ,  T1.student_id FROM Students AS T1 JOIN Student_Enrolment AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 542,
    "question": "What is the first, middle, and last name, along with the id and number of enrollments, for the student who enrolled the most in any program?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "student_enrolment",
        "columns": [
          "semester_id"
        ]
      },
      {
        "table": "semesters",
        "columns": [
          "semester_name",
          "semester_id"
        ]
      }
    ],
    "gold_sql": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 543,
    "question": "Which semesters do not have any student enrolled? List the semester name.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "student_enrolment",
        "columns": [
          "semester_id"
        ]
      },
      {
        "table": "semesters",
        "columns": [
          "semester_name",
          "semester_id"
        ]
      }
    ],
    "gold_sql": "SELECT semester_name FROM Semesters WHERE semester_id NOT IN( SELECT semester_id FROM Student_Enrolment )\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 544,
    "question": "What is the name of the semester with no students enrolled?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "courses",
        "columns": [
          "course_name",
          "course_id"
        ]
      },
      {
        "table": "student_enrolment_courses",
        "columns": [
          "course_id"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 545,
    "question": "What are all the course names of the courses which ever have students enrolled in?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "courses",
        "columns": [
          "course_name",
          "course_id"
        ]
      },
      {
        "table": "student_enrolment_courses",
        "columns": [
          "course_id"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 546,
    "question": "What are the names of all courses that have some students enrolled?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "courses",
        "columns": [
          "course_name",
          "course_id"
        ]
      },
      {
        "table": "student_enrolment_courses",
        "columns": [
          "course_id"
        ]
      }
    ],
    "gold_sql": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 547,
    "question": "What's the name of the course with most number of enrollments?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "courses",
        "columns": [
          "course_name",
          "course_id"
        ]
      },
      {
        "table": "student_enrolment_courses",
        "columns": [
          "course_id"
        ]
      }
    ],
    "gold_sql": "SELECT  T1.course_name FROM Courses AS T1 JOIN Student_Enrolment_Courses AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY count(*) DESC LIMIT 1\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 548,
    "question": "What is the name of the course with the most students enrolled?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "students",
        "columns": [
          "last_name",
          "current_address_id",
          "student_id"
        ]
      },
      {
        "table": "addresses",
        "columns": [
          "address_id",
          "state_province_county"
        ]
      },
      {
        "table": "student_enrolment",
        "columns": [
          "student_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 549,
    "question": "Find the last name of the students who currently live in the state of North Carolina but have not registered in any degree program.",
    "involved_table_count": 3,
    "involved_column_count": 5
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "students",
        "columns": [
          "last_name",
          "current_address_id",
          "student_id"
        ]
      },
      {
        "table": "addresses",
        "columns": [
          "address_id",
          "state_province_county"
        ]
      },
      {
        "table": "student_enrolment",
        "columns": [
          "student_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.last_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.current_address_id  =  T2.address_id WHERE T2.state_province_county  =  'NorthCarolina' EXCEPT SELECT DISTINCT T3.last_name FROM Students AS T3 JOIN Student_Enrolment AS T4 ON T3.student_id  =  T4.student_id\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 550,
    "question": "What are the last name of the students who live in North Carolina but have not registered in any degree programs?",
    "involved_table_count": 3,
    "involved_column_count": 5
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "transcript_contents",
        "columns": [
          "transcript_id"
        ]
      },
      {
        "table": "transcripts",
        "columns": [
          "transcript_id",
          "transcript_date"
        ]
      }
    ],
    "gold_sql": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 551,
    "question": "Show the date and id of the transcript with at least 2 course results.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "transcript_contents",
        "columns": [
          "transcript_id"
        ]
      },
      {
        "table": "transcripts",
        "columns": [
          "transcript_id",
          "transcript_date"
        ]
      }
    ],
    "gold_sql": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id HAVING count(*)  >=  2\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 552,
    "question": "What is the date and id of the transcript with at least 2 courses listed?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "students",
        "columns": [
          "last_name",
          "cell_mobile_number",
          "first_name"
        ]
      }
    ],
    "gold_sql": "SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 553,
    "question": "What is the phone number of the man with the first name Timmothy and the last name Ward?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "students",
        "columns": [
          "last_name",
          "cell_mobile_number",
          "first_name"
        ]
      }
    ],
    "gold_sql": "SELECT cell_mobile_number FROM Students WHERE first_name  =  'Timmothy' AND last_name  =  'Ward'\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 554,
    "question": "What is the mobile phone number of the student named Timothy Ward?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "students",
        "columns": [
          "last_name",
          "date_first_registered",
          "first_name",
          "middle_name"
        ]
      }
    ],
    "gold_sql": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 555,
    "question": "Who is the first student to register? List the first name, middle name and last name.",
    "involved_table_count": 1,
    "involved_column_count": 4
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "students",
        "columns": [
          "last_name",
          "date_first_registered",
          "first_name",
          "middle_name"
        ]
      }
    ],
    "gold_sql": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_first_registered ASC LIMIT 1\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 556,
    "question": "What is the first, middle, and last name of the first student to register?",
    "involved_table_count": 1,
    "involved_column_count": 4
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "students",
        "columns": [
          "date_left",
          "last_name",
          "first_name",
          "middle_name"
        ]
      }
    ],
    "gold_sql": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 557,
    "question": "Who is the earliest graduate of the school? List the first name, middle name and last name.",
    "involved_table_count": 1,
    "involved_column_count": 4
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "students",
        "columns": [
          "date_left",
          "last_name",
          "first_name",
          "middle_name"
        ]
      }
    ],
    "gold_sql": "SELECT first_name ,  middle_name ,  last_name FROM Students ORDER BY date_left ASC LIMIT 1\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 558,
    "question": "What is the first, middle, and last name of the earliest school graduate?",
    "involved_table_count": 1,
    "involved_column_count": 4
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "students",
        "columns": [
          "permanent_address_id",
          "current_address_id",
          "first_name"
        ]
      }
    ],
    "gold_sql": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 559,
    "question": "Whose permanent address is different from his or her current address? List his or her first name.",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "students",
        "columns": [
          "permanent_address_id",
          "current_address_id",
          "first_name"
        ]
      }
    ],
    "gold_sql": "SELECT first_name FROM Students WHERE current_address_id != permanent_address_id\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 560,
    "question": "What is the first name of the student whose permanent address is different from his or her current one?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "addresses",
        "columns": [
          "address_id",
          "line_1",
          "line_2"
        ]
      },
      {
        "table": "students",
        "columns": [
          "current_address_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 561,
    "question": "Which address holds the most number of students currently? List the address id and all lines.",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "addresses",
        "columns": [
          "address_id",
          "line_1",
          "line_2"
        ]
      },
      {
        "table": "students",
        "columns": [
          "current_address_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.address_id ,  T1.line_1 ,  T1.line_2 FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.current_address_id GROUP BY T1.address_id ORDER BY count(*) DESC LIMIT 1\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 562,
    "question": "What is the id, line 1, and line 2 of the address with the most students?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "transcripts",
        "columns": [
          "transcript_date"
        ]
      }
    ],
    "gold_sql": "SELECT avg(transcript_date) FROM Transcripts\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 563,
    "question": "On average, when were the transcripts printed?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "transcripts",
        "columns": [
          "transcript_date"
        ]
      }
    ],
    "gold_sql": "SELECT avg(transcript_date) FROM Transcripts\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 564,
    "question": "What is the average transcript date?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "transcripts",
        "columns": [
          "other_details",
          "transcript_date"
        ]
      }
    ],
    "gold_sql": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 565,
    "question": "When is the first transcript released? List the date and details.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "transcripts",
        "columns": [
          "other_details",
          "transcript_date"
        ]
      }
    ],
    "gold_sql": "SELECT transcript_date ,  other_details FROM Transcripts ORDER BY transcript_date ASC LIMIT 1\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 566,
    "question": "What is the earliest date of a transcript release, and what details can you tell me?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "transcripts",
        "columns": []
      }
    ],
    "gold_sql": "SELECT count(*) FROM Transcripts\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 567,
    "question": "How many transcripts are released?",
    "involved_table_count": 1,
    "involved_column_count": 0
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "transcripts",
        "columns": []
      }
    ],
    "gold_sql": "SELECT count(*) FROM Transcripts\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 568,
    "question": "How many transcripts are listed?",
    "involved_table_count": 1,
    "involved_column_count": 0
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "transcripts",
        "columns": [
          "transcript_date"
        ]
      }
    ],
    "gold_sql": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 569,
    "question": "What is the last transcript release date?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "transcripts",
        "columns": [
          "transcript_date"
        ]
      }
    ],
    "gold_sql": "SELECT transcript_date FROM Transcripts ORDER BY transcript_date DESC LIMIT 1\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 570,
    "question": "When was the last transcript released?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "transcript_contents",
        "columns": [
          "_col_0",
          "student_course_id"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 571,
    "question": "How many times at most can a course enrollment result show in different transcripts? Also show the course enrollment id.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "transcript_contents",
        "columns": [
          "_col_0",
          "student_course_id"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) ,  student_course_id FROM Transcript_Contents GROUP BY student_course_id ORDER BY count(*) DESC LIMIT 1\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 572,
    "question": "What is the maximum number of times that a course shows up in different transcripts and what is that course's enrollment id?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "transcript_contents",
        "columns": [
          "transcript_id"
        ]
      },
      {
        "table": "transcripts",
        "columns": [
          "transcript_id",
          "transcript_date"
        ]
      }
    ],
    "gold_sql": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 573,
    "question": "Show the date of the transcript which shows the least number of results, also list the id.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "transcript_contents",
        "columns": [
          "transcript_id"
        ]
      },
      {
        "table": "transcripts",
        "columns": [
          "transcript_id",
          "transcript_date"
        ]
      }
    ],
    "gold_sql": "SELECT T2.transcript_date ,  T1.transcript_id FROM Transcript_Contents AS T1 JOIN Transcripts AS T2 ON T1.transcript_id  =  T2.transcript_id GROUP BY T1.transcript_id ORDER BY count(*) ASC LIMIT 1\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 574,
    "question": "What is the date and id of the transcript with the least number of results?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "degree_programs",
        "columns": [
          "degree_program_id"
        ]
      },
      {
        "table": "student_enrolment",
        "columns": [
          "degree_program_id",
          "semester_id"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'\tstudent_transcripts_tracking",
    "remarks": "Qualification failed: Column '\"degree_summary_name\"' could not be resolved.",
    "id": 575,
    "question": "Find the semester when both Master students and Bachelor students got enrolled in.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "degree_programs",
        "columns": [
          "degree_program_id"
        ]
      },
      {
        "table": "student_enrolment",
        "columns": [
          "degree_program_id",
          "semester_id"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Master' INTERSECT SELECT DISTINCT T2.semester_id FROM Degree_Programs AS T1 JOIN Student_Enrolment AS T2 ON T1.degree_program_id  =  T2.degree_program_id WHERE degree_summary_name  =  'Bachelor'\tstudent_transcripts_tracking",
    "remarks": "Qualification failed: Column '\"degree_summary_name\"' could not be resolved.",
    "id": 576,
    "question": "What is the id of the semester that had both Masters and Bachelors students enrolled?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "students",
        "columns": [
          "current_address_id"
        ]
      }
    ],
    "gold_sql": "SELECT count(DISTINCT current_address_id) FROM Students\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 577,
    "question": "How many different addresses do the students currently live?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "students",
        "columns": [
          "current_address_id"
        ]
      }
    ],
    "gold_sql": "SELECT count(DISTINCT current_address_id) FROM Students\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 578,
    "question": "What are the different addresses that have students living there?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "students",
        "columns": [
          "other_student_details"
        ]
      }
    ],
    "gold_sql": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 579,
    "question": "List all the student details in reversed lexicographical order.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "students",
        "columns": [
          "other_student_details"
        ]
      }
    ],
    "gold_sql": "SELECT other_student_details FROM Students ORDER BY other_student_details DESC\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 580,
    "question": "What other details can you tell me about students in reverse alphabetical order?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "sections",
        "columns": [
          "section_name",
          "section_description"
        ]
      }
    ],
    "gold_sql": "SELECT section_description FROM Sections WHERE section_name  =  'h'\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 581,
    "question": "Describe the section h.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "sections",
        "columns": [
          "section_name",
          "section_description"
        ]
      }
    ],
    "gold_sql": "SELECT section_description FROM Sections WHERE section_name  =  'h'\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 582,
    "question": "What is the description for the section named h?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "students",
        "columns": [
          "permanent_address_id",
          "cell_mobile_number",
          "first_name"
        ]
      },
      {
        "table": "addresses",
        "columns": [
          "address_id",
          "country"
        ]
      }
    ],
    "gold_sql": "SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id  =  T2.address_id WHERE T2.country  =  'Haiti' UNION SELECT first_name FROM Students WHERE cell_mobile_number  =  '09700166582'\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 583,
    "question": "Find the first name of the students who permanently live in the country Haiti or have the cell phone number 09700166582.",
    "involved_table_count": 2,
    "involved_column_count": 5
  },
  {
    "database": "student_transcripts_tracking",
    "tables": [
      {
        "table": "students",
        "columns": [
          "permanent_address_id",
          "cell_mobile_number",
          "first_name"
        ]
      },
      {
        "table": "addresses",
        "columns": [
          "address_id",
          "country"
        ]
      }
    ],
    "gold_sql": "SELECT T1.first_name FROM Students AS T1 JOIN Addresses AS T2 ON T1.permanent_address_id  =  T2.address_id WHERE T2.country  =  'Haiti' UNION SELECT first_name FROM Students WHERE cell_mobile_number  =  '09700166582'\tstudent_transcripts_tracking",
    "remarks": "",
    "id": 584,
    "question": "What are the first names of the students who live in Haiti permanently or have the cell phone number 09700166582?",
    "involved_table_count": 2,
    "involved_column_count": 5
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "cartoon",
        "columns": [
          "title"
        ]
      }
    ],
    "gold_sql": "SELECT Title FROM Cartoon ORDER BY title\ttvshow",
    "remarks": "",
    "id": 585,
    "question": "List the title of all cartoons in alphabetical order.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "cartoon",
        "columns": [
          "title"
        ]
      }
    ],
    "gold_sql": "SELECT Title FROM Cartoon ORDER BY title\ttvshow",
    "remarks": "",
    "id": 586,
    "question": "What are the titles of the cartoons sorted alphabetically?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "cartoon",
        "columns": [
          "title",
          "directed_by"
        ]
      }
    ],
    "gold_sql": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";\ttvshow",
    "remarks": "",
    "id": 587,
    "question": "List all cartoon directed by \"Ben Jones\".",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "cartoon",
        "columns": [
          "title",
          "directed_by"
        ]
      }
    ],
    "gold_sql": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\";\ttvshow",
    "remarks": "",
    "id": 588,
    "question": "What are the names of all cartoons directed by Ben Jones?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "cartoon",
        "columns": [
          "written_by"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";\ttvshow",
    "remarks": "",
    "id": 589,
    "question": "How many cartoons were written by \"Joseph Kuhr\"?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "cartoon",
        "columns": [
          "written_by"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM Cartoon WHERE Written_by = \"Joseph Kuhr\";\ttvshow",
    "remarks": "",
    "id": 590,
    "question": "What is the number of cartoones written by Joseph Kuhr?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "cartoon",
        "columns": [
          "title",
          "original_air_date",
          "directed_by"
        ]
      }
    ],
    "gold_sql": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date\ttvshow",
    "remarks": "",
    "id": 591,
    "question": "list all cartoon titles and their directors ordered by their air date",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "cartoon",
        "columns": [
          "title",
          "original_air_date",
          "directed_by"
        ]
      }
    ],
    "gold_sql": "SELECT title ,  Directed_by FROM Cartoon ORDER BY Original_air_date\ttvshow",
    "remarks": "",
    "id": 592,
    "question": "What is the name and directors of all the cartoons that are ordered by air date?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "cartoon",
        "columns": [
          "title",
          "directed_by"
        ]
      }
    ],
    "gold_sql": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";\ttvshow",
    "remarks": "",
    "id": 593,
    "question": "List the title of all cartoon directed by \"Ben Jones\" or \"Brandon Vietti\".",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "cartoon",
        "columns": [
          "title",
          "directed_by"
        ]
      }
    ],
    "gold_sql": "SELECT Title FROM Cartoon WHERE Directed_by = \"Ben Jones\" OR Directed_by = \"Brandon Vietti\";\ttvshow",
    "remarks": "",
    "id": 594,
    "question": "What are the titles of all cartoons directed by Ben Jones or Brandon Vietti?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_channel",
        "columns": [
          "country",
          "_col_1"
        ]
      }
    ],
    "gold_sql": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;\ttvshow",
    "remarks": "",
    "id": 595,
    "question": "Which country has the most of TV Channels? List the country and number of TV Channels it has.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_channel",
        "columns": [
          "country",
          "_col_1"
        ]
      }
    ],
    "gold_sql": "SELECT Country ,  count(*) FROM TV_Channel GROUP BY Country ORDER BY count(*) DESC LIMIT 1;\ttvshow",
    "remarks": "",
    "id": 596,
    "question": "What is the country with the most number of TV Channels and how many does it have?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_channel",
        "columns": [
          "series_name",
          "content"
        ]
      }
    ],
    "gold_sql": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;\ttvshow",
    "remarks": "",
    "id": 597,
    "question": "List the number of different series names and contents in the TV Channel table.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_channel",
        "columns": [
          "series_name",
          "content"
        ]
      }
    ],
    "gold_sql": "SELECT count(DISTINCT series_name) ,  count(DISTINCT content) FROM TV_Channel;\ttvshow",
    "remarks": "",
    "id": 598,
    "question": "How many different series and contents are listed in the TV Channel table?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_channel",
        "columns": [
          "series_name",
          "content"
        ]
      }
    ],
    "gold_sql": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";\ttvshow",
    "remarks": "",
    "id": 599,
    "question": "What is the content of TV Channel with serial name \"Sky Radio\"?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_channel",
        "columns": [
          "series_name",
          "content"
        ]
      }
    ],
    "gold_sql": "SELECT Content FROM TV_Channel WHERE series_name = \"Sky Radio\";\ttvshow",
    "remarks": "",
    "id": 600,
    "question": "What is the content of the series Sky Radio?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_channel",
        "columns": [
          "series_name",
          "package_option"
        ]
      }
    ],
    "gold_sql": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";\ttvshow",
    "remarks": "",
    "id": 601,
    "question": "What is the Package Option of TV Channel with serial name \"Sky Radio\"?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_channel",
        "columns": [
          "series_name",
          "package_option"
        ]
      }
    ],
    "gold_sql": "SELECT Package_Option FROM TV_Channel WHERE series_name = \"Sky Radio\";\ttvshow",
    "remarks": "",
    "id": 602,
    "question": "What are the Package Options of the TV Channels whose series names are Sky Radio?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_channel",
        "columns": [
          "language"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";\ttvshow",
    "remarks": "",
    "id": 603,
    "question": "How many TV Channel using language English?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_channel",
        "columns": [
          "language"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM TV_Channel WHERE LANGUAGE = \"English\";\ttvshow",
    "remarks": "",
    "id": 604,
    "question": "How many TV Channels use the English language?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_channel",
        "columns": [
          "language",
          "_col_1"
        ]
      }
    ],
    "gold_sql": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;\ttvshow",
    "remarks": "",
    "id": 605,
    "question": "List the language used least number of TV Channel. List language and number of TV Channel.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_channel",
        "columns": [
          "language",
          "_col_1"
        ]
      }
    ],
    "gold_sql": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE ORDER BY count(*) ASC LIMIT 1;\ttvshow",
    "remarks": "",
    "id": 606,
    "question": "What are the languages used by the least number of TV Channels and how many channels use it?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_channel",
        "columns": [
          "language"
        ]
      }
    ],
    "gold_sql": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE\ttvshow",
    "remarks": "",
    "id": 607,
    "question": "List each language and the number of TV Channels using it.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_channel",
        "columns": [
          "language"
        ]
      }
    ],
    "gold_sql": "SELECT LANGUAGE ,  count(*) FROM TV_Channel GROUP BY LANGUAGE\ttvshow",
    "remarks": "",
    "id": 608,
    "question": "For each language, list the number of TV Channels that use it.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_channel",
        "columns": [
          "id",
          "series_name"
        ]
      },
      {
        "table": "cartoon",
        "columns": [
          "title",
          "channel"
        ]
      }
    ],
    "gold_sql": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";\ttvshow",
    "remarks": "",
    "id": 609,
    "question": "What is the TV Channel that shows the cartoon \"The Rise of the Blue Beetle!\"? List the TV Channel's series name.",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_channel",
        "columns": [
          "id",
          "series_name"
        ]
      },
      {
        "table": "cartoon",
        "columns": [
          "title",
          "channel"
        ]
      }
    ],
    "gold_sql": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T2.Title = \"The Rise of the Blue Beetle!\";\ttvshow",
    "remarks": "",
    "id": 610,
    "question": "What is the series name of the TV Channel that shows the cartoon \"The Rise of the Blue Beetle\"?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_channel",
        "columns": [
          "id",
          "series_name"
        ]
      },
      {
        "table": "cartoon",
        "columns": [
          "title",
          "channel"
        ]
      }
    ],
    "gold_sql": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";\ttvshow",
    "remarks": "",
    "id": 611,
    "question": "List the title of all  Cartoons showed on TV Channel with series name \"Sky Radio\".",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_channel",
        "columns": [
          "id",
          "series_name"
        ]
      },
      {
        "table": "cartoon",
        "columns": [
          "title",
          "channel"
        ]
      }
    ],
    "gold_sql": "SELECT T2.Title FROM TV_Channel AS T1 JOIN Cartoon AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";\ttvshow",
    "remarks": "",
    "id": 612,
    "question": "What is the title of all the cartools that are on the TV Channel with the series name \"Sky Radio\"?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_series",
        "columns": [
          "episode",
          "rating"
        ]
      }
    ],
    "gold_sql": "SELECT Episode FROM TV_series ORDER BY rating\ttvshow",
    "remarks": "",
    "id": 613,
    "question": "List the Episode of all TV series sorted by rating.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_series",
        "columns": [
          "episode",
          "rating"
        ]
      }
    ],
    "gold_sql": "SELECT Episode FROM TV_series ORDER BY rating\ttvshow",
    "remarks": "",
    "id": 614,
    "question": "What are all of the episodes ordered by ratings?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_series",
        "columns": [
          "episode",
          "rating"
        ]
      }
    ],
    "gold_sql": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;\ttvshow",
    "remarks": "",
    "id": 615,
    "question": "List top 3 highest Rating  TV series. List the TV series's Episode and Rating.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_series",
        "columns": [
          "episode",
          "rating"
        ]
      }
    ],
    "gold_sql": "SELECT Episode ,  Rating FROM TV_series ORDER BY Rating DESC LIMIT 3;\ttvshow",
    "remarks": "",
    "id": 616,
    "question": "What are 3 most highly rated episodes in the TV series table and what were those ratings?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_series",
        "columns": [
          "share"
        ]
      }
    ],
    "gold_sql": "SELECT max(SHARE) , min(SHARE) FROM TV_series;\ttvshow",
    "remarks": "",
    "id": 617,
    "question": "What is minimum and maximum share of TV series?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_series",
        "columns": [
          "share"
        ]
      }
    ],
    "gold_sql": "SELECT max(SHARE) , min(SHARE) FROM TV_series;\ttvshow",
    "remarks": "",
    "id": 618,
    "question": "What is the maximum and minimum share for the TV series?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_series",
        "columns": [
          "episode",
          "air_date"
        ]
      }
    ],
    "gold_sql": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";\ttvshow",
    "remarks": "",
    "id": 619,
    "question": "What is the air date of TV series with Episode \"A Love of a Lifetime\"?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_series",
        "columns": [
          "episode",
          "air_date"
        ]
      }
    ],
    "gold_sql": "SELECT Air_Date FROM TV_series WHERE Episode = \"A Love of a Lifetime\";\ttvshow",
    "remarks": "",
    "id": 620,
    "question": "When did the episode \"A Love of a Lifetime\" air?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_series",
        "columns": [
          "episode",
          "weekly_rank"
        ]
      }
    ],
    "gold_sql": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";\ttvshow",
    "remarks": "",
    "id": 621,
    "question": "What is Weekly Rank of TV series with Episode \"A Love of a Lifetime\"?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_series",
        "columns": [
          "episode",
          "weekly_rank"
        ]
      }
    ],
    "gold_sql": "SELECT Weekly_Rank FROM TV_series WHERE Episode = \"A Love of a Lifetime\";\ttvshow",
    "remarks": "",
    "id": 622,
    "question": "What is the weekly rank for the episode \"A Love of a Lifetime\"?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_channel",
        "columns": [
          "id",
          "series_name"
        ]
      },
      {
        "table": "tv_series",
        "columns": [
          "episode",
          "channel"
        ]
      }
    ],
    "gold_sql": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";\ttvshow",
    "remarks": "",
    "id": 623,
    "question": "What is the TV Channel of TV series with Episode \"A Love of a Lifetime\"? List the TV Channel's series name.",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_channel",
        "columns": [
          "id",
          "series_name"
        ]
      },
      {
        "table": "tv_series",
        "columns": [
          "episode",
          "channel"
        ]
      }
    ],
    "gold_sql": "SELECT T1.series_name FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T2.Episode = \"A Love of a Lifetime\";\ttvshow",
    "remarks": "",
    "id": 624,
    "question": "What is the name of the series that has the episode \"A Love of a Lifetime\"?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_channel",
        "columns": [
          "id",
          "series_name"
        ]
      },
      {
        "table": "tv_series",
        "columns": [
          "episode",
          "channel"
        ]
      }
    ],
    "gold_sql": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";\ttvshow",
    "remarks": "",
    "id": 625,
    "question": "List the Episode of all  TV series showed on TV Channel with series name \"Sky Radio\".",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_channel",
        "columns": [
          "id",
          "series_name"
        ]
      },
      {
        "table": "tv_series",
        "columns": [
          "episode",
          "channel"
        ]
      }
    ],
    "gold_sql": "SELECT T2.Episode FROM TV_Channel AS T1 JOIN TV_series AS T2 ON T1.id = T2.Channel WHERE T1.series_name = \"Sky Radio\";\ttvshow",
    "remarks": "",
    "id": 626,
    "question": "What is the episode for the TV series named \"Sky Radio\"?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "cartoon",
        "columns": [
          "directed_by"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by\ttvshow",
    "remarks": "",
    "id": 627,
    "question": "Find the number of cartoons directed by each of the listed directors.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "cartoon",
        "columns": [
          "directed_by"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) ,  Directed_by FROM cartoon GROUP BY Directed_by\ttvshow",
    "remarks": "",
    "id": 628,
    "question": "How many cartoons did each director create?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "cartoon",
        "columns": [
          "original_air_date",
          "production_code",
          "channel"
        ]
      }
    ],
    "gold_sql": "SELECT production_code ,  channel FROM cartoon ORDER BY original_air_date LIMIT 1\ttvshow",
    "remarks": "",
    "id": 629,
    "question": "Find the production code and channel of the most recently aired cartoon.",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "cartoon",
        "columns": [
          "original_air_date",
          "production_code",
          "channel"
        ]
      }
    ],
    "gold_sql": "SELECT production_code ,  channel FROM cartoon ORDER BY original_air_date LIMIT 1\ttvshow",
    "remarks": "",
    "id": 630,
    "question": "What is the produdction code and channel of the most recent cartoon?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_channel",
        "columns": [
          "hight_definition_tv",
          "series_name",
          "package_option"
        ]
      }
    ],
    "gold_sql": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"\ttvshow",
    "remarks": "",
    "id": 631,
    "question": "Find the package choice and series name of the TV channel that has high definition TV.",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_channel",
        "columns": [
          "hight_definition_tv",
          "series_name",
          "package_option"
        ]
      }
    ],
    "gold_sql": "SELECT package_option ,  series_name FROM TV_Channel WHERE hight_definition_TV  =  \"yes\"\ttvshow",
    "remarks": "",
    "id": 632,
    "question": "What are the package options and the name of the series for the TV Channel that supports high definition TV?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_channel",
        "columns": [
          "id",
          "country"
        ]
      },
      {
        "table": "cartoon",
        "columns": [
          "channel",
          "written_by"
        ]
      }
    ],
    "gold_sql": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'\ttvshow",
    "remarks": "",
    "id": 633,
    "question": "which countries' tv channels are playing some cartoon written by Todd Casey?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_channel",
        "columns": [
          "id",
          "country"
        ]
      },
      {
        "table": "cartoon",
        "columns": [
          "channel",
          "written_by"
        ]
      }
    ],
    "gold_sql": "SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'\ttvshow",
    "remarks": "",
    "id": 634,
    "question": "What are the countries that have cartoons on TV that were written by Todd Casey?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_channel",
        "columns": [
          "id",
          "country"
        ]
      },
      {
        "table": "cartoon",
        "columns": [
          "channel",
          "written_by"
        ]
      }
    ],
    "gold_sql": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'\ttvshow",
    "remarks": "",
    "id": 635,
    "question": "which countries' tv channels are not playing any cartoon written by Todd Casey?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_channel",
        "columns": [
          "id",
          "country"
        ]
      },
      {
        "table": "cartoon",
        "columns": [
          "channel",
          "written_by"
        ]
      }
    ],
    "gold_sql": "SELECT country FROM TV_Channel EXCEPT SELECT T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.written_by  =  'Todd Casey'\ttvshow",
    "remarks": "",
    "id": 636,
    "question": "What are the countries that are not playing cartoons written by Todd Casey?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_channel",
        "columns": [
          "id",
          "series_name",
          "country"
        ]
      },
      {
        "table": "cartoon",
        "columns": [
          "channel",
          "directed_by"
        ]
      }
    ],
    "gold_sql": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'\ttvshow",
    "remarks": "",
    "id": 637,
    "question": "Find the series name and country of the tv channel that is playing some cartoons directed by Ben Jones and Michael Chang?",
    "involved_table_count": 2,
    "involved_column_count": 5
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_channel",
        "columns": [
          "id",
          "series_name",
          "country"
        ]
      },
      {
        "table": "cartoon",
        "columns": [
          "channel",
          "directed_by"
        ]
      }
    ],
    "gold_sql": "SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Michael Chang' INTERSECT SELECT T1.series_name ,  T1.country FROM TV_Channel AS T1 JOIN cartoon AS T2 ON T1.id = T2.Channel WHERE T2.directed_by  =  'Ben Jones'\ttvshow",
    "remarks": "",
    "id": 638,
    "question": "What is the series name and country of all TV channels that are playing cartoons directed by Ben Jones and cartoons directed by Michael Chang?",
    "involved_table_count": 2,
    "involved_column_count": 5
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_channel",
        "columns": [
          "language",
          "country",
          "pixel_aspect_ratio_par"
        ]
      }
    ],
    "gold_sql": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'\ttvshow",
    "remarks": "",
    "id": 639,
    "question": "find the pixel aspect ratio and nation of the tv channels that do not use English.",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_channel",
        "columns": [
          "language",
          "country",
          "pixel_aspect_ratio_par"
        ]
      }
    ],
    "gold_sql": "SELECT Pixel_aspect_ratio_PAR ,  country FROM tv_channel WHERE LANGUAGE != 'English'\ttvshow",
    "remarks": "",
    "id": 640,
    "question": "What is the pixel aspect ratio and country of origin for all TV channels that do not use English?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_channel",
        "columns": [
          "id",
          "country"
        ]
      }
    ],
    "gold_sql": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2\ttvshow",
    "remarks": "",
    "id": 641,
    "question": "find id of the tv channels that from the countries where have more than two tv channels.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_channel",
        "columns": [
          "id",
          "country"
        ]
      }
    ],
    "gold_sql": "SELECT id FROM tv_channel GROUP BY country HAVING count(*)  >  2\ttvshow",
    "remarks": "",
    "id": 642,
    "question": "What are the ids of all tv channels that have more than 2 TV channels?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_channel",
        "columns": [
          "id"
        ]
      },
      {
        "table": "cartoon",
        "columns": [
          "channel",
          "directed_by"
        ]
      }
    ],
    "gold_sql": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'\ttvshow",
    "remarks": "",
    "id": 643,
    "question": "find the id of tv channels that do not play any cartoon directed by Ben Jones.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "tv_channel",
        "columns": [
          "id"
        ]
      },
      {
        "table": "cartoon",
        "columns": [
          "channel",
          "directed_by"
        ]
      }
    ],
    "gold_sql": "SELECT id FROM TV_Channel EXCEPT SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones'\ttvshow",
    "remarks": "",
    "id": 644,
    "question": "What are the ids of the TV channels that do not have any cartoons directed by Ben Jones?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "cartoon",
        "columns": [
          "channel",
          "directed_by"
        ]
      },
      {
        "table": "tv_channel",
        "columns": [
          "id",
          "package_option"
        ]
      }
    ],
    "gold_sql": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')\ttvshow",
    "remarks": "",
    "id": 645,
    "question": "find the package option of the tv channel that do not have any cartoon directed by Ben Jones.",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "tvshow",
    "tables": [
      {
        "table": "cartoon",
        "columns": [
          "channel",
          "directed_by"
        ]
      },
      {
        "table": "tv_channel",
        "columns": [
          "id",
          "package_option"
        ]
      }
    ],
    "gold_sql": "SELECT package_option FROM TV_Channel WHERE id NOT IN (SELECT channel FROM cartoon WHERE directed_by  =  'Ben Jones')\ttvshow",
    "remarks": "",
    "id": 646,
    "question": "What are the package options of all tv channels that are not playing any cartoons directed by Ben Jones?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "poker_player",
    "tables": [
      {
        "table": "poker_player",
        "columns": []
      }
    ],
    "gold_sql": "SELECT count(*) FROM poker_player\tpoker_player",
    "remarks": "",
    "id": 647,
    "question": "How many poker players are there?",
    "involved_table_count": 1,
    "involved_column_count": 0
  },
  {
    "database": "poker_player",
    "tables": [
      {
        "table": "poker_player",
        "columns": []
      }
    ],
    "gold_sql": "SELECT count(*) FROM poker_player\tpoker_player",
    "remarks": "",
    "id": 648,
    "question": "Count the number of poker players.",
    "involved_table_count": 1,
    "involved_column_count": 0
  },
  {
    "database": "poker_player",
    "tables": [
      {
        "table": "poker_player",
        "columns": [
          "earnings"
        ]
      }
    ],
    "gold_sql": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC\tpoker_player",
    "remarks": "",
    "id": 649,
    "question": "List the earnings of poker players in descending order.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "poker_player",
    "tables": [
      {
        "table": "poker_player",
        "columns": [
          "earnings"
        ]
      }
    ],
    "gold_sql": "SELECT Earnings FROM poker_player ORDER BY Earnings DESC\tpoker_player",
    "remarks": "",
    "id": 650,
    "question": "What are the earnings of poker players, ordered descending by value?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "poker_player",
    "tables": [
      {
        "table": "poker_player",
        "columns": [
          "final_table_made",
          "best_finish"
        ]
      }
    ],
    "gold_sql": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player\tpoker_player",
    "remarks": "",
    "id": 651,
    "question": "List the final tables made and the best finishes of poker players.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "poker_player",
    "tables": [
      {
        "table": "poker_player",
        "columns": [
          "final_table_made",
          "best_finish"
        ]
      }
    ],
    "gold_sql": "SELECT Final_Table_Made ,  Best_Finish FROM poker_player\tpoker_player",
    "remarks": "",
    "id": 652,
    "question": "What are the final tables made and best finishes for all poker players?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "poker_player",
    "tables": [
      {
        "table": "poker_player",
        "columns": [
          "earnings"
        ]
      }
    ],
    "gold_sql": "SELECT avg(Earnings) FROM poker_player\tpoker_player",
    "remarks": "",
    "id": 653,
    "question": "What is the average earnings of poker players?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "poker_player",
    "tables": [
      {
        "table": "poker_player",
        "columns": [
          "earnings"
        ]
      }
    ],
    "gold_sql": "SELECT avg(Earnings) FROM poker_player\tpoker_player",
    "remarks": "",
    "id": 654,
    "question": "Return the average earnings across all poker players.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "poker_player",
    "tables": [
      {
        "table": "poker_player",
        "columns": [
          "money_rank",
          "earnings"
        ]
      }
    ],
    "gold_sql": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1\tpoker_player",
    "remarks": "",
    "id": 655,
    "question": "What is the money rank of the poker player with the highest earnings?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "poker_player",
    "tables": [
      {
        "table": "poker_player",
        "columns": [
          "money_rank",
          "earnings"
        ]
      }
    ],
    "gold_sql": "SELECT Money_Rank FROM poker_player ORDER BY Earnings DESC LIMIT 1\tpoker_player",
    "remarks": "",
    "id": 656,
    "question": "Return the money rank of the player with the greatest earnings.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "poker_player",
    "tables": [
      {
        "table": "poker_player",
        "columns": [
          "final_table_made",
          "earnings"
        ]
      }
    ],
    "gold_sql": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000\tpoker_player",
    "remarks": "",
    "id": 657,
    "question": "What is the maximum number of final tables made among poker players with earnings less than 200000?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "poker_player",
    "tables": [
      {
        "table": "poker_player",
        "columns": [
          "final_table_made",
          "earnings"
        ]
      }
    ],
    "gold_sql": "SELECT max(Final_Table_Made) FROM poker_player WHERE Earnings  <  200000\tpoker_player",
    "remarks": "",
    "id": 658,
    "question": "Return the maximum final tables made across all poker players who have earnings below 200000.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "poker_player",
    "tables": [
      {
        "table": "people",
        "columns": [
          "name",
          "people_id"
        ]
      },
      {
        "table": "poker_player",
        "columns": [
          "people_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID\tpoker_player",
    "remarks": "",
    "id": 659,
    "question": "What are the names of poker players?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "poker_player",
    "tables": [
      {
        "table": "people",
        "columns": [
          "name",
          "people_id"
        ]
      },
      {
        "table": "poker_player",
        "columns": [
          "people_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID\tpoker_player",
    "remarks": "",
    "id": 660,
    "question": "Return the names of all the poker players.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "poker_player",
    "tables": [
      {
        "table": "people",
        "columns": [
          "name",
          "people_id"
        ]
      },
      {
        "table": "poker_player",
        "columns": [
          "earnings",
          "people_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000\tpoker_player",
    "remarks": "",
    "id": 661,
    "question": "What are the names of poker players whose earnings is higher than 300000?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "poker_player",
    "tables": [
      {
        "table": "people",
        "columns": [
          "name",
          "people_id"
        ]
      },
      {
        "table": "poker_player",
        "columns": [
          "earnings",
          "people_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Earnings  >  300000\tpoker_player",
    "remarks": "",
    "id": 662,
    "question": "Give the names of poker players who have earnings above 300000.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "poker_player",
    "tables": [
      {
        "table": "people",
        "columns": [
          "name",
          "people_id"
        ]
      },
      {
        "table": "poker_player",
        "columns": [
          "final_table_made",
          "people_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made\tpoker_player",
    "remarks": "",
    "id": 663,
    "question": "List the names of poker players ordered by the final tables made in ascending order.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "poker_player",
    "tables": [
      {
        "table": "people",
        "columns": [
          "name",
          "people_id"
        ]
      },
      {
        "table": "poker_player",
        "columns": [
          "final_table_made",
          "people_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Final_Table_Made\tpoker_player",
    "remarks": "",
    "id": 664,
    "question": "What are the names of poker players, ordered ascending by the number of final tables they have made?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "poker_player",
    "tables": [
      {
        "table": "people",
        "columns": [
          "people_id",
          "birth_date"
        ]
      },
      {
        "table": "poker_player",
        "columns": [
          "earnings",
          "people_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1\tpoker_player",
    "remarks": "",
    "id": 665,
    "question": "What is the birth date of the poker player with the lowest earnings?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "poker_player",
    "tables": [
      {
        "table": "people",
        "columns": [
          "people_id",
          "birth_date"
        ]
      },
      {
        "table": "poker_player",
        "columns": [
          "earnings",
          "people_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Birth_Date FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings ASC LIMIT 1\tpoker_player",
    "remarks": "",
    "id": 666,
    "question": "Return the birth date of the poker player with the lowest earnings.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "poker_player",
    "tables": [
      {
        "table": "people",
        "columns": [
          "height",
          "people_id"
        ]
      },
      {
        "table": "poker_player",
        "columns": [
          "money_rank",
          "people_id"
        ]
      }
    ],
    "gold_sql": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1\tpoker_player",
    "remarks": "",
    "id": 667,
    "question": "What is the money rank of the tallest poker player?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "poker_player",
    "tables": [
      {
        "table": "people",
        "columns": [
          "height",
          "people_id"
        ]
      },
      {
        "table": "poker_player",
        "columns": [
          "money_rank",
          "people_id"
        ]
      }
    ],
    "gold_sql": "SELECT T2.Money_Rank FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1\tpoker_player",
    "remarks": "",
    "id": 668,
    "question": "Return the money rank of the poker player with the greatest height.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "poker_player",
    "tables": [
      {
        "table": "people",
        "columns": [
          "height",
          "people_id"
        ]
      },
      {
        "table": "poker_player",
        "columns": [
          "earnings",
          "people_id"
        ]
      }
    ],
    "gold_sql": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200\tpoker_player",
    "remarks": "",
    "id": 669,
    "question": "What is the average earnings of poker players with height higher than 200?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "poker_player",
    "tables": [
      {
        "table": "people",
        "columns": [
          "height",
          "people_id"
        ]
      },
      {
        "table": "poker_player",
        "columns": [
          "earnings",
          "people_id"
        ]
      }
    ],
    "gold_sql": "SELECT avg(T2.Earnings) FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  200\tpoker_player",
    "remarks": "",
    "id": 670,
    "question": "Give average earnings of poker players who are taller than 200.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "poker_player",
    "tables": [
      {
        "table": "people",
        "columns": [
          "name",
          "people_id"
        ]
      },
      {
        "table": "poker_player",
        "columns": [
          "earnings",
          "people_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC\tpoker_player",
    "remarks": "",
    "id": 671,
    "question": "What are the names of poker players in descending order of earnings?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "poker_player",
    "tables": [
      {
        "table": "people",
        "columns": [
          "name",
          "people_id"
        ]
      },
      {
        "table": "poker_player",
        "columns": [
          "earnings",
          "people_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Name FROM people AS T1 JOIN poker_player AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Earnings DESC\tpoker_player",
    "remarks": "",
    "id": 672,
    "question": "Return the names of poker players sorted by their earnings descending.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "poker_player",
    "tables": [
      {
        "table": "people",
        "columns": [
          "nationality"
        ]
      }
    ],
    "gold_sql": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality\tpoker_player",
    "remarks": "",
    "id": 673,
    "question": "What are different nationalities of people and the corresponding number of people from each nation?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "poker_player",
    "tables": [
      {
        "table": "people",
        "columns": [
          "nationality"
        ]
      }
    ],
    "gold_sql": "SELECT Nationality ,  COUNT(*) FROM people GROUP BY Nationality\tpoker_player",
    "remarks": "",
    "id": 674,
    "question": "How many people are there of each nationality?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "poker_player",
    "tables": [
      {
        "table": "people",
        "columns": [
          "nationality"
        ]
      }
    ],
    "gold_sql": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1\tpoker_player",
    "remarks": "",
    "id": 675,
    "question": "What is the most common nationality of people?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "poker_player",
    "tables": [
      {
        "table": "people",
        "columns": [
          "nationality"
        ]
      }
    ],
    "gold_sql": "SELECT Nationality FROM people GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1\tpoker_player",
    "remarks": "",
    "id": 676,
    "question": "Give the nationality that is most common across all people.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "poker_player",
    "tables": [
      {
        "table": "people",
        "columns": [
          "nationality"
        ]
      }
    ],
    "gold_sql": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2\tpoker_player",
    "remarks": "",
    "id": 677,
    "question": "What are the nationalities that are shared by at least two people?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "poker_player",
    "tables": [
      {
        "table": "people",
        "columns": [
          "nationality"
        ]
      }
    ],
    "gold_sql": "SELECT Nationality FROM people GROUP BY Nationality HAVING COUNT(*)  >=  2\tpoker_player",
    "remarks": "",
    "id": 678,
    "question": "Return the nationalities for which there are two or more people.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "poker_player",
    "tables": [
      {
        "table": "people",
        "columns": [
          "name",
          "birth_date"
        ]
      }
    ],
    "gold_sql": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC\tpoker_player",
    "remarks": "",
    "id": 679,
    "question": "List the names and birth dates of people in ascending alphabetical order of name.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "poker_player",
    "tables": [
      {
        "table": "people",
        "columns": [
          "name",
          "birth_date"
        ]
      }
    ],
    "gold_sql": "SELECT Name ,  Birth_Date FROM people ORDER BY Name ASC\tpoker_player",
    "remarks": "",
    "id": 680,
    "question": "What are the names and birth dates of people, ordered by their names in alphabetical order?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "poker_player",
    "tables": [
      {
        "table": "people",
        "columns": [
          "name",
          "nationality"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM people WHERE Nationality != \"Russia\"\tpoker_player",
    "remarks": "",
    "id": 681,
    "question": "Show names of people whose nationality is not \"Russia\".",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "poker_player",
    "tables": [
      {
        "table": "people",
        "columns": [
          "name",
          "nationality"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM people WHERE Nationality != \"Russia\"\tpoker_player",
    "remarks": "",
    "id": 682,
    "question": "What are the names of people who are not from Russia?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "poker_player",
    "tables": [
      {
        "table": "poker_player",
        "columns": [
          "people_id"
        ]
      },
      {
        "table": "people",
        "columns": [
          "name",
          "people_id"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)\tpoker_player",
    "remarks": "",
    "id": 683,
    "question": "List the names of people that are not poker players.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "poker_player",
    "tables": [
      {
        "table": "poker_player",
        "columns": [
          "people_id"
        ]
      },
      {
        "table": "people",
        "columns": [
          "name",
          "people_id"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM poker_player)\tpoker_player",
    "remarks": "",
    "id": 684,
    "question": "What are the names of people who do not play poker?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "poker_player",
    "tables": [
      {
        "table": "people",
        "columns": [
          "nationality"
        ]
      }
    ],
    "gold_sql": "SELECT count(DISTINCT Nationality) FROM people\tpoker_player",
    "remarks": "",
    "id": 685,
    "question": "How many distinct nationalities are there?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "poker_player",
    "tables": [
      {
        "table": "people",
        "columns": [
          "nationality"
        ]
      }
    ],
    "gold_sql": "SELECT count(DISTINCT Nationality) FROM people\tpoker_player",
    "remarks": "",
    "id": 686,
    "question": "Count the number of different nationalities.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "voter_1",
    "tables": [
      {
        "table": "area_code_state",
        "columns": []
      }
    ],
    "gold_sql": "SELECT count(*) FROM area_code_state\tvoter_1",
    "remarks": "",
    "id": 687,
    "question": "How many states are there?",
    "involved_table_count": 1,
    "involved_column_count": 0
  },
  {
    "database": "voter_1",
    "tables": [
      {
        "table": "contestants",
        "columns": [
          "contestant_name",
          "contestant_number"
        ]
      }
    ],
    "gold_sql": "SELECT contestant_number ,  contestant_name FROM contestants ORDER BY contestant_name DESC\tvoter_1",
    "remarks": "",
    "id": 688,
    "question": "List the contestant numbers and names, ordered by contestant name descending.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "voter_1",
    "tables": [
      {
        "table": "votes",
        "columns": [
          "phone_number",
          "vote_id",
          "state"
        ]
      }
    ],
    "gold_sql": "SELECT vote_id ,  phone_number ,  state FROM votes\tvoter_1",
    "remarks": "",
    "id": 689,
    "question": "List the vote ids, phone numbers and states of all votes.",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "voter_1",
    "tables": [
      {
        "table": "area_code_state",
        "columns": [
          "area_code"
        ]
      }
    ],
    "gold_sql": "SELECT max(area_code) ,  min(area_code) FROM area_code_state\tvoter_1",
    "remarks": "",
    "id": 690,
    "question": "What are the maximum and minimum values of area codes?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "voter_1",
    "tables": [
      {
        "table": "votes",
        "columns": [
          "created",
          "state"
        ]
      }
    ],
    "gold_sql": "SELECT max(created) FROM votes WHERE state  =  'CA'\tvoter_1",
    "remarks": "",
    "id": 691,
    "question": "What is last date created of votes from the state 'CA'?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "voter_1",
    "tables": [
      {
        "table": "contestants",
        "columns": [
          "contestant_name"
        ]
      }
    ],
    "gold_sql": "SELECT contestant_name FROM contestants WHERE contestant_name != 'Jessie Alloway'\tvoter_1",
    "remarks": "",
    "id": 692,
    "question": "What are the names of the contestants whose names are not 'Jessie Alloway'",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "voter_1",
    "tables": [
      {
        "table": "votes",
        "columns": [
          "state",
          "created"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT state ,  created FROM votes\tvoter_1",
    "remarks": "",
    "id": 693,
    "question": "What are the distinct states and create time of all votes?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "voter_1",
    "tables": [
      {
        "table": "contestants",
        "columns": [
          "contestant_name",
          "contestant_number"
        ]
      },
      {
        "table": "votes",
        "columns": [
          "contestant_number"
        ]
      }
    ],
    "gold_sql": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number HAVING count(*)  >=  2\tvoter_1",
    "remarks": "",
    "id": 694,
    "question": "What are the contestant numbers and names of the contestants who had at least two votes?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "voter_1",
    "tables": [
      {
        "table": "contestants",
        "columns": [
          "contestant_name",
          "contestant_number"
        ]
      },
      {
        "table": "votes",
        "columns": [
          "contestant_number"
        ]
      }
    ],
    "gold_sql": "SELECT T1.contestant_number , T1.contestant_name FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number GROUP BY T1.contestant_number ORDER BY count(*) ASC LIMIT 1\tvoter_1",
    "remarks": "",
    "id": 695,
    "question": "Of all the contestants who got voted, what is the contestant number and name of the contestant who got least votes?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "voter_1",
    "tables": [
      {
        "table": "votes",
        "columns": [
          "state"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM votes WHERE state  =  'NY' OR state  =  'CA'\tvoter_1",
    "remarks": "",
    "id": 696,
    "question": "What are the number of votes from state 'NY' or 'CA'?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "voter_1",
    "tables": [
      {
        "table": "votes",
        "columns": [
          "contestant_number"
        ]
      },
      {
        "table": "contestants",
        "columns": [
          "contestant_number"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM contestants WHERE contestant_number NOT IN ( SELECT contestant_number FROM votes )\tvoter_1",
    "remarks": "",
    "id": 697,
    "question": "How many contestants did not get voted?",
    "involved_table_count": 2,
    "involved_column_count": 1
  },
  {
    "database": "voter_1",
    "tables": [
      {
        "table": "area_code_state",
        "columns": [
          "area_code",
          "state"
        ]
      },
      {
        "table": "votes",
        "columns": [
          "state"
        ]
      }
    ],
    "gold_sql": "SELECT T1.area_code FROM area_code_state AS T1 JOIN votes AS T2 ON T1.state  =  T2.state GROUP BY T1.area_code ORDER BY count(*) DESC LIMIT 1\tvoter_1",
    "remarks": "",
    "id": 698,
    "question": "What is the area code in which the most voters voted?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "voter_1",
    "tables": [
      {
        "table": "contestants",
        "columns": [
          "contestant_name",
          "contestant_number"
        ]
      },
      {
        "table": "votes",
        "columns": [
          "created",
          "state",
          "phone_number",
          "contestant_number"
        ]
      }
    ],
    "gold_sql": "SELECT T2.created ,  T2.state ,  T2.phone_number FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number WHERE T1.contestant_name  =  'Tabatha Gehling'\tvoter_1",
    "remarks": "",
    "id": 699,
    "question": "What are the create dates, states, and phone numbers of the votes that were for the contestant named 'Tabatha Gehling'?",
    "involved_table_count": 2,
    "involved_column_count": 5
  },
  {
    "database": "voter_1",
    "tables": [
      {
        "table": "contestants",
        "columns": [
          "contestant_name",
          "contestant_number"
        ]
      },
      {
        "table": "votes",
        "columns": [
          "state",
          "contestant_number"
        ]
      },
      {
        "table": "area_code_state",
        "columns": [
          "area_code",
          "state"
        ]
      }
    ],
    "gold_sql": "SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Tabatha Gehling' INTERSECT SELECT T3.area_code FROM contestants AS T1 JOIN votes AS T2 ON T1.contestant_number  =  T2.contestant_number JOIN area_code_state AS T3 ON T2.state  =  T3.state WHERE T1.contestant_name  =  'Kelly Clauss'\tvoter_1",
    "remarks": "",
    "id": 700,
    "question": "List the area codes in which voters voted both for the contestant 'Tabatha Gehling' and the contestant 'Kelly Clauss'.",
    "involved_table_count": 3,
    "involved_column_count": 4
  },
  {
    "database": "voter_1",
    "tables": [
      {
        "table": "contestants",
        "columns": [
          "contestant_name"
        ]
      }
    ],
    "gold_sql": "SELECT contestant_name FROM contestants WHERE contestant_name LIKE \"%Al%\"\tvoter_1",
    "remarks": "",
    "id": 701,
    "question": "Return the names the contestants whose names contain the substring 'Al'.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "indepyear",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM country WHERE IndepYear  >  1950\tworld_1",
    "remarks": "",
    "id": 702,
    "question": "What are the names of all the countries that became independent after 1950?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "indepyear",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM country WHERE IndepYear  >  1950\tworld_1",
    "remarks": "",
    "id": 703,
    "question": "Give the names of the nations that were founded after 1950.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "governmentform"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"\tworld_1",
    "remarks": "",
    "id": 704,
    "question": "How many countries have a republic as their form of government?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "governmentform"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM country WHERE GovernmentForm  =  \"Republic\"\tworld_1",
    "remarks": "",
    "id": 705,
    "question": "How many countries have governments that are republics?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "region",
          "surfacearea"
        ]
      }
    ],
    "gold_sql": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"\tworld_1",
    "remarks": "",
    "id": 706,
    "question": "What is the total surface area of the countries in the Caribbean region?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "region",
          "surfacearea"
        ]
      }
    ],
    "gold_sql": "SELECT sum(SurfaceArea) FROM country WHERE Region  =  \"Caribbean\"\tworld_1",
    "remarks": "",
    "id": 707,
    "question": "How much surface area do the countires in the Carribean cover together?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "continent",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"\tworld_1",
    "remarks": "",
    "id": 708,
    "question": "Which continent is Anguilla in?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "continent",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT Continent FROM country WHERE Name  =  \"Anguilla\"\tworld_1",
    "remarks": "",
    "id": 709,
    "question": "What is the continent name which Anguilla belongs to?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "code"
        ]
      },
      {
        "table": "city",
        "columns": [
          "name",
          "countrycode"
        ]
      }
    ],
    "gold_sql": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"\tworld_1",
    "remarks": "Qualification failed: Column '\"region\"' could not be resolved.",
    "id": 710,
    "question": "Which region is the city Kabul located in?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "code"
        ]
      },
      {
        "table": "city",
        "columns": [
          "name",
          "countrycode"
        ]
      }
    ],
    "gold_sql": "SELECT Region FROM country AS T1 JOIN city AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Name  =  \"Kabul\"\tworld_1",
    "remarks": "Qualification failed: Column '\"region\"' could not be resolved.",
    "id": 711,
    "question": "What region is Kabul in?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "name",
          "code"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode"
        ]
      }
    ],
    "gold_sql": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1\tworld_1",
    "remarks": "Qualification failed: Column '\"percentage\"' could not be resolved.",
    "id": 712,
    "question": "Which language is the most popular in Aruba?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "name",
          "code"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode"
        ]
      }
    ],
    "gold_sql": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\" ORDER BY Percentage DESC LIMIT 1\tworld_1",
    "remarks": "Qualification failed: Column '\"percentage\"' could not be resolved.",
    "id": 713,
    "question": "What language is predominantly spoken in Aruba?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "lifeexpectancy",
          "name",
          "population"
        ]
      }
    ],
    "gold_sql": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"\tworld_1",
    "remarks": "",
    "id": 714,
    "question": "What are the population and life expectancies in Brazil?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "lifeexpectancy",
          "name",
          "population"
        ]
      }
    ],
    "gold_sql": "SELECT Population ,  LifeExpectancy FROM country WHERE Name  =  \"Brazil\"\tworld_1",
    "remarks": "",
    "id": 715,
    "question": "Give me Brazil\u2019s population and life expectancies.",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "name",
          "population",
          "region"
        ]
      }
    ],
    "gold_sql": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"\tworld_1",
    "remarks": "",
    "id": 716,
    "question": "What are the region and population of Angola?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "name",
          "population",
          "region"
        ]
      }
    ],
    "gold_sql": "SELECT Population ,  Region FROM country WHERE Name  =  \"Angola\"\tworld_1",
    "remarks": "",
    "id": 717,
    "question": "What region does Angola belong to and what is its population?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "lifeexpectancy",
          "region"
        ]
      }
    ],
    "gold_sql": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"\tworld_1",
    "remarks": "",
    "id": 718,
    "question": "What is the average expected life expectancy for countries in the region of Central Africa?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "lifeexpectancy",
          "region"
        ]
      }
    ],
    "gold_sql": "SELECT avg(LifeExpectancy) FROM country WHERE Region  =  \"Central Africa\"\tworld_1",
    "remarks": "",
    "id": 719,
    "question": "How long is the people\u2019s average life expectancy in Central Africa?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "lifeexpectancy",
          "continent",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1\tworld_1",
    "remarks": "",
    "id": 720,
    "question": "What is the name of country that has the shortest life expectancy in Asia?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "lifeexpectancy",
          "continent",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM country WHERE Continent  =  \"Asia\" ORDER BY LifeExpectancy LIMIT 1\tworld_1",
    "remarks": "",
    "id": 721,
    "question": "Give the name of the country in Asia with the lowest life expectancy.",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "continent",
          "population",
          "gnp"
        ]
      }
    ],
    "gold_sql": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"\tworld_1",
    "remarks": "",
    "id": 722,
    "question": "What is the total population and maximum GNP in Asia?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "continent",
          "population",
          "gnp"
        ]
      }
    ],
    "gold_sql": "SELECT sum(Population) ,  max(GNP) FROM country WHERE Continent  =  \"Asia\"\tworld_1",
    "remarks": "",
    "id": 723,
    "question": "How many people live in Asia, and what is the largest GNP among them?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "governmentform",
          "lifeexpectancy",
          "continent"
        ]
      }
    ],
    "gold_sql": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"\tworld_1",
    "remarks": "",
    "id": 724,
    "question": "What is the average life expectancy in African countries that are republics?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "governmentform",
          "lifeexpectancy",
          "continent"
        ]
      }
    ],
    "gold_sql": "SELECT avg(LifeExpectancy) FROM country WHERE Continent  =  \"Africa\" AND GovernmentForm  =  \"Republic\"\tworld_1",
    "remarks": "",
    "id": 725,
    "question": "Give the average life expectancy for countries in Africa which are republics?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "continent",
          "surfacearea"
        ]
      }
    ],
    "gold_sql": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"\tworld_1",
    "remarks": "",
    "id": 726,
    "question": "What is the total surface area of the continents Asia and Europe?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "continent",
          "surfacearea"
        ]
      }
    ],
    "gold_sql": "SELECT sum(SurfaceArea) FROM country WHERE Continent  =  \"Asia\" OR Continent  =  \"Europe\"\tworld_1",
    "remarks": "",
    "id": 727,
    "question": "Give the total surface area covered by countries in Asia or Europe.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "city",
        "columns": [
          "district",
          "population"
        ]
      }
    ],
    "gold_sql": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"\tworld_1",
    "remarks": "",
    "id": 728,
    "question": "How many people live in Gelderland district?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "city",
        "columns": [
          "district",
          "population"
        ]
      }
    ],
    "gold_sql": "SELECT sum(Population) FROM city WHERE District  =  \"Gelderland\"\tworld_1",
    "remarks": "",
    "id": 729,
    "question": "What is the total population of Gelderland district?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "governmentform",
          "population",
          "gnp"
        ]
      }
    ],
    "gold_sql": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"\tworld_1",
    "remarks": "",
    "id": 730,
    "question": "What is the average GNP and total population in all nations whose government is US territory?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "governmentform",
          "population",
          "gnp"
        ]
      }
    ],
    "gold_sql": "SELECT avg(GNP) ,  sum(population) FROM country WHERE GovernmentForm  =  \"US Territory\"\tworld_1",
    "remarks": "",
    "id": 731,
    "question": "Give the mean GNP and total population of nations which are considered US territory.",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "countrylanguage",
        "columns": [
          "language"
        ]
      }
    ],
    "gold_sql": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage\tworld_1",
    "remarks": "",
    "id": 732,
    "question": "How many unique languages are spoken in the world?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "countrylanguage",
        "columns": [
          "language"
        ]
      }
    ],
    "gold_sql": "SELECT count(DISTINCT LANGUAGE) FROM countrylanguage\tworld_1",
    "remarks": "",
    "id": 733,
    "question": "What is the number of distinct languages used around the world?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "governmentform",
          "continent"
        ]
      }
    ],
    "gold_sql": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"\tworld_1",
    "remarks": "",
    "id": 734,
    "question": "How many type of governments are in Africa?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "governmentform",
          "continent"
        ]
      }
    ],
    "gold_sql": "SELECT count(DISTINCT GovernmentForm) FROM country WHERE Continent  =  \"Africa\"\tworld_1",
    "remarks": "",
    "id": 735,
    "question": "How many different forms of governments are there in Africa?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "name",
          "code"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode"
        ]
      }
    ],
    "gold_sql": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"\tworld_1",
    "remarks": "",
    "id": 736,
    "question": "What is the total number of languages used in Aruba?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "name",
          "code"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode"
        ]
      }
    ],
    "gold_sql": "SELECT COUNT(T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Aruba\"\tworld_1",
    "remarks": "",
    "id": 737,
    "question": "How many languages are spoken in Aruba?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "name",
          "code"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "countrycode"
        ]
      }
    ],
    "gold_sql": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"\tworld_1",
    "remarks": "Qualification failed: Column '\"isofficial\"' could not be resolved.",
    "id": 738,
    "question": "How many official languages does Afghanistan have?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "name",
          "code"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "countrycode"
        ]
      }
    ],
    "gold_sql": "SELECT COUNT(*) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Name  =  \"Afghanistan\" AND IsOfficial  =  \"T\"\tworld_1",
    "remarks": "Qualification failed: Column '\"isofficial\"' could not be resolved.",
    "id": 739,
    "question": "How many official languages are spoken in Afghanistan?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "name",
          "code"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "countrycode"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1\tworld_1",
    "remarks": "",
    "id": 740,
    "question": "What is name of the country that speaks the largest number of languages?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "name",
          "code"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "countrycode"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name ORDER BY COUNT(*) DESC LIMIT 1\tworld_1",
    "remarks": "",
    "id": 741,
    "question": "Give the name of the nation that uses the greatest amount of languages.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "continent",
          "code"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "countrycode"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1\tworld_1",
    "remarks": "",
    "id": 742,
    "question": "Which continent has the most diverse languages?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "continent",
          "code"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "countrycode"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Continent FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Continent ORDER BY COUNT(*) DESC LIMIT 1\tworld_1",
    "remarks": "",
    "id": 743,
    "question": "Which continent speaks the most languages?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "name",
          "code"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode"
        ]
      }
    ],
    "gold_sql": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")\tworld_1",
    "remarks": "",
    "id": 744,
    "question": "How many countries speak both English and Dutch?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "name",
          "code"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode"
        ]
      }
    ],
    "gold_sql": "SELECT COUNT(*) FROM (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\")\tworld_1",
    "remarks": "",
    "id": 745,
    "question": "What is the number of nations that use English and Dutch?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "name",
          "code"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"\tworld_1",
    "remarks": "",
    "id": 746,
    "question": "What are the names of nations speak both English and French?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "name",
          "code"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\"\tworld_1",
    "remarks": "",
    "id": 747,
    "question": "Give the names of nations that speak both English and French.",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "name",
          "code"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode",
          "isofficial"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"\tworld_1",
    "remarks": "",
    "id": 748,
    "question": "What are the names of nations where both English and French are official languages?",
    "involved_table_count": 2,
    "involved_column_count": 5
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "name",
          "code"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode",
          "isofficial"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\" INTERSECT SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"French\" AND T2.IsOfficial  =  \"T\"\tworld_1",
    "remarks": "",
    "id": 749,
    "question": "Give the names of countries with English and French as official languages.",
    "involved_table_count": 2,
    "involved_column_count": 5
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "code"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode"
        ]
      }
    ],
    "gold_sql": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"\tworld_1",
    "remarks": "Qualification failed: Column '\"continent\"' could not be resolved.",
    "id": 750,
    "question": "What is the number of distinct continents where Chinese is spoken?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "code"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode"
        ]
      }
    ],
    "gold_sql": "SELECT COUNT( DISTINCT Continent) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Chinese\"\tworld_1",
    "remarks": "Qualification failed: Column '\"continent\"' could not be resolved.",
    "id": 751,
    "question": "How many continents speak Chinese?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "code",
          "region"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"\tworld_1",
    "remarks": "",
    "id": 752,
    "question": "What are the regions that use English or Dutch?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "code",
          "region"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT T1.Region FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" OR T2.Language  =  \"Dutch\"\tworld_1",
    "remarks": "",
    "id": 753,
    "question": "Which regions speak Dutch or English?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "code"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode"
        ]
      }
    ],
    "gold_sql": "SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND IsOfficial  =  \"T\" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\" AND IsOfficial  =  \"T\"\tworld_1",
    "remarks": "Qualification failed: Column '\"isofficial\"' could not be resolved.",
    "id": 754,
    "question": "What are the countries where either English or Dutch is the official language?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "code"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode"
        ]
      }
    ],
    "gold_sql": "SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND IsOfficial  =  \"T\" UNION SELECT * FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"Dutch\" AND IsOfficial  =  \"T\"\tworld_1",
    "remarks": "Qualification failed: Column '\"isofficial\"' could not be resolved.",
    "id": 755,
    "question": "Which countries have either English or Dutch as an official language?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "continent",
          "code"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode"
        ]
      }
    ],
    "gold_sql": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1\tworld_1",
    "remarks": "",
    "id": 756,
    "question": "Which language is the most popular on the Asian continent?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "continent",
          "code"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode"
        ]
      }
    ],
    "gold_sql": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.Continent  =  \"Asia\" GROUP BY T2.Language ORDER BY COUNT (*) DESC LIMIT 1\tworld_1",
    "remarks": "",
    "id": 757,
    "question": "What is the language that is used by the largest number of Asian nations?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "governmentform",
          "code"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode"
        ]
      }
    ],
    "gold_sql": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1\tworld_1",
    "remarks": "",
    "id": 758,
    "question": "Which languages are spoken by only one country in republic governments?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "governmentform",
          "code"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode"
        ]
      }
    ],
    "gold_sql": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.GovernmentForm  =  \"Republic\" GROUP BY T2.Language HAVING COUNT(*)  =  1\tworld_1",
    "remarks": "",
    "id": 759,
    "question": "What languages are only used by a single country with a republic government?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "city",
        "columns": [
          "countrycode",
          "name",
          "population"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1\tworld_1",
    "remarks": "",
    "id": 760,
    "question": "Find the city with the largest population that uses English.",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "city",
        "columns": [
          "countrycode",
          "name",
          "population"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Name ,  T1.Population FROM city AS T1 JOIN countrylanguage AS T2 ON T1.CountryCode  =  T2.CountryCode WHERE T2.Language  =  \"English\" ORDER BY T1.Population DESC LIMIT 1\tworld_1",
    "remarks": "",
    "id": 761,
    "question": "What is the most populace city that speaks English?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "lifeexpectancy",
          "name",
          "continent",
          "surfacearea",
          "population"
        ]
      }
    ],
    "gold_sql": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1\tworld_1",
    "remarks": "",
    "id": 762,
    "question": "Find the name, population and expected life length of asian country with the largest area?",
    "involved_table_count": 1,
    "involved_column_count": 5
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "lifeexpectancy",
          "name",
          "continent",
          "surfacearea",
          "population"
        ]
      }
    ],
    "gold_sql": "SELECT Name ,  Population ,  LifeExpectancy FROM country WHERE Continent  =  \"Asia\" ORDER BY SurfaceArea DESC LIMIT 1\tworld_1",
    "remarks": "",
    "id": 763,
    "question": "What are the name, population, and life expectancy of the largest Asian country by land?",
    "involved_table_count": 1,
    "involved_column_count": 5
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "lifeexpectancy",
          "name",
          "code"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode",
          "isofficial"
        ]
      }
    ],
    "gold_sql": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")\tworld_1",
    "remarks": "",
    "id": 764,
    "question": "What is average life expectancy in the countries where English is not the official language?",
    "involved_table_count": 2,
    "involved_column_count": 6
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "lifeexpectancy",
          "name",
          "code"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode",
          "isofficial"
        ]
      }
    ],
    "gold_sql": "SELECT avg(LifeExpectancy) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\" AND T2.IsOfficial  =  \"T\")\tworld_1",
    "remarks": "",
    "id": 765,
    "question": "Give the mean life expectancy of countries in which English is not the official language.",
    "involved_table_count": 2,
    "involved_column_count": 6
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "name",
          "code",
          "population"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode"
        ]
      }
    ],
    "gold_sql": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")\tworld_1",
    "remarks": "",
    "id": 766,
    "question": "What is the total number of people living in the nations that do not use English?",
    "involved_table_count": 2,
    "involved_column_count": 5
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "name",
          "code",
          "population"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode"
        ]
      }
    ],
    "gold_sql": "SELECT sum(Population) FROM country WHERE Name NOT IN (SELECT T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T2.Language  =  \"English\")\tworld_1",
    "remarks": "",
    "id": 767,
    "question": "How many people live in countries that do not speak English?",
    "involved_table_count": 2,
    "involved_column_count": 5
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "headofstate",
          "code"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode",
          "isofficial"
        ]
      }
    ],
    "gold_sql": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"\tworld_1",
    "remarks": "",
    "id": 768,
    "question": "What is the official language spoken in the country whose head of state is Beatrix?",
    "involved_table_count": 2,
    "involved_column_count": 5
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "headofstate",
          "code"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode",
          "isofficial"
        ]
      }
    ],
    "gold_sql": "SELECT T2.Language FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE T1.HeadOfState  =  \"Beatrix\" AND T2.IsOfficial  =  \"T\"\tworld_1",
    "remarks": "",
    "id": 769,
    "question": "What is the official language used in the country the name of whose head of state is Beatrix.",
    "involved_table_count": 2,
    "involved_column_count": 5
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "code"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode",
          "isofficial"
        ]
      }
    ],
    "gold_sql": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"\tworld_1",
    "remarks": "Qualification failed: Column '\"indepyear\"' could not be resolved.",
    "id": 770,
    "question": "What is the total number of unique official languages spoken in the countries that are founded before 1930?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "code"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode",
          "isofficial"
        ]
      }
    ],
    "gold_sql": "SELECT count(DISTINCT T2.Language) FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode WHERE  IndepYear  <  1930 AND T2.IsOfficial  =  \"T\"\tworld_1",
    "remarks": "Qualification failed: Column '\"indepyear\"' could not be resolved.",
    "id": 771,
    "question": "For the countries founded before 1930, what is the total number of distinct official languages?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "continent",
          "name",
          "surfacearea"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")\tworld_1",
    "remarks": "",
    "id": 772,
    "question": "What are the countries that have greater surface area than any country in Europe?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "continent",
          "name",
          "surfacearea"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM country WHERE SurfaceArea  >  (SELECT min(SurfaceArea) FROM country WHERE Continent  =  \"Europe\")\tworld_1",
    "remarks": "",
    "id": 773,
    "question": "Which countries have greater area than that of any country in Europe?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "continent",
          "name",
          "population"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT max(population) FROM country WHERE Continent  =  \"Asia\")\tworld_1",
    "remarks": "",
    "id": 774,
    "question": "What are the African countries that have a  population less than any country in Asia?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "continent",
          "name",
          "population"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM country WHERE Continent  =  \"Africa\"  AND population  <  (SELECT min(population) FROM country WHERE Continent  =  \"Asia\")\tworld_1",
    "remarks": "",
    "id": 775,
    "question": "Which African countries have a smaller population than that of any country in Asia?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "continent",
          "name",
          "population"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT max(population) FROM country WHERE Continent  =  \"Africa\")\tworld_1",
    "remarks": "",
    "id": 776,
    "question": "Which Asian countries have a population that is larger than any country in Africa?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "continent",
          "name",
          "population"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM country WHERE Continent  =  \"Asia\"  AND population  >  (SELECT min(population) FROM country WHERE Continent  =  \"Africa\")\tworld_1",
    "remarks": "",
    "id": 777,
    "question": "What are the Asian countries which have a population larger than that of any country in Africa?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode"
        ]
      }
    ],
    "gold_sql": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"\tworld_1",
    "remarks": "",
    "id": 778,
    "question": "What are the country codes for countries that do not speak English?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode"
        ]
      }
    ],
    "gold_sql": "SELECT CountryCode FROM countrylanguage EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"\tworld_1",
    "remarks": "",
    "id": 779,
    "question": "Return the country codes for countries that do not speak English.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"\tworld_1",
    "remarks": "",
    "id": 780,
    "question": "What are the country codes of countries where people use languages other than English?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT CountryCode FROM countrylanguage WHERE LANGUAGE != \"English\"\tworld_1",
    "remarks": "",
    "id": 781,
    "question": "Give the country codes for countries in which people speak langauges that are not English.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "governmentform",
          "code"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode"
        ]
      }
    ],
    "gold_sql": "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"\tworld_1",
    "remarks": "",
    "id": 782,
    "question": "What are the codes of the countries that do not speak English and whose government forms are not Republic?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "governmentform",
          "code"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode"
        ]
      }
    ],
    "gold_sql": "SELECT Code FROM country WHERE GovernmentForm != \"Republic\" EXCEPT SELECT CountryCode FROM countrylanguage WHERE LANGUAGE  =  \"English\"\tworld_1",
    "remarks": "",
    "id": 783,
    "question": "Return the codes of countries that do not speak English and do not have Republics for governments.",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "continent",
          "name",
          "code"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "isofficial",
          "countrycode",
          "language"
        ]
      },
      {
        "table": "city",
        "columns": [
          "countrycode",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')\tworld_1",
    "remarks": "",
    "id": 784,
    "question": "Which cities are in European countries where English is not the official language?",
    "involved_table_count": 3,
    "involved_column_count": 6
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "continent",
          "name",
          "code"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "isofficial",
          "countrycode",
          "language"
        ]
      },
      {
        "table": "city",
        "columns": [
          "countrycode",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT T2.Name FROM country AS T1 JOIN city AS T2 ON T2.CountryCode  =  T1.Code WHERE T1.Continent  =  'Europe' AND T1.Name NOT IN (SELECT T3.Name FROM country AS T3 JOIN countrylanguage AS T4 ON T3.Code  =  T4.CountryCode WHERE T4.IsOfficial  =  'T' AND T4.Language  =  'English')\tworld_1",
    "remarks": "",
    "id": 785,
    "question": "What are the names of cities in Europe for which English is not the official language?",
    "involved_table_count": 3,
    "involved_column_count": 6
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "continent",
          "code"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "isofficial",
          "countrycode",
          "language"
        ]
      },
      {
        "table": "city",
        "columns": [
          "countrycode",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  \"Asia\"\tworld_1",
    "remarks": "",
    "id": 786,
    "question": "Whic`h unique cities are in  Asian countries where Chinese is the official language?",
    "involved_table_count": 3,
    "involved_column_count": 6
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "continent",
          "code"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "isofficial",
          "countrycode",
          "language"
        ]
      },
      {
        "table": "city",
        "columns": [
          "countrycode",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT T3.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode JOIN city AS T3 ON T1.Code  =  T3.CountryCode WHERE T2.IsOfficial  =  'T' AND T2.Language  =  'Chinese' AND T1.Continent  =  \"Asia\"\tworld_1",
    "remarks": "",
    "id": 787,
    "question": "Return the different names of cities that are in Asia and for which Chinese is the official language.",
    "involved_table_count": 3,
    "involved_column_count": 6
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "indepyear",
          "name",
          "population",
          "surfacearea"
        ]
      }
    ],
    "gold_sql": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1\tworld_1",
    "remarks": "",
    "id": 788,
    "question": "What are the name, independence year, and surface area of the country with the smallest population?",
    "involved_table_count": 1,
    "involved_column_count": 4
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "indepyear",
          "name",
          "population",
          "surfacearea"
        ]
      }
    ],
    "gold_sql": "SELECT Name ,  SurfaceArea ,  IndepYear FROM country ORDER BY Population LIMIT 1\tworld_1",
    "remarks": "",
    "id": 789,
    "question": "Give the name, year of independence, and surface area of the country that has the lowest population.",
    "involved_table_count": 1,
    "involved_column_count": 4
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "headofstate",
          "name",
          "population",
          "surfacearea"
        ]
      }
    ],
    "gold_sql": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1\tworld_1",
    "remarks": "",
    "id": 790,
    "question": "What are the population, name and leader of the country with the largest area?",
    "involved_table_count": 1,
    "involved_column_count": 4
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "headofstate",
          "name",
          "population",
          "surfacearea"
        ]
      }
    ],
    "gold_sql": "SELECT Name ,  population ,  HeadOfState FROM country ORDER BY SurfaceArea DESC LIMIT 1\tworld_1",
    "remarks": "",
    "id": 791,
    "question": "Give the name, population, and head of state for the country that has the largest area.",
    "involved_table_count": 1,
    "involved_column_count": 4
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "name",
          "code"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode"
        ]
      }
    ],
    "gold_sql": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2\tworld_1",
    "remarks": "",
    "id": 792,
    "question": "Return the country name and the numbers of languages spoken for each country that speaks at least 3 languages.",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "name",
          "code"
        ]
      },
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode"
        ]
      }
    ],
    "gold_sql": "SELECT COUNT(T2.Language) ,  T1.Name FROM country AS T1 JOIN countrylanguage AS T2 ON T1.Code  =  T2.CountryCode GROUP BY T1.Name HAVING COUNT(*)  >  2\tworld_1",
    "remarks": "",
    "id": 793,
    "question": "What are the names of countries that speak more than 2 languages, as well as how many languages they speak?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "city",
        "columns": [
          "district",
          "population"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District\tworld_1",
    "remarks": "",
    "id": 794,
    "question": "Find the number of cities in each district whose population is greater than the average population of cities?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "city",
        "columns": [
          "district",
          "population"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) ,  District FROM city WHERE Population  >  (SELECT avg(Population) FROM city) GROUP BY District\tworld_1",
    "remarks": "",
    "id": 795,
    "question": "How many cities in each district have a population that is above the average population across all cities?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "governmentform",
          "lifeexpectancy",
          "population"
        ]
      }
    ],
    "gold_sql": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72\tworld_1",
    "remarks": "",
    "id": 796,
    "question": "Find the government form name and total population for each government form whose average life expectancy is longer than 72.",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "governmentform",
          "lifeexpectancy",
          "population"
        ]
      }
    ],
    "gold_sql": "SELECT sum(Population) ,  GovernmentForm FROM country GROUP BY GovernmentForm HAVING avg(LifeExpectancy)  >  72\tworld_1",
    "remarks": "",
    "id": 797,
    "question": "What are the different government forms and what is the total population of each for government forms that have an average life expectancy greater than 72?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "lifeexpectancy",
          "continent",
          "population"
        ]
      }
    ],
    "gold_sql": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72\tworld_1",
    "remarks": "",
    "id": 798,
    "question": "Find the average life expectancy and total population for each continent where the average life expectancy is shorter than 72?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "lifeexpectancy",
          "continent",
          "population"
        ]
      }
    ],
    "gold_sql": "SELECT sum(Population) ,  avg(LifeExpectancy) ,  Continent FROM country GROUP BY Continent HAVING avg(LifeExpectancy)  <  72\tworld_1",
    "remarks": "",
    "id": 799,
    "question": "What are the different continents and the total popuation and average life expectancy corresponding to each, for continents that have an average life expectancy less than 72?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "name",
          "surfacearea"
        ]
      }
    ],
    "gold_sql": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5\tworld_1",
    "remarks": "",
    "id": 800,
    "question": "What are the names and areas of countries with the top 5 largest area?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "name",
          "surfacearea"
        ]
      }
    ],
    "gold_sql": "SELECT Name ,  SurfaceArea FROM country ORDER BY SurfaceArea DESC LIMIT 5\tworld_1",
    "remarks": "",
    "id": 801,
    "question": "Return the names and surface areas of the 5 largest countries.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "name",
          "population"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3\tworld_1",
    "remarks": "",
    "id": 802,
    "question": "What are names of countries with the top 3 largest population?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "name",
          "population"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM country ORDER BY Population DESC LIMIT 3\tworld_1",
    "remarks": "",
    "id": 803,
    "question": "Return the names of the 3 most populated countries.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "name",
          "population"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3\tworld_1",
    "remarks": "",
    "id": 804,
    "question": "What are the names of the nations with the 3 lowest populations?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "name",
          "population"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM country ORDER BY Population ASC LIMIT 3\tworld_1",
    "remarks": "",
    "id": 805,
    "question": "Return the names of the 3 countries with the fewest people.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "continent"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM country WHERE continent  =  \"Asia\"\tworld_1",
    "remarks": "",
    "id": 806,
    "question": "how many countries are in Asia?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "continent"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM country WHERE continent  =  \"Asia\"\tworld_1",
    "remarks": "",
    "id": 807,
    "question": "Count the number of countries in Asia.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "continent",
          "name",
          "population"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"\tworld_1",
    "remarks": "",
    "id": 808,
    "question": "What are the names of the countries that are in the continent of Europe and have a population of 80000?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "continent",
          "name",
          "population"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM country WHERE continent  =  \"Europe\" AND Population  =  \"80000\"\tworld_1",
    "remarks": "",
    "id": 809,
    "question": "Give the names of countries that are in Europe and have a population equal to 80000.",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "continent",
          "population",
          "surfacearea"
        ]
      }
    ],
    "gold_sql": "SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE Continent  =  \"North America\" AND SurfaceArea  >  3000\tworld_1",
    "remarks": "",
    "id": 810,
    "question": "What is the total population and average area of countries in the continent of North America whose area is bigger than 3000\uff1f",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "country",
        "columns": [
          "continent",
          "population",
          "surfacearea"
        ]
      }
    ],
    "gold_sql": "SELECT sum(Population) ,  avg(SurfaceArea) FROM country WHERE Continent  =  \"North America\" AND SurfaceArea  >  3000\tworld_1",
    "remarks": "",
    "id": 811,
    "question": "Give the total population and average surface area corresponding to countries in Noth America that have a surface area greater than 3000.",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "city",
        "columns": [
          "name",
          "population"
        ]
      }
    ],
    "gold_sql": "SELECT name FROM city WHERE Population BETWEEN 160000 AND 900000\tworld_1",
    "remarks": "",
    "id": 812,
    "question": "What are the cities whose population is between 160000 and 900000?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "city",
        "columns": [
          "name",
          "population"
        ]
      }
    ],
    "gold_sql": "SELECT name FROM city WHERE Population BETWEEN 160000 AND 90000\tworld_1",
    "remarks": "",
    "id": 813,
    "question": "Return the names of cities that have a population between 160000 and 900000.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "countrylanguage",
        "columns": [
          "language"
        ]
      }
    ],
    "gold_sql": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1\tworld_1",
    "remarks": "",
    "id": 814,
    "question": "Which language is spoken by the largest number of countries?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "countrylanguage",
        "columns": [
          "language"
        ]
      }
    ],
    "gold_sql": "SELECT LANGUAGE FROM countrylanguage GROUP BY LANGUAGE ORDER BY count(*) DESC LIMIT 1\tworld_1",
    "remarks": "",
    "id": 815,
    "question": "Give the language that is spoken in the most countries.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode",
          "percentage"
        ]
      }
    ],
    "gold_sql": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode\tworld_1",
    "remarks": "",
    "id": 816,
    "question": "What is the language spoken by the largest percentage of people in each country?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode",
          "percentage"
        ]
      }
    ],
    "gold_sql": "SELECT LANGUAGE ,  CountryCode ,  max(Percentage) FROM countrylanguage GROUP BY CountryCode\tworld_1",
    "remarks": "",
    "id": 817,
    "question": "What are the country codes of the different countries, and what are the languages spoken by the greatest percentage of people for each?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode",
          "percentage"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode\tworld_1",
    "remarks": "",
    "id": 818,
    "question": "What is the total number of countries where Spanish is spoken by the largest percentage of people?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode",
          "percentage"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) ,   max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode\tworld_1",
    "remarks": "",
    "id": 819,
    "question": "Count the number of countries for which Spanish is the predominantly spoken language.",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode",
          "percentage"
        ]
      }
    ],
    "gold_sql": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode\tworld_1",
    "remarks": "",
    "id": 820,
    "question": "What are the codes of countries where Spanish is spoken by the largest percentage of people?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "world_1",
    "tables": [
      {
        "table": "countrylanguage",
        "columns": [
          "language",
          "countrycode",
          "percentage"
        ]
      }
    ],
    "gold_sql": "SELECT CountryCode ,  max(Percentage) FROM countrylanguage WHERE LANGUAGE  =  \"Spanish\" GROUP BY CountryCode\tworld_1",
    "remarks": "",
    "id": 821,
    "question": "Return the codes of countries for which Spanish is the predominantly spoken language.",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "orchestra",
    "tables": [
      {
        "table": "conductor",
        "columns": []
      }
    ],
    "gold_sql": "SELECT count(*) FROM conductor\torchestra",
    "remarks": "",
    "id": 822,
    "question": "How many conductors are there?",
    "involved_table_count": 1,
    "involved_column_count": 0
  },
  {
    "database": "orchestra",
    "tables": [
      {
        "table": "conductor",
        "columns": []
      }
    ],
    "gold_sql": "SELECT count(*) FROM conductor\torchestra",
    "remarks": "",
    "id": 823,
    "question": "Count the number of conductors.",
    "involved_table_count": 1,
    "involved_column_count": 0
  },
  {
    "database": "orchestra",
    "tables": [
      {
        "table": "conductor",
        "columns": [
          "name",
          "age"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM conductor ORDER BY Age ASC\torchestra",
    "remarks": "",
    "id": 824,
    "question": "List the names of conductors in ascending order of age.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "orchestra",
    "tables": [
      {
        "table": "conductor",
        "columns": [
          "name",
          "age"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM conductor ORDER BY Age ASC\torchestra",
    "remarks": "",
    "id": 825,
    "question": "What are the names of conductors, ordered by age?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "orchestra",
    "tables": [
      {
        "table": "conductor",
        "columns": [
          "name",
          "nationality"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM conductor WHERE Nationality != 'USA'\torchestra",
    "remarks": "",
    "id": 826,
    "question": "What are the names of conductors whose nationalities are not \"USA\"?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "orchestra",
    "tables": [
      {
        "table": "conductor",
        "columns": [
          "name",
          "nationality"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM conductor WHERE Nationality != 'USA'\torchestra",
    "remarks": "",
    "id": 827,
    "question": "Return the names of conductors that do not have the nationality \"USA\".",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "orchestra",
    "tables": [
      {
        "table": "orchestra",
        "columns": [
          "record_company",
          "year_of_founded"
        ]
      }
    ],
    "gold_sql": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC\torchestra",
    "remarks": "",
    "id": 828,
    "question": "What are the record companies of orchestras in descending order of years in which they were founded?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "orchestra",
    "tables": [
      {
        "table": "orchestra",
        "columns": [
          "record_company",
          "year_of_founded"
        ]
      }
    ],
    "gold_sql": "SELECT Record_Company FROM orchestra ORDER BY Year_of_Founded DESC\torchestra",
    "remarks": "",
    "id": 829,
    "question": "Return the record companies of orchestras, sorted descending by the years in which they were founded.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "orchestra",
    "tables": [
      {
        "table": "show",
        "columns": [
          "attendance"
        ]
      }
    ],
    "gold_sql": "SELECT avg(Attendance) FROM SHOW\torchestra",
    "remarks": "",
    "id": 830,
    "question": "What is the average attendance of shows?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "orchestra",
    "tables": [
      {
        "table": "show",
        "columns": [
          "attendance"
        ]
      }
    ],
    "gold_sql": "SELECT avg(Attendance) FROM SHOW\torchestra",
    "remarks": "",
    "id": 831,
    "question": "Return the average attendance across all shows.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "orchestra",
    "tables": [
      {
        "table": "performance",
        "columns": [
          "type",
          "share"
        ]
      }
    ],
    "gold_sql": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"\torchestra",
    "remarks": "",
    "id": 832,
    "question": "What are the maximum and minimum share of performances whose type is not \"Live final\".",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "orchestra",
    "tables": [
      {
        "table": "performance",
        "columns": [
          "type",
          "share"
        ]
      }
    ],
    "gold_sql": "SELECT max(SHARE) ,  min(SHARE) FROM performance WHERE TYPE != \"Live final\"\torchestra",
    "remarks": "",
    "id": 833,
    "question": "Return the maximum and minimum shares for performances that do not have the type \"Live final\".",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "orchestra",
    "tables": [
      {
        "table": "conductor",
        "columns": [
          "nationality"
        ]
      }
    ],
    "gold_sql": "SELECT count(DISTINCT Nationality) FROM conductor\torchestra",
    "remarks": "",
    "id": 834,
    "question": "How many different nationalities do conductors have?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "orchestra",
    "tables": [
      {
        "table": "conductor",
        "columns": [
          "nationality"
        ]
      }
    ],
    "gold_sql": "SELECT count(DISTINCT Nationality) FROM conductor\torchestra",
    "remarks": "",
    "id": 835,
    "question": "Count the number of different nationalities of conductors.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "orchestra",
    "tables": [
      {
        "table": "conductor",
        "columns": [
          "year_of_work",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC\torchestra",
    "remarks": "",
    "id": 836,
    "question": "List names of conductors in descending order of years of work.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "orchestra",
    "tables": [
      {
        "table": "conductor",
        "columns": [
          "year_of_work",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC\torchestra",
    "remarks": "",
    "id": 837,
    "question": "What are the names of conductors, sorted descending by the number of years they have worked?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "orchestra",
    "tables": [
      {
        "table": "conductor",
        "columns": [
          "year_of_work",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1\torchestra",
    "remarks": "",
    "id": 838,
    "question": "List the name of the conductor with the most years of work.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "orchestra",
    "tables": [
      {
        "table": "conductor",
        "columns": [
          "year_of_work",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM conductor ORDER BY Year_of_Work DESC LIMIT 1\torchestra",
    "remarks": "",
    "id": 839,
    "question": "What is the name of the conductor who has worked the greatest number of years?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "orchestra",
    "tables": [
      {
        "table": "conductor",
        "columns": [
          "name",
          "conductor_id"
        ]
      },
      {
        "table": "orchestra",
        "columns": [
          "conductor_id",
          "orchestra"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID\torchestra",
    "remarks": "",
    "id": 840,
    "question": "Show the names of conductors and the orchestras they have conducted.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "orchestra",
    "tables": [
      {
        "table": "conductor",
        "columns": [
          "name",
          "conductor_id"
        ]
      },
      {
        "table": "orchestra",
        "columns": [
          "conductor_id",
          "orchestra"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Name ,  T2.Orchestra FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID\torchestra",
    "remarks": "",
    "id": 841,
    "question": "What are the names of conductors as well as the corresonding orchestras that they have conducted?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "orchestra",
    "tables": [
      {
        "table": "conductor",
        "columns": [
          "name",
          "conductor_id"
        ]
      },
      {
        "table": "orchestra",
        "columns": [
          "conductor_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1\torchestra",
    "remarks": "",
    "id": 842,
    "question": "Show the names of conductors that have conducted more than one orchestras.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "orchestra",
    "tables": [
      {
        "table": "conductor",
        "columns": [
          "name",
          "conductor_id"
        ]
      },
      {
        "table": "orchestra",
        "columns": [
          "conductor_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID HAVING COUNT(*)  >  1\torchestra",
    "remarks": "",
    "id": 843,
    "question": "What are the names of conductors who have conducted at more than one orchestra?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "orchestra",
    "tables": [
      {
        "table": "conductor",
        "columns": [
          "name",
          "conductor_id"
        ]
      },
      {
        "table": "orchestra",
        "columns": [
          "conductor_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1\torchestra",
    "remarks": "",
    "id": 844,
    "question": "Show the name of the conductor that has conducted the most number of orchestras.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "orchestra",
    "tables": [
      {
        "table": "conductor",
        "columns": [
          "name",
          "conductor_id"
        ]
      },
      {
        "table": "orchestra",
        "columns": [
          "conductor_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID GROUP BY T2.Conductor_ID ORDER BY COUNT(*) DESC LIMIT 1\torchestra",
    "remarks": "",
    "id": 845,
    "question": "What is the name of the conductor who has conducted the most orchestras?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "orchestra",
    "tables": [
      {
        "table": "conductor",
        "columns": [
          "name",
          "conductor_id"
        ]
      },
      {
        "table": "orchestra",
        "columns": [
          "conductor_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008\torchestra",
    "remarks": "Qualification failed: Column '\"year_of_founded\"' could not be resolved.",
    "id": 846,
    "question": "Please show the name of the conductor that has conducted orchestras founded after 2008.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "orchestra",
    "tables": [
      {
        "table": "conductor",
        "columns": [
          "name",
          "conductor_id"
        ]
      },
      {
        "table": "orchestra",
        "columns": [
          "conductor_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Name FROM conductor AS T1 JOIN orchestra AS T2 ON T1.Conductor_ID  =  T2.Conductor_ID WHERE Year_of_Founded  >  2008\torchestra",
    "remarks": "Qualification failed: Column '\"year_of_founded\"' could not be resolved.",
    "id": 847,
    "question": "What are the names of conductors who have conducted orchestras founded after the year 2008?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "orchestra",
    "tables": [
      {
        "table": "orchestra",
        "columns": [
          "record_company"
        ]
      }
    ],
    "gold_sql": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company\torchestra",
    "remarks": "",
    "id": 848,
    "question": "Please show the different record companies and the corresponding number of orchestras.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "orchestra",
    "tables": [
      {
        "table": "orchestra",
        "columns": [
          "record_company"
        ]
      }
    ],
    "gold_sql": "SELECT Record_Company ,  COUNT(*) FROM orchestra GROUP BY Record_Company\torchestra",
    "remarks": "",
    "id": 849,
    "question": "How many orchestras does each record company manage?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "orchestra",
    "tables": [
      {
        "table": "orchestra",
        "columns": [
          "major_record_format"
        ]
      }
    ],
    "gold_sql": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC\torchestra",
    "remarks": "",
    "id": 850,
    "question": "Please show the record formats of orchestras in ascending order of count.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "orchestra",
    "tables": [
      {
        "table": "orchestra",
        "columns": [
          "major_record_format"
        ]
      }
    ],
    "gold_sql": "SELECT Major_Record_Format FROM orchestra GROUP BY Major_Record_Format ORDER BY COUNT(*) ASC\torchestra",
    "remarks": "",
    "id": 851,
    "question": "What are the major record formats of orchestras, sorted by their frequency?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "orchestra",
    "tables": [
      {
        "table": "orchestra",
        "columns": [
          "record_company"
        ]
      }
    ],
    "gold_sql": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1\torchestra",
    "remarks": "",
    "id": 852,
    "question": "List the record company shared by the most number of orchestras.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "orchestra",
    "tables": [
      {
        "table": "orchestra",
        "columns": [
          "record_company"
        ]
      }
    ],
    "gold_sql": "SELECT Record_Company FROM orchestra GROUP BY Record_Company ORDER BY COUNT(*) DESC LIMIT 1\torchestra",
    "remarks": "",
    "id": 853,
    "question": "What is the record company used by the greatest number of orchestras?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "orchestra",
    "tables": [
      {
        "table": "performance",
        "columns": [
          "orchestra_id"
        ]
      },
      {
        "table": "orchestra",
        "columns": [
          "orchestra",
          "orchestra_id"
        ]
      }
    ],
    "gold_sql": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)\torchestra",
    "remarks": "",
    "id": 854,
    "question": "List the names of orchestras that have no performance.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "orchestra",
    "tables": [
      {
        "table": "performance",
        "columns": [
          "orchestra_id"
        ]
      },
      {
        "table": "orchestra",
        "columns": [
          "orchestra",
          "orchestra_id"
        ]
      }
    ],
    "gold_sql": "SELECT Orchestra FROM orchestra WHERE Orchestra_ID NOT IN (SELECT Orchestra_ID FROM performance)\torchestra",
    "remarks": "",
    "id": 855,
    "question": "What are the orchestras that do not have any performances?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "orchestra",
    "tables": [
      {
        "table": "orchestra",
        "columns": [
          "record_company",
          "year_of_founded"
        ]
      }
    ],
    "gold_sql": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003\torchestra",
    "remarks": "",
    "id": 856,
    "question": "Show the record companies shared by orchestras founded before 2003 and after 2003.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "orchestra",
    "tables": [
      {
        "table": "orchestra",
        "columns": [
          "record_company",
          "year_of_founded"
        ]
      }
    ],
    "gold_sql": "SELECT Record_Company FROM orchestra WHERE Year_of_Founded  <  2003 INTERSECT SELECT Record_Company FROM orchestra WHERE Year_of_Founded  >  2003\torchestra",
    "remarks": "",
    "id": 857,
    "question": "What are the record companies that are used by both orchestras founded before 2003 and those founded after 2003?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "orchestra",
    "tables": [
      {
        "table": "orchestra",
        "columns": [
          "major_record_format"
        ]
      }
    ],
    "gold_sql": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"\torchestra",
    "remarks": "",
    "id": 858,
    "question": "Find the number of orchestras whose record format is \"CD\" or \"DVD\".",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "orchestra",
    "tables": [
      {
        "table": "orchestra",
        "columns": [
          "major_record_format"
        ]
      }
    ],
    "gold_sql": "SELECT COUNT(*) FROM orchestra WHERE Major_Record_Format  =  \"CD\" OR Major_Record_Format  =  \"DVD\"\torchestra",
    "remarks": "",
    "id": 859,
    "question": "Count the number of orchestras that have CD or DVD as their record format.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "orchestra",
    "tables": [
      {
        "table": "orchestra",
        "columns": [
          "orchestra_id"
        ]
      },
      {
        "table": "performance",
        "columns": [
          "orchestra_id"
        ]
      }
    ],
    "gold_sql": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1\torchestra",
    "remarks": "Qualification failed: Column '\"year_of_founded\"' could not be resolved.",
    "id": 860,
    "question": "Show the years in which orchestras that have given more than one performance are founded.",
    "involved_table_count": 2,
    "involved_column_count": 1
  },
  {
    "database": "orchestra",
    "tables": [
      {
        "table": "orchestra",
        "columns": [
          "orchestra_id"
        ]
      },
      {
        "table": "performance",
        "columns": [
          "orchestra_id"
        ]
      }
    ],
    "gold_sql": "SELECT Year_of_Founded FROM orchestra AS T1 JOIN performance AS T2 ON T1.Orchestra_ID  =  T2.Orchestra_ID GROUP BY T2.Orchestra_ID HAVING COUNT(*)  >  1\torchestra",
    "remarks": "Qualification failed: Column '\"year_of_founded\"' could not be resolved.",
    "id": 861,
    "question": "What are years of founding for orchestras that have had more than a single performance?",
    "involved_table_count": 2,
    "involved_column_count": 1
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "highschooler",
        "columns": []
      }
    ],
    "gold_sql": "SELECT count(*) FROM Highschooler\tnetwork_1",
    "remarks": "",
    "id": 862,
    "question": "How many high schoolers are there?",
    "involved_table_count": 1,
    "involved_column_count": 0
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "highschooler",
        "columns": []
      }
    ],
    "gold_sql": "SELECT count(*) FROM Highschooler\tnetwork_1",
    "remarks": "",
    "id": 863,
    "question": "Count the number of high schoolers.",
    "involved_table_count": 1,
    "involved_column_count": 0
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "highschooler",
        "columns": [
          "grade",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT name ,  grade FROM Highschooler\tnetwork_1",
    "remarks": "",
    "id": 864,
    "question": "Show the names and grades of each high schooler.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "highschooler",
        "columns": [
          "grade",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT name ,  grade FROM Highschooler\tnetwork_1",
    "remarks": "",
    "id": 865,
    "question": "What are the names and grades for each high schooler?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "highschooler",
        "columns": [
          "grade"
        ]
      }
    ],
    "gold_sql": "SELECT grade FROM Highschooler\tnetwork_1",
    "remarks": "",
    "id": 866,
    "question": "Show all the grades of the high schoolers.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "highschooler",
        "columns": [
          "grade"
        ]
      }
    ],
    "gold_sql": "SELECT grade FROM Highschooler\tnetwork_1",
    "remarks": "",
    "id": 867,
    "question": "What is the grade of each high schooler?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "highschooler",
        "columns": [
          "name",
          "grade"
        ]
      }
    ],
    "gold_sql": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"\tnetwork_1",
    "remarks": "",
    "id": 868,
    "question": "What grade is Kyle in?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "highschooler",
        "columns": [
          "name",
          "grade"
        ]
      }
    ],
    "gold_sql": "SELECT grade FROM Highschooler WHERE name  =  \"Kyle\"\tnetwork_1",
    "remarks": "",
    "id": 869,
    "question": "Return the grade for the high schooler named Kyle.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "highschooler",
        "columns": [
          "grade",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT name FROM Highschooler WHERE grade  =  10\tnetwork_1",
    "remarks": "",
    "id": 870,
    "question": "Show the names of all high schoolers in grade 10.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "highschooler",
        "columns": [
          "grade",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT name FROM Highschooler WHERE grade  =  10\tnetwork_1",
    "remarks": "",
    "id": 871,
    "question": "What are the names of all high schoolers in grade 10?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "highschooler",
        "columns": [
          "id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"\tnetwork_1",
    "remarks": "",
    "id": 872,
    "question": "Show the ID of the high schooler named Kyle.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "highschooler",
        "columns": [
          "id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT ID FROM Highschooler WHERE name  =  \"Kyle\"\tnetwork_1",
    "remarks": "",
    "id": 873,
    "question": "What is Kyle's id?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "highschooler",
        "columns": [
          "grade"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10\tnetwork_1",
    "remarks": "",
    "id": 874,
    "question": "How many high schoolers are there in grade 9 or 10?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "highschooler",
        "columns": [
          "grade"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM Highschooler WHERE grade  =  9 OR grade  =  10\tnetwork_1",
    "remarks": "",
    "id": 875,
    "question": "Count the number of high schoolers in grades 9 or 10.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "highschooler",
        "columns": [
          "grade"
        ]
      }
    ],
    "gold_sql": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade\tnetwork_1",
    "remarks": "",
    "id": 876,
    "question": "Show the number of high schoolers for each grade.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "highschooler",
        "columns": [
          "grade"
        ]
      }
    ],
    "gold_sql": "SELECT grade ,  count(*) FROM Highschooler GROUP BY grade\tnetwork_1",
    "remarks": "",
    "id": 877,
    "question": "How many high schoolers are in each grade?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "highschooler",
        "columns": [
          "grade"
        ]
      }
    ],
    "gold_sql": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1\tnetwork_1",
    "remarks": "",
    "id": 878,
    "question": "Which grade has the most high schoolers?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "highschooler",
        "columns": [
          "grade"
        ]
      }
    ],
    "gold_sql": "SELECT grade FROM Highschooler GROUP BY grade ORDER BY count(*) DESC LIMIT 1\tnetwork_1",
    "remarks": "",
    "id": 879,
    "question": "Return the grade that has the greatest number of high schoolers.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "highschooler",
        "columns": [
          "grade"
        ]
      }
    ],
    "gold_sql": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4\tnetwork_1",
    "remarks": "",
    "id": 880,
    "question": "Show me all grades that have at least 4 students.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "highschooler",
        "columns": [
          "grade"
        ]
      }
    ],
    "gold_sql": "SELECT grade FROM Highschooler GROUP BY grade HAVING count(*)  >=  4\tnetwork_1",
    "remarks": "",
    "id": 881,
    "question": "Which grades have 4 or more high schoolers?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "friend",
        "columns": [
          "student_id"
        ]
      }
    ],
    "gold_sql": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id\tnetwork_1",
    "remarks": "",
    "id": 882,
    "question": "Show the student IDs and numbers of friends corresponding to each.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "friend",
        "columns": [
          "student_id"
        ]
      }
    ],
    "gold_sql": "SELECT student_id ,  count(*) FROM Friend GROUP BY student_id\tnetwork_1",
    "remarks": "",
    "id": 883,
    "question": "How many friends does each student have?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "friend",
        "columns": [
          "student_id"
        ]
      },
      {
        "table": "highschooler",
        "columns": [
          "id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id\tnetwork_1",
    "remarks": "",
    "id": 884,
    "question": "Show the names of high school students and their corresponding number of friends.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "friend",
        "columns": [
          "student_id"
        ]
      },
      {
        "table": "highschooler",
        "columns": [
          "id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT T2.name ,  count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id\tnetwork_1",
    "remarks": "",
    "id": 885,
    "question": "What are the names of the high schoolers and how many friends does each have?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "friend",
        "columns": [
          "student_id"
        ]
      },
      {
        "table": "highschooler",
        "columns": [
          "id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1\tnetwork_1",
    "remarks": "",
    "id": 886,
    "question": "What is the name of the high schooler who has the greatest number of friends?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "friend",
        "columns": [
          "student_id"
        ]
      },
      {
        "table": "highschooler",
        "columns": [
          "id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1\tnetwork_1",
    "remarks": "",
    "id": 887,
    "question": "Return the name of the high school student with the most friends.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "friend",
        "columns": [
          "student_id"
        ]
      },
      {
        "table": "highschooler",
        "columns": [
          "id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3\tnetwork_1",
    "remarks": "",
    "id": 888,
    "question": "Show the names of high schoolers who have at least 3 friends.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "friend",
        "columns": [
          "student_id"
        ]
      },
      {
        "table": "highschooler",
        "columns": [
          "id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  3\tnetwork_1",
    "remarks": "",
    "id": 889,
    "question": "What are the names of high schoolers who have 3 or more friends?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "friend",
        "columns": [
          "student_id",
          "friend_id"
        ]
      },
      {
        "table": "highschooler",
        "columns": [
          "id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"\tnetwork_1",
    "remarks": "",
    "id": 890,
    "question": "Show the names of all of the high schooler Kyle's friends.",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "friend",
        "columns": [
          "student_id",
          "friend_id"
        ]
      },
      {
        "table": "highschooler",
        "columns": [
          "id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT T3.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id JOIN Highschooler AS T3 ON T1.friend_id  =  T3.id WHERE T2.name  =  \"Kyle\"\tnetwork_1",
    "remarks": "",
    "id": 891,
    "question": "Return the names of friends of the high school student Kyle.",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "friend",
        "columns": [
          "student_id"
        ]
      },
      {
        "table": "highschooler",
        "columns": [
          "id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"\tnetwork_1",
    "remarks": "",
    "id": 892,
    "question": "How many friends does the high school student Kyle have?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "friend",
        "columns": [
          "student_id"
        ]
      },
      {
        "table": "highschooler",
        "columns": [
          "id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"\tnetwork_1",
    "remarks": "",
    "id": 893,
    "question": "Count the number of friends Kyle has.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "highschooler",
        "columns": [
          "id"
        ]
      },
      {
        "table": "friend",
        "columns": [
          "student_id"
        ]
      }
    ],
    "gold_sql": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend\tnetwork_1",
    "remarks": "",
    "id": 894,
    "question": "Show ids of all students who do not have any friends.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "highschooler",
        "columns": [
          "id"
        ]
      },
      {
        "table": "friend",
        "columns": [
          "student_id"
        ]
      }
    ],
    "gold_sql": "SELECT id FROM Highschooler EXCEPT SELECT student_id FROM Friend\tnetwork_1",
    "remarks": "",
    "id": 895,
    "question": "What are the ids of high school students who do not have friends?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "highschooler",
        "columns": [
          "id",
          "name"
        ]
      },
      {
        "table": "friend",
        "columns": [
          "student_id"
        ]
      }
    ],
    "gold_sql": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id\tnetwork_1",
    "remarks": "",
    "id": 896,
    "question": "Show names of all high school students who do not have any friends.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "highschooler",
        "columns": [
          "id",
          "name"
        ]
      },
      {
        "table": "friend",
        "columns": [
          "student_id"
        ]
      }
    ],
    "gold_sql": "SELECT name FROM Highschooler EXCEPT SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id\tnetwork_1",
    "remarks": "",
    "id": 897,
    "question": "What are the names of students who have no friends?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "friend",
        "columns": [
          "student_id"
        ]
      },
      {
        "table": "likes",
        "columns": [
          "liked_id"
        ]
      }
    ],
    "gold_sql": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes\tnetwork_1",
    "remarks": "",
    "id": 898,
    "question": "Show the ids of high schoolers who have friends and are also liked by someone else.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "friend",
        "columns": [
          "student_id"
        ]
      },
      {
        "table": "likes",
        "columns": [
          "liked_id"
        ]
      }
    ],
    "gold_sql": "SELECT student_id FROM Friend INTERSECT SELECT liked_id FROM Likes\tnetwork_1",
    "remarks": "",
    "id": 899,
    "question": "What are the ids of students who both have friends and are liked?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "friend",
        "columns": []
      },
      {
        "table": "highschooler",
        "columns": [
          "id",
          "name"
        ]
      },
      {
        "table": "likes",
        "columns": [
          "liked_id",
          "student_id"
        ]
      }
    ],
    "gold_sql": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id\tnetwork_1",
    "remarks": "",
    "id": 900,
    "question": "Show name of all students who have some friends and also are liked by someone else.",
    "involved_table_count": 3,
    "involved_column_count": 4
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "friend",
        "columns": []
      },
      {
        "table": "highschooler",
        "columns": [
          "id",
          "name"
        ]
      },
      {
        "table": "likes",
        "columns": [
          "liked_id",
          "student_id"
        ]
      }
    ],
    "gold_sql": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id INTERSECT SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.liked_id  =  T2.id\tnetwork_1",
    "remarks": "",
    "id": 901,
    "question": "What are the names of high schoolers who both have friends and are liked?",
    "involved_table_count": 3,
    "involved_column_count": 4
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "likes",
        "columns": [
          "student_id"
        ]
      }
    ],
    "gold_sql": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id\tnetwork_1",
    "remarks": "",
    "id": 902,
    "question": "Count the number of likes for each student id.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "likes",
        "columns": [
          "student_id"
        ]
      }
    ],
    "gold_sql": "SELECT student_id ,  count(*) FROM Likes GROUP BY student_id\tnetwork_1",
    "remarks": "",
    "id": 903,
    "question": "How many likes correspond to each student id?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "likes",
        "columns": [
          "student_id"
        ]
      },
      {
        "table": "highschooler",
        "columns": [
          "id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id\tnetwork_1",
    "remarks": "",
    "id": 904,
    "question": "Show the names of high schoolers who have likes, and numbers of likes for each.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "likes",
        "columns": [
          "student_id"
        ]
      },
      {
        "table": "highschooler",
        "columns": [
          "id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT T2.name ,  count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id\tnetwork_1",
    "remarks": "",
    "id": 905,
    "question": "What are the names of high schoolers who have likes, and how many likes does each have?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "likes",
        "columns": [
          "student_id"
        ]
      },
      {
        "table": "highschooler",
        "columns": [
          "id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1\tnetwork_1",
    "remarks": "",
    "id": 906,
    "question": "What is the name of the high schooler who has the greatest number of likes?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "likes",
        "columns": [
          "student_id"
        ]
      },
      {
        "table": "highschooler",
        "columns": [
          "id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1\tnetwork_1",
    "remarks": "",
    "id": 907,
    "question": "Give the name of the student with the most likes.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "likes",
        "columns": [
          "student_id"
        ]
      },
      {
        "table": "highschooler",
        "columns": [
          "id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2\tnetwork_1",
    "remarks": "",
    "id": 908,
    "question": "Show the names of students who have at least 2 likes.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "likes",
        "columns": [
          "student_id"
        ]
      },
      {
        "table": "highschooler",
        "columns": [
          "id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT T2.name FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id GROUP BY T1.student_id HAVING count(*)  >=  2\tnetwork_1",
    "remarks": "",
    "id": 909,
    "question": "What are the names of students who have 2 or more likes?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "friend",
        "columns": [
          "student_id"
        ]
      },
      {
        "table": "highschooler",
        "columns": [
          "id",
          "name",
          "grade"
        ]
      }
    ],
    "gold_sql": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2\tnetwork_1",
    "remarks": "",
    "id": 910,
    "question": "Show the names of students who have a grade higher than 5 and have at least 2 friends.",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "friend",
        "columns": [
          "student_id"
        ]
      },
      {
        "table": "highschooler",
        "columns": [
          "id",
          "name",
          "grade"
        ]
      }
    ],
    "gold_sql": "SELECT T2.name FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.grade  >  5 GROUP BY T1.student_id HAVING count(*)  >=  2\tnetwork_1",
    "remarks": "",
    "id": 911,
    "question": "What are the names of high schoolers who have a grade of over 5 and have 2 or more friends?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "likes",
        "columns": [
          "student_id"
        ]
      },
      {
        "table": "highschooler",
        "columns": [
          "id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"\tnetwork_1",
    "remarks": "",
    "id": 912,
    "question": "How many likes does Kyle have?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "likes",
        "columns": [
          "student_id"
        ]
      },
      {
        "table": "highschooler",
        "columns": [
          "id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM Likes AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id WHERE T2.name  =  \"Kyle\"\tnetwork_1",
    "remarks": "",
    "id": 913,
    "question": "Return the number of likes that the high schooler named Kyle has.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "friend",
        "columns": [
          "student_id"
        ]
      },
      {
        "table": "highschooler",
        "columns": [
          "id",
          "grade"
        ]
      }
    ],
    "gold_sql": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)\tnetwork_1",
    "remarks": "",
    "id": 914,
    "question": "Find the average grade of all students who have some friends.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "friend",
        "columns": [
          "student_id"
        ]
      },
      {
        "table": "highschooler",
        "columns": [
          "id",
          "grade"
        ]
      }
    ],
    "gold_sql": "SELECT avg(grade) FROM Highschooler WHERE id IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)\tnetwork_1",
    "remarks": "",
    "id": 915,
    "question": "What is the average grade of students who have friends?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "friend",
        "columns": [
          "student_id"
        ]
      },
      {
        "table": "highschooler",
        "columns": [
          "id",
          "grade"
        ]
      }
    ],
    "gold_sql": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)\tnetwork_1",
    "remarks": "",
    "id": 916,
    "question": "Find the minimum grade of students who have no friends.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "network_1",
    "tables": [
      {
        "table": "friend",
        "columns": [
          "student_id"
        ]
      },
      {
        "table": "highschooler",
        "columns": [
          "id",
          "grade"
        ]
      }
    ],
    "gold_sql": "SELECT min(grade) FROM Highschooler WHERE id NOT IN (SELECT T1.student_id FROM Friend AS T1 JOIN Highschooler AS T2 ON T1.student_id  =  T2.id)\tnetwork_1",
    "remarks": "",
    "id": 917,
    "question": "What is the lowest grade of students who do not have any friends?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "owners",
        "columns": [
          "state"
        ]
      },
      {
        "table": "professionals",
        "columns": [
          "state"
        ]
      }
    ],
    "gold_sql": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals\tdog_kennels",
    "remarks": "",
    "id": 918,
    "question": "Which states have both owners and professionals living there?",
    "involved_table_count": 2,
    "involved_column_count": 1
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "owners",
        "columns": [
          "state"
        ]
      },
      {
        "table": "professionals",
        "columns": [
          "state"
        ]
      }
    ],
    "gold_sql": "SELECT state FROM Owners INTERSECT SELECT state FROM Professionals\tdog_kennels",
    "remarks": "",
    "id": 919,
    "question": "Find the states where both owners and professionals live.",
    "involved_table_count": 2,
    "involved_column_count": 1
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "treatments",
        "columns": [
          "dog_id"
        ]
      },
      {
        "table": "dogs",
        "columns": [
          "dog_id",
          "age"
        ]
      }
    ],
    "gold_sql": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )\tdog_kennels",
    "remarks": "",
    "id": 920,
    "question": "What is the average age of the dogs who have gone through any treatments?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "treatments",
        "columns": [
          "dog_id"
        ]
      },
      {
        "table": "dogs",
        "columns": [
          "dog_id",
          "age"
        ]
      }
    ],
    "gold_sql": "SELECT avg(age) FROM Dogs WHERE dog_id IN ( SELECT dog_id FROM Treatments )\tdog_kennels",
    "remarks": "",
    "id": 921,
    "question": "Find the average age of the dogs who went through treatments.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "professionals",
        "columns": [
          "state",
          "last_name",
          "professional_id",
          "cell_number"
        ]
      },
      {
        "table": "treatments",
        "columns": [
          "professional_id"
        ]
      }
    ],
    "gold_sql": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2\tdog_kennels",
    "remarks": "",
    "id": 922,
    "question": "Which professionals live in the state of Indiana or have done treatment on more than 2 treatments? List his or her id, last name and cell phone.",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "professionals",
        "columns": [
          "state",
          "last_name",
          "professional_id",
          "cell_number"
        ]
      },
      {
        "table": "treatments",
        "columns": [
          "professional_id"
        ]
      }
    ],
    "gold_sql": "SELECT professional_id ,  last_name ,  cell_number FROM Professionals WHERE state  =  'Indiana' UNION SELECT T1.professional_id ,  T1.last_name ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >  2\tdog_kennels",
    "remarks": "",
    "id": 923,
    "question": "Find the id, last name and cell phone of the professionals who live in the state of Indiana or have performed more than two treatments.",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "treatments",
        "columns": [
          "cost_of_treatment",
          "dog_id"
        ]
      },
      {
        "table": "dogs",
        "columns": [
          "name",
          "dog_id"
        ]
      }
    ],
    "gold_sql": "SELECT name FROM Dogs WHERE dog_id NOT IN( SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum(cost_of_treatment)  >  1000 )\tdog_kennels",
    "remarks": "",
    "id": 924,
    "question": "Which dogs have not cost their owner more than 1000 for treatment? List the dog names.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "treatments",
        "columns": [
          "cost_of_treatment",
          "dog_id"
        ]
      },
      {
        "table": "dogs",
        "columns": [
          "name",
          "dog_id"
        ]
      }
    ],
    "gold_sql": "SELECT name FROM Dogs WHERE dog_id NOT IN( SELECT dog_id FROM Treatments GROUP BY dog_id HAVING sum(cost_of_treatment)  >  1000 )\tdog_kennels",
    "remarks": "",
    "id": 925,
    "question": "What are the names of the dogs for which the owner spent more than 1000 for treatment?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "dogs",
        "columns": [
          "name"
        ]
      },
      {
        "table": "professionals",
        "columns": [
          "first_name"
        ]
      },
      {
        "table": "owners",
        "columns": [
          "first_name"
        ]
      }
    ],
    "gold_sql": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs\tdog_kennels",
    "remarks": "",
    "id": 926,
    "question": "Which first names are used for professionals or owners but are not used as dog names?",
    "involved_table_count": 3,
    "involved_column_count": 2
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "dogs",
        "columns": [
          "name"
        ]
      },
      {
        "table": "professionals",
        "columns": [
          "first_name"
        ]
      },
      {
        "table": "owners",
        "columns": [
          "first_name"
        ]
      }
    ],
    "gold_sql": "SELECT first_name FROM Professionals UNION SELECT first_name FROM Owners EXCEPT SELECT name FROM Dogs\tdog_kennels",
    "remarks": "",
    "id": 927,
    "question": "Find the first names that are used for professionals or owners but are not used as dog names.",
    "involved_table_count": 3,
    "involved_column_count": 2
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "professionals",
        "columns": [
          "professional_id",
          "email_address",
          "role_code"
        ]
      },
      {
        "table": "treatments",
        "columns": [
          "professional_id"
        ]
      }
    ],
    "gold_sql": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id\tdog_kennels",
    "remarks": "",
    "id": 928,
    "question": "Which professional did not operate any treatment on dogs? List the professional's id, role and email.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "professionals",
        "columns": [
          "professional_id",
          "email_address",
          "role_code"
        ]
      },
      {
        "table": "treatments",
        "columns": [
          "professional_id"
        ]
      }
    ],
    "gold_sql": "SELECT professional_id ,  role_code ,  email_address FROM Professionals EXCEPT SELECT T1.professional_id ,  T1.role_code ,  T1.email_address FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id\tdog_kennels",
    "remarks": "",
    "id": 929,
    "question": "Give me the id, role and email of the professionals who did not perform any treatment on dogs.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "dogs",
        "columns": [
          "owner_id"
        ]
      },
      {
        "table": "owners",
        "columns": [
          "last_name",
          "owner_id",
          "first_name"
        ]
      }
    ],
    "gold_sql": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1\tdog_kennels",
    "remarks": "",
    "id": 930,
    "question": "Which owner owns the most dogs? List the owner id, first name and last name.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "dogs",
        "columns": [
          "owner_id"
        ]
      },
      {
        "table": "owners",
        "columns": [
          "last_name",
          "owner_id",
          "first_name"
        ]
      }
    ],
    "gold_sql": "SELECT T1.owner_id ,  T2.first_name ,  T2.last_name FROM Dogs AS T1 JOIN Owners AS T2 ON T1.owner_id  =  T2.owner_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1\tdog_kennels",
    "remarks": "",
    "id": 931,
    "question": "Return the owner id, first name and last name of the owner who has the most dogs.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "professionals",
        "columns": [
          "professional_id",
          "first_name",
          "role_code"
        ]
      },
      {
        "table": "treatments",
        "columns": [
          "professional_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2\tdog_kennels",
    "remarks": "",
    "id": 932,
    "question": "Which professionals have done at least two treatments? List the professional's id, role, and first name.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "professionals",
        "columns": [
          "professional_id",
          "first_name",
          "role_code"
        ]
      },
      {
        "table": "treatments",
        "columns": [
          "professional_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.professional_id ,  T1.role_code ,  T1.first_name FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2\tdog_kennels",
    "remarks": "",
    "id": 933,
    "question": "What are the id, role, and first name of the professionals who have performed two or more treatments?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "breeds",
        "columns": [
          "breed_code",
          "breed_name"
        ]
      },
      {
        "table": "dogs",
        "columns": [
          "breed_code"
        ]
      }
    ],
    "gold_sql": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1\tdog_kennels",
    "remarks": "",
    "id": 934,
    "question": "What is the name of the breed with the most dogs?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "breeds",
        "columns": [
          "breed_code",
          "breed_name"
        ]
      },
      {
        "table": "dogs",
        "columns": [
          "breed_code"
        ]
      }
    ],
    "gold_sql": "SELECT T1.breed_name FROM Breeds AS T1 JOIN Dogs AS T2 ON T1.breed_code  =  T2.breed_code GROUP BY T1.breed_name ORDER BY count(*) DESC LIMIT 1\tdog_kennels",
    "remarks": "",
    "id": 935,
    "question": "Which breed do the most dogs have? Give me the breed name.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "owners",
        "columns": [
          "last_name",
          "owner_id"
        ]
      },
      {
        "table": "dogs",
        "columns": [
          "owner_id",
          "dog_id"
        ]
      },
      {
        "table": "treatments",
        "columns": [
          "dog_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1\tdog_kennels",
    "remarks": "",
    "id": 936,
    "question": "Which owner has paid for the most treatments on his or her dogs? List the owner id and last name.",
    "involved_table_count": 3,
    "involved_column_count": 3
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "owners",
        "columns": [
          "last_name",
          "owner_id"
        ]
      },
      {
        "table": "dogs",
        "columns": [
          "owner_id",
          "dog_id"
        ]
      },
      {
        "table": "treatments",
        "columns": [
          "dog_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.owner_id ,  T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY count(*) DESC LIMIT 1\tdog_kennels",
    "remarks": "",
    "id": 937,
    "question": "Tell me the owner id and last name of the owner who spent the most on treatments of his or her dogs.",
    "involved_table_count": 3,
    "involved_column_count": 3
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "treatment_types",
        "columns": [
          "treatment_type_description",
          "treatment_type_code"
        ]
      },
      {
        "table": "treatments",
        "columns": [
          "treatment_type_code"
        ]
      }
    ],
    "gold_sql": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1\tdog_kennels",
    "remarks": "Qualification failed: Column '\"cost_of_treatment\"' could not be resolved.",
    "id": 938,
    "question": "What is the description of the treatment type that costs the least money in total?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "treatment_types",
        "columns": [
          "treatment_type_description",
          "treatment_type_code"
        ]
      },
      {
        "table": "treatments",
        "columns": [
          "treatment_type_code"
        ]
      }
    ],
    "gold_sql": "SELECT T1.treatment_type_description FROM Treatment_types AS T1 JOIN Treatments AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code GROUP BY T1.treatment_type_code ORDER BY sum(cost_of_treatment) ASC LIMIT 1\tdog_kennels",
    "remarks": "Qualification failed: Column '\"cost_of_treatment\"' could not be resolved.",
    "id": 939,
    "question": "Give me the description of the treatment type whose total cost is the lowest.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "owners",
        "columns": [
          "owner_id",
          "zip_code"
        ]
      },
      {
        "table": "dogs",
        "columns": [
          "owner_id",
          "dog_id"
        ]
      },
      {
        "table": "treatments",
        "columns": [
          "cost_of_treatment",
          "dog_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1\tdog_kennels",
    "remarks": "",
    "id": 940,
    "question": "Which owner has paid the largest amount of money in total for their dogs? Show the owner id and zip code.",
    "involved_table_count": 3,
    "involved_column_count": 4
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "owners",
        "columns": [
          "owner_id",
          "zip_code"
        ]
      },
      {
        "table": "dogs",
        "columns": [
          "owner_id",
          "dog_id"
        ]
      },
      {
        "table": "treatments",
        "columns": [
          "cost_of_treatment",
          "dog_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.owner_id ,  T1.zip_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id JOIN Treatments AS T3 ON T2.dog_id  =  T3.dog_id GROUP BY T1.owner_id ORDER BY sum(T3.cost_of_treatment) DESC LIMIT 1\tdog_kennels",
    "remarks": "",
    "id": 941,
    "question": "Find the owner id and zip code of the owner who spent the most money in total for his or her dogs.",
    "involved_table_count": 3,
    "involved_column_count": 4
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "professionals",
        "columns": [
          "professional_id",
          "cell_number"
        ]
      },
      {
        "table": "treatments",
        "columns": [
          "professional_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2\tdog_kennels",
    "remarks": "",
    "id": 942,
    "question": "Which professionals have done at least two types of treatments? List the professional id and cell phone.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "professionals",
        "columns": [
          "professional_id",
          "cell_number"
        ]
      },
      {
        "table": "treatments",
        "columns": [
          "professional_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.professional_id ,  T1.cell_number FROM Professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id GROUP BY T1.professional_id HAVING count(*)  >=  2\tdog_kennels",
    "remarks": "",
    "id": 943,
    "question": "Find the id and cell phone of the professionals who operate two or more types of treatments.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "treatments",
        "columns": [
          "cost_of_treatment"
        ]
      },
      {
        "table": "professionals",
        "columns": [
          "last_name",
          "first_name"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )\tdog_kennels",
    "remarks": "Qualification failed: Column '\"cost_of_treatment\"' could not be resolved.",
    "id": 944,
    "question": "What are the first name and last name of the professionals who have done treatment with cost below average?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "treatments",
        "columns": [
          "cost_of_treatment"
        ]
      },
      {
        "table": "professionals",
        "columns": [
          "last_name",
          "first_name"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT T1.first_name ,  T1.last_name FROM Professionals AS T1 JOIN Treatments AS T2 WHERE cost_of_treatment  <  ( SELECT avg(cost_of_treatment) FROM Treatments )\tdog_kennels",
    "remarks": "Qualification failed: Column '\"cost_of_treatment\"' could not be resolved.",
    "id": 945,
    "question": "Which professionals have operated a treatment that costs less than the average? Give me theor first names and last names.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "treatments",
        "columns": [
          "professional_id",
          "date_of_treatment"
        ]
      },
      {
        "table": "professionals",
        "columns": [
          "professional_id",
          "first_name"
        ]
      }
    ],
    "gold_sql": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id\tdog_kennels",
    "remarks": "",
    "id": 946,
    "question": "List the date of each treatment, together with the first name of the professional who operated it.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "treatments",
        "columns": [
          "professional_id",
          "date_of_treatment"
        ]
      },
      {
        "table": "professionals",
        "columns": [
          "professional_id",
          "first_name"
        ]
      }
    ],
    "gold_sql": "SELECT T1.date_of_treatment ,  T2.first_name FROM Treatments AS T1 JOIN Professionals AS T2 ON T1.professional_id  =  T2.professional_id\tdog_kennels",
    "remarks": "",
    "id": 947,
    "question": "What are the date and the operating professional's first name of each treatment?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "treatments",
        "columns": [
          "cost_of_treatment",
          "treatment_type_code"
        ]
      },
      {
        "table": "treatment_types",
        "columns": [
          "treatment_type_description",
          "treatment_type_code"
        ]
      }
    ],
    "gold_sql": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code\tdog_kennels",
    "remarks": "",
    "id": 948,
    "question": "List the cost of each treatment and the corresponding treatment type description.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "treatments",
        "columns": [
          "cost_of_treatment",
          "treatment_type_code"
        ]
      },
      {
        "table": "treatment_types",
        "columns": [
          "treatment_type_description",
          "treatment_type_code"
        ]
      }
    ],
    "gold_sql": "SELECT T1.cost_of_treatment ,  T2.treatment_type_description FROM Treatments AS T1 JOIN treatment_types AS T2 ON T1.treatment_type_code  =  T2.treatment_type_code\tdog_kennels",
    "remarks": "",
    "id": 949,
    "question": "What are the cost and treatment type description of each treatment?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "owners",
        "columns": [
          "last_name",
          "owner_id",
          "first_name"
        ]
      },
      {
        "table": "dogs",
        "columns": [
          "owner_id",
          "size_code"
        ]
      }
    ],
    "gold_sql": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id\tdog_kennels",
    "remarks": "",
    "id": 950,
    "question": "List each owner's first name, last name, and the size of his for her dog.",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "owners",
        "columns": [
          "last_name",
          "owner_id",
          "first_name"
        ]
      },
      {
        "table": "dogs",
        "columns": [
          "owner_id",
          "size_code"
        ]
      }
    ],
    "gold_sql": "SELECT T1.first_name ,  T1.last_name ,  T2.size_code FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id\tdog_kennels",
    "remarks": "",
    "id": 951,
    "question": "What are each owner's first name, last name, and the size of their dog?",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "owners",
        "columns": [
          "owner_id",
          "first_name"
        ]
      },
      {
        "table": "dogs",
        "columns": [
          "owner_id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id\tdog_kennels",
    "remarks": "",
    "id": 952,
    "question": "List pairs of the owner's first name and the dogs's name.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "owners",
        "columns": [
          "owner_id",
          "first_name"
        ]
      },
      {
        "table": "dogs",
        "columns": [
          "owner_id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id\tdog_kennels",
    "remarks": "",
    "id": 953,
    "question": "What are each owner's first name and their dogs's name?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "dogs",
        "columns": [
          "breed_code",
          "name",
          "dog_id"
        ]
      },
      {
        "table": "treatments",
        "columns": [
          "dog_id",
          "date_of_treatment"
        ]
      }
    ],
    "gold_sql": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )\tdog_kennels",
    "remarks": "",
    "id": 954,
    "question": "List the names of the dogs of the rarest breed and the treatment dates of them.",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "dogs",
        "columns": [
          "breed_code",
          "name",
          "dog_id"
        ]
      },
      {
        "table": "treatments",
        "columns": [
          "dog_id",
          "date_of_treatment"
        ]
      }
    ],
    "gold_sql": "SELECT T1.name ,  T2.date_of_treatment FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id WHERE T1.breed_code  =  ( SELECT breed_code FROM Dogs GROUP BY breed_code ORDER BY count(*) ASC LIMIT 1 )\tdog_kennels",
    "remarks": "",
    "id": 955,
    "question": "Which dogs are of the rarest breed? Show their names and treatment dates.",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "owners",
        "columns": [
          "state",
          "owner_id",
          "first_name"
        ]
      },
      {
        "table": "dogs",
        "columns": [
          "owner_id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'\tdog_kennels",
    "remarks": "",
    "id": 956,
    "question": "Which dogs are owned by someone who lives in Virginia? List the owner's first name and the dog's name.",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "owners",
        "columns": [
          "state",
          "owner_id",
          "first_name"
        ]
      },
      {
        "table": "dogs",
        "columns": [
          "owner_id",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT T1.first_name ,  T2.name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T1.state  =  'Virginia'\tdog_kennels",
    "remarks": "",
    "id": 957,
    "question": "Find the first names of owners living in Virginia and the names of dogs they own.",
    "involved_table_count": 2,
    "involved_column_count": 4
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "dogs",
        "columns": [
          "date_departed",
          "dog_id",
          "date_arrived"
        ]
      },
      {
        "table": "treatments",
        "columns": [
          "dog_id"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id\tdog_kennels",
    "remarks": "",
    "id": 958,
    "question": "What are the arriving date and the departing date of the dogs who have gone through a treatment?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "dogs",
        "columns": [
          "date_departed",
          "dog_id",
          "date_arrived"
        ]
      },
      {
        "table": "treatments",
        "columns": [
          "dog_id"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT T1.date_arrived ,  T1.date_departed FROM Dogs AS T1 JOIN Treatments AS T2 ON T1.dog_id  =  T2.dog_id\tdog_kennels",
    "remarks": "",
    "id": 959,
    "question": "Find the arriving date and the departing date of the dogs that received a treatment.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "dogs",
        "columns": [
          "owner_id",
          "age"
        ]
      },
      {
        "table": "owners",
        "columns": [
          "last_name",
          "owner_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )\tdog_kennels",
    "remarks": "",
    "id": 960,
    "question": "List the last name of the owner owning the youngest dog.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "dogs",
        "columns": [
          "owner_id",
          "age"
        ]
      },
      {
        "table": "owners",
        "columns": [
          "last_name",
          "owner_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.last_name FROM Owners AS T1 JOIN Dogs AS T2 ON T1.owner_id  =  T2.owner_id WHERE T2.age  =  ( SELECT max(age) FROM Dogs )\tdog_kennels",
    "remarks": "",
    "id": 961,
    "question": "Who owns the youngest dog? Give me his or her last name.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "professionals",
        "columns": [
          "state",
          "email_address"
        ]
      }
    ],
    "gold_sql": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'\tdog_kennels",
    "remarks": "",
    "id": 962,
    "question": "List the emails of the professionals who live in the state of Hawaii or the state of Wisconsin.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "professionals",
        "columns": [
          "state",
          "email_address"
        ]
      }
    ],
    "gold_sql": "SELECT email_address FROM Professionals WHERE state  =  'Hawaii' OR state  =  'Wisconsin'\tdog_kennels",
    "remarks": "",
    "id": 963,
    "question": "What are the emails of the professionals living in either the state of Hawaii or the state of Wisconsin?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "dogs",
        "columns": [
          "date_departed",
          "date_arrived"
        ]
      }
    ],
    "gold_sql": "SELECT date_arrived ,  date_departed FROM Dogs\tdog_kennels",
    "remarks": "",
    "id": 964,
    "question": "What are the arriving date and the departing date of all the dogs?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "dogs",
        "columns": [
          "date_departed",
          "date_arrived"
        ]
      }
    ],
    "gold_sql": "SELECT date_arrived ,  date_departed FROM Dogs\tdog_kennels",
    "remarks": "",
    "id": 965,
    "question": "List the arrival date and the departure date for all the dogs.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "treatments",
        "columns": [
          "dog_id"
        ]
      }
    ],
    "gold_sql": "SELECT count(DISTINCT dog_id) FROM Treatments\tdog_kennels",
    "remarks": "",
    "id": 966,
    "question": "How many dogs went through any treatments?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "treatments",
        "columns": [
          "dog_id"
        ]
      }
    ],
    "gold_sql": "SELECT count(DISTINCT dog_id) FROM Treatments\tdog_kennels",
    "remarks": "",
    "id": 967,
    "question": "Count the number of dogs that went through a treatment.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "treatments",
        "columns": [
          "professional_id"
        ]
      }
    ],
    "gold_sql": "SELECT count(DISTINCT professional_id) FROM Treatments\tdog_kennels",
    "remarks": "",
    "id": 968,
    "question": "How many professionals have performed any treatment to dogs?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "treatments",
        "columns": [
          "professional_id"
        ]
      }
    ],
    "gold_sql": "SELECT count(DISTINCT professional_id) FROM Treatments\tdog_kennels",
    "remarks": "",
    "id": 969,
    "question": "Find the number of professionals who have ever treated dogs.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "professionals",
        "columns": [
          "state",
          "city",
          "street",
          "role_code"
        ]
      }
    ],
    "gold_sql": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'\tdog_kennels",
    "remarks": "",
    "id": 970,
    "question": "Which professionals live in a city containing the substring 'West'? List his or her role, street, city and state.",
    "involved_table_count": 1,
    "involved_column_count": 4
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "professionals",
        "columns": [
          "state",
          "city",
          "street",
          "role_code"
        ]
      }
    ],
    "gold_sql": "SELECT role_code ,  street ,  city ,  state FROM professionals WHERE city LIKE '%West%'\tdog_kennels",
    "remarks": "",
    "id": 971,
    "question": "Find the role, street, city and state of the professionals living in a city that contains the substring 'West'.",
    "involved_table_count": 1,
    "involved_column_count": 4
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "owners",
        "columns": [
          "state",
          "last_name",
          "email_address",
          "first_name"
        ]
      }
    ],
    "gold_sql": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'\tdog_kennels",
    "remarks": "",
    "id": 972,
    "question": "Which owners live in the state whose name contains the substring 'North'? List his first name, last name and email.",
    "involved_table_count": 1,
    "involved_column_count": 4
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "owners",
        "columns": [
          "state",
          "last_name",
          "email_address",
          "first_name"
        ]
      }
    ],
    "gold_sql": "SELECT first_name ,  last_name ,  email_address FROM Owners WHERE state LIKE '%North%'\tdog_kennels",
    "remarks": "",
    "id": 973,
    "question": "Return the first name, last name and email of the owners living in a state whose name contains the substring 'North'.",
    "involved_table_count": 1,
    "involved_column_count": 4
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "dogs",
        "columns": [
          "age"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )\tdog_kennels",
    "remarks": "",
    "id": 974,
    "question": "How many dogs have an age below the average?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "dogs",
        "columns": [
          "age"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM Dogs WHERE age  <  ( SELECT avg(age) FROM Dogs )\tdog_kennels",
    "remarks": "",
    "id": 975,
    "question": "Count the number of dogs of an age below the average.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "treatments",
        "columns": [
          "cost_of_treatment",
          "date_of_treatment"
        ]
      }
    ],
    "gold_sql": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1\tdog_kennels",
    "remarks": "",
    "id": 976,
    "question": "How much does the most recent treatment cost?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "treatments",
        "columns": [
          "cost_of_treatment",
          "date_of_treatment"
        ]
      }
    ],
    "gold_sql": "SELECT cost_of_treatment FROM Treatments ORDER BY date_of_treatment DESC LIMIT 1\tdog_kennels",
    "remarks": "",
    "id": 977,
    "question": "Show me the cost of the most recently performed treatment.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "treatments",
        "columns": [
          "dog_id"
        ]
      },
      {
        "table": "dogs",
        "columns": [
          "dog_id"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )\tdog_kennels",
    "remarks": "",
    "id": 978,
    "question": "How many dogs have not gone through any treatment?",
    "involved_table_count": 2,
    "involved_column_count": 1
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "treatments",
        "columns": [
          "dog_id"
        ]
      },
      {
        "table": "dogs",
        "columns": [
          "dog_id"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM Dogs WHERE dog_id NOT IN ( SELECT dog_id FROM Treatments )\tdog_kennels",
    "remarks": "",
    "id": 979,
    "question": "Tell me the number of dogs that have received any treatment.",
    "involved_table_count": 2,
    "involved_column_count": 1
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "dogs",
        "columns": [
          "owner_id"
        ]
      },
      {
        "table": "owners",
        "columns": [
          "owner_id"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )\tdog_kennels",
    "remarks": "",
    "id": 980,
    "question": "How many owners temporarily do not have any dogs?",
    "involved_table_count": 2,
    "involved_column_count": 1
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "dogs",
        "columns": [
          "owner_id"
        ]
      },
      {
        "table": "owners",
        "columns": [
          "owner_id"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM Owners WHERE owner_id NOT IN ( SELECT owner_id FROM Dogs )\tdog_kennels",
    "remarks": "",
    "id": 981,
    "question": "Find the number of owners who do not own any dogs at this moment.",
    "involved_table_count": 2,
    "involved_column_count": 1
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "treatments",
        "columns": [
          "professional_id"
        ]
      },
      {
        "table": "professionals",
        "columns": [
          "professional_id"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )\tdog_kennels",
    "remarks": "",
    "id": 982,
    "question": "How many professionals did not operate any treatment on dogs?",
    "involved_table_count": 2,
    "involved_column_count": 1
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "treatments",
        "columns": [
          "professional_id"
        ]
      },
      {
        "table": "professionals",
        "columns": [
          "professional_id"
        ]
      }
    ],
    "gold_sql": "SELECT count(*) FROM Professionals WHERE professional_id NOT IN ( SELECT professional_id FROM Treatments )\tdog_kennels",
    "remarks": "",
    "id": 983,
    "question": "Find the number of professionals who have not treated any dogs.",
    "involved_table_count": 2,
    "involved_column_count": 1
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "dogs",
        "columns": [
          "abandoned_yn",
          "weight",
          "name",
          "age"
        ]
      }
    ],
    "gold_sql": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1\tdog_kennels",
    "remarks": "",
    "id": 984,
    "question": "List the dog name, age and weight of the dogs who have been abandoned? 1 stands for yes, and 0 stands for no.",
    "involved_table_count": 1,
    "involved_column_count": 4
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "dogs",
        "columns": [
          "abandoned_yn",
          "weight",
          "name",
          "age"
        ]
      }
    ],
    "gold_sql": "SELECT name ,  age ,  weight FROM Dogs WHERE abandoned_yn  =  1\tdog_kennels",
    "remarks": "",
    "id": 985,
    "question": "What are the dog name, age and weight of the dogs that were abandoned? Note that 1 stands for yes, and 0 stands for no in the tables.",
    "involved_table_count": 1,
    "involved_column_count": 4
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "dogs",
        "columns": [
          "age"
        ]
      }
    ],
    "gold_sql": "SELECT avg(age) FROM Dogs\tdog_kennels",
    "remarks": "",
    "id": 986,
    "question": "What is the average age of all the dogs?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "dogs",
        "columns": [
          "age"
        ]
      }
    ],
    "gold_sql": "SELECT avg(age) FROM Dogs\tdog_kennels",
    "remarks": "",
    "id": 987,
    "question": "Compute the average age of all the dogs.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "dogs",
        "columns": [
          "age"
        ]
      }
    ],
    "gold_sql": "SELECT max(age) FROM Dogs\tdog_kennels",
    "remarks": "",
    "id": 988,
    "question": "What is the age of the oldest dog?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "dogs",
        "columns": [
          "age"
        ]
      }
    ],
    "gold_sql": "SELECT max(age) FROM Dogs\tdog_kennels",
    "remarks": "",
    "id": 989,
    "question": "Tell me the age of the oldest dog.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "charges",
        "columns": [
          "charge_type",
          "charge_amount"
        ]
      }
    ],
    "gold_sql": "SELECT charge_type ,  charge_amount FROM Charges\tdog_kennels",
    "remarks": "",
    "id": 990,
    "question": "How much does each charge type costs? List both charge type and amount.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "charges",
        "columns": [
          "charge_type",
          "charge_amount"
        ]
      }
    ],
    "gold_sql": "SELECT charge_type ,  charge_amount FROM Charges\tdog_kennels",
    "remarks": "",
    "id": 991,
    "question": "List each charge type and its amount.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "charges",
        "columns": [
          "charge_amount"
        ]
      }
    ],
    "gold_sql": "SELECT max(charge_amount) FROM Charges\tdog_kennels",
    "remarks": "",
    "id": 992,
    "question": "How much does the most expensive charge type costs?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "charges",
        "columns": [
          "charge_amount"
        ]
      }
    ],
    "gold_sql": "SELECT max(charge_amount) FROM Charges\tdog_kennels",
    "remarks": "",
    "id": 993,
    "question": "What is the charge amount of the most expensive charge type?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "professionals",
        "columns": [
          "home_phone",
          "email_address",
          "cell_number"
        ]
      }
    ],
    "gold_sql": "SELECT email_address ,  cell_number ,  home_phone FROM professionals\tdog_kennels",
    "remarks": "",
    "id": 994,
    "question": "List the email, cell phone and home phone of all the professionals.",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "professionals",
        "columns": [
          "home_phone",
          "email_address",
          "cell_number"
        ]
      }
    ],
    "gold_sql": "SELECT email_address ,  cell_number ,  home_phone FROM professionals\tdog_kennels",
    "remarks": "",
    "id": 995,
    "question": "What are the email, cell phone and home phone of each professional?",
    "involved_table_count": 1,
    "involved_column_count": 3
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "dogs",
        "columns": [
          "breed_code",
          "size_code"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT breed_code ,  size_code FROM dogs\tdog_kennels",
    "remarks": "",
    "id": 996,
    "question": "What are all the possible breed type and size type combinations?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "dogs",
        "columns": [
          "breed_code",
          "size_code"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT breed_code ,  size_code FROM dogs\tdog_kennels",
    "remarks": "",
    "id": 997,
    "question": "Find the distinct breed type and size type combinations for dogs.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "professionals",
        "columns": [
          "professional_id",
          "first_name"
        ]
      },
      {
        "table": "treatments",
        "columns": [
          "professional_id",
          "treatment_type_code"
        ]
      },
      {
        "table": "treatment_types",
        "columns": [
          "treatment_type_description",
          "treatment_type_code"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code\tdog_kennels",
    "remarks": "",
    "id": 998,
    "question": "List the first name of all the professionals along with the description of the treatment they have done.",
    "involved_table_count": 3,
    "involved_column_count": 4
  },
  {
    "database": "dog_kennels",
    "tables": [
      {
        "table": "professionals",
        "columns": [
          "professional_id",
          "first_name"
        ]
      },
      {
        "table": "treatments",
        "columns": [
          "professional_id",
          "treatment_type_code"
        ]
      },
      {
        "table": "treatment_types",
        "columns": [
          "treatment_type_description",
          "treatment_type_code"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT T1.first_name ,  T3.treatment_type_description FROM professionals AS T1 JOIN Treatments AS T2 ON T1.professional_id  =  T2.professional_id JOIN Treatment_types AS T3 ON T2.treatment_type_code  =  T3.treatment_type_code\tdog_kennels",
    "remarks": "",
    "id": 999,
    "question": "What are each professional's first name and description of the treatment they have performed?",
    "involved_table_count": 3,
    "involved_column_count": 4
  },
  {
    "database": "singer",
    "tables": [
      {
        "table": "singer",
        "columns": []
      }
    ],
    "gold_sql": "SELECT count(*) FROM singer\tsinger",
    "remarks": "",
    "id": 1000,
    "question": "How many singers are there?",
    "involved_table_count": 1,
    "involved_column_count": 0
  },
  {
    "database": "singer",
    "tables": [
      {
        "table": "singer",
        "columns": []
      }
    ],
    "gold_sql": "SELECT count(*) FROM singer\tsinger",
    "remarks": "",
    "id": 1001,
    "question": "What is the count of singers?",
    "involved_table_count": 1,
    "involved_column_count": 0
  },
  {
    "database": "singer",
    "tables": [
      {
        "table": "singer",
        "columns": [
          "net_worth_millions",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC\tsinger",
    "remarks": "",
    "id": 1002,
    "question": "List the name of singers in ascending order of net worth.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "singer",
    "tables": [
      {
        "table": "singer",
        "columns": [
          "net_worth_millions",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM singer ORDER BY Net_Worth_Millions ASC\tsinger",
    "remarks": "",
    "id": 1003,
    "question": "What are the names of singers ordered by ascending net worth?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "singer",
    "tables": [
      {
        "table": "singer",
        "columns": [
          "birth_year",
          "citizenship"
        ]
      }
    ],
    "gold_sql": "SELECT Birth_Year ,  Citizenship FROM singer\tsinger",
    "remarks": "",
    "id": 1004,
    "question": "What are the birth year and citizenship of singers?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "singer",
    "tables": [
      {
        "table": "singer",
        "columns": [
          "birth_year",
          "citizenship"
        ]
      }
    ],
    "gold_sql": "SELECT Birth_Year ,  Citizenship FROM singer\tsinger",
    "remarks": "",
    "id": 1005,
    "question": "What are the birth years and citizenships of the singers?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "singer",
    "tables": [
      {
        "table": "singer",
        "columns": [
          "name",
          "citizenship"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM singer WHERE Citizenship != \"France\"\tsinger",
    "remarks": "",
    "id": 1006,
    "question": "List the name of singers whose citizenship is not \"France\".",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "singer",
    "tables": [
      {
        "table": "singer",
        "columns": [
          "name",
          "citizenship"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM singer WHERE Citizenship != \"France\"\tsinger",
    "remarks": "",
    "id": 1007,
    "question": "What are the names of the singers who are not French citizens?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "singer",
    "tables": [
      {
        "table": "singer",
        "columns": [
          "birth_year",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949\tsinger",
    "remarks": "",
    "id": 1008,
    "question": "Show the name of singers whose birth year is either 1948 or 1949?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "singer",
    "tables": [
      {
        "table": "singer",
        "columns": [
          "birth_year",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM singer WHERE Birth_Year  =  1948 OR Birth_Year  =  1949\tsinger",
    "remarks": "",
    "id": 1009,
    "question": "What are the names of the singers whose birth years are either 1948 or 1949?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "singer",
    "tables": [
      {
        "table": "singer",
        "columns": [
          "net_worth_millions",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1\tsinger",
    "remarks": "",
    "id": 1010,
    "question": "What is the name of the singer with the largest net worth?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "singer",
    "tables": [
      {
        "table": "singer",
        "columns": [
          "net_worth_millions",
          "name"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM singer ORDER BY Net_Worth_Millions DESC LIMIT 1\tsinger",
    "remarks": "",
    "id": 1011,
    "question": "What is the name of the singer who is worth the most?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "singer",
    "tables": [
      {
        "table": "singer",
        "columns": [
          "citizenship"
        ]
      }
    ],
    "gold_sql": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship\tsinger",
    "remarks": "",
    "id": 1012,
    "question": "Show different citizenship of singers and the number of singers of each citizenship.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "singer",
    "tables": [
      {
        "table": "singer",
        "columns": [
          "citizenship"
        ]
      }
    ],
    "gold_sql": "SELECT Citizenship ,  COUNT(*) FROM singer GROUP BY Citizenship\tsinger",
    "remarks": "",
    "id": 1013,
    "question": "For each citizenship, how many singers are from that country?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "singer",
    "tables": [
      {
        "table": "singer",
        "columns": [
          "citizenship"
        ]
      }
    ],
    "gold_sql": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1\tsinger",
    "remarks": "",
    "id": 1014,
    "question": "Please show the most common citizenship of singers.",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "singer",
    "tables": [
      {
        "table": "singer",
        "columns": [
          "citizenship"
        ]
      }
    ],
    "gold_sql": "SELECT Citizenship FROM singer GROUP BY Citizenship ORDER BY COUNT(*) DESC LIMIT 1\tsinger",
    "remarks": "",
    "id": 1015,
    "question": "What is the msot common singer citizenship?",
    "involved_table_count": 1,
    "involved_column_count": 1
  },
  {
    "database": "singer",
    "tables": [
      {
        "table": "singer",
        "columns": [
          "net_worth_millions",
          "citizenship"
        ]
      }
    ],
    "gold_sql": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship\tsinger",
    "remarks": "",
    "id": 1016,
    "question": "Show different citizenships and the maximum net worth of singers of each citizenship.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "singer",
    "tables": [
      {
        "table": "singer",
        "columns": [
          "net_worth_millions",
          "citizenship"
        ]
      }
    ],
    "gold_sql": "SELECT Citizenship ,  max(Net_Worth_Millions) FROM singer GROUP BY Citizenship\tsinger",
    "remarks": "",
    "id": 1017,
    "question": "For each citizenship, what is the maximum net worth?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "singer",
    "tables": [
      {
        "table": "singer",
        "columns": [
          "name",
          "singer_id"
        ]
      },
      {
        "table": "song",
        "columns": [
          "title",
          "singer_id"
        ]
      }
    ],
    "gold_sql": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID\tsinger",
    "remarks": "",
    "id": 1018,
    "question": "Show titles of songs and names of singers.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "singer",
    "tables": [
      {
        "table": "singer",
        "columns": [
          "name",
          "singer_id"
        ]
      },
      {
        "table": "song",
        "columns": [
          "title",
          "singer_id"
        ]
      }
    ],
    "gold_sql": "SELECT T2.Title ,  T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID\tsinger",
    "remarks": "",
    "id": 1019,
    "question": "What are the song titles and singer names?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "singer",
    "tables": [
      {
        "table": "singer",
        "columns": [
          "name",
          "singer_id"
        ]
      },
      {
        "table": "song",
        "columns": [
          "sales",
          "singer_id"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000\tsinger",
    "remarks": "",
    "id": 1020,
    "question": "Show distinct names of singers that have songs with sales more than 300000.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "singer",
    "tables": [
      {
        "table": "singer",
        "columns": [
          "name",
          "singer_id"
        ]
      },
      {
        "table": "song",
        "columns": [
          "sales",
          "singer_id"
        ]
      }
    ],
    "gold_sql": "SELECT DISTINCT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID WHERE T2.Sales  >  300000\tsinger",
    "remarks": "",
    "id": 1021,
    "question": "what are the different names of the singers that have sales more than 300000?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "singer",
    "tables": [
      {
        "table": "singer",
        "columns": [
          "name",
          "singer_id"
        ]
      },
      {
        "table": "song",
        "columns": [
          "singer_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1\tsinger",
    "remarks": "",
    "id": 1022,
    "question": "Show the names of singers that have more than one song.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "singer",
    "tables": [
      {
        "table": "singer",
        "columns": [
          "name",
          "singer_id"
        ]
      },
      {
        "table": "song",
        "columns": [
          "singer_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Name FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name HAVING COUNT(*)  >  1\tsinger",
    "remarks": "",
    "id": 1023,
    "question": "What are the names of the singers that have more than one songs?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "singer",
    "tables": [
      {
        "table": "singer",
        "columns": [
          "name",
          "singer_id"
        ]
      },
      {
        "table": "song",
        "columns": [
          "sales",
          "singer_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name\tsinger",
    "remarks": "",
    "id": 1024,
    "question": "Show the names of singers and the total sales of their songs.",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "singer",
    "tables": [
      {
        "table": "singer",
        "columns": [
          "name",
          "singer_id"
        ]
      },
      {
        "table": "song",
        "columns": [
          "sales",
          "singer_id"
        ]
      }
    ],
    "gold_sql": "SELECT T1.Name ,  sum(T2.Sales) FROM singer AS T1 JOIN song AS T2 ON T1.Singer_ID  =  T2.Singer_ID GROUP BY T1.Name\tsinger",
    "remarks": "",
    "id": 1025,
    "question": "For each singer name, what is the total sales for their songs?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "singer",
    "tables": [
      {
        "table": "song",
        "columns": [
          "singer_id"
        ]
      },
      {
        "table": "singer",
        "columns": [
          "name",
          "singer_id"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)\tsinger",
    "remarks": "",
    "id": 1026,
    "question": "List the name of singers that do not have any song.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "singer",
    "tables": [
      {
        "table": "song",
        "columns": [
          "singer_id"
        ]
      },
      {
        "table": "singer",
        "columns": [
          "name",
          "singer_id"
        ]
      }
    ],
    "gold_sql": "SELECT Name FROM singer WHERE Singer_ID NOT IN (SELECT Singer_ID FROM song)\tsinger",
    "remarks": "",
    "id": 1027,
    "question": "What is the sname of every sing that does not have any song?",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "singer",
    "tables": [
      {
        "table": "singer",
        "columns": [
          "birth_year",
          "citizenship"
        ]
      }
    ],
    "gold_sql": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955\tsinger",
    "remarks": "",
    "id": 1028,
    "question": "Show the citizenship shared by singers with birth year before 1945 and after 1955.",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "singer",
    "tables": [
      {
        "table": "singer",
        "columns": [
          "birth_year",
          "citizenship"
        ]
      }
    ],
    "gold_sql": "SELECT Citizenship FROM singer WHERE Birth_Year  <  1945 INTERSECT SELECT Citizenship FROM singer WHERE Birth_Year  >  1955\tsinger",
    "remarks": "",
    "id": 1029,
    "question": "What are the citizenships that are shared by singers with a birth year before 1945 and after 1955?",
    "involved_table_count": 1,
    "involved_column_count": 2
  },
  {
    "database": "real_estate_properties",
    "tables": [
      {
        "table": "other_available_features",
        "columns": []
      }
    ],
    "gold_sql": "SELECT count(*) FROM Other_Available_Features\treal_estate_properties",
    "remarks": "",
    "id": 1030,
    "question": "How many available features are there in total?",
    "involved_table_count": 1,
    "involved_column_count": 0
  },
  {
    "database": "real_estate_properties",
    "tables": [
      {
        "table": "other_available_features",
        "columns": [
          "feature_type_code",
          "feature_name"
        ]
      },
      {
        "table": "ref_feature_types",
        "columns": [
          "feature_type_code",
          "feature_type_name"
        ]
      }
    ],
    "gold_sql": "SELECT T2.feature_type_name FROM Other_Available_Features AS T1 JOIN Ref_Feature_Types AS T2 ON T1.feature_type_code  =  T2.feature_type_code WHERE T1.feature_name  =  \"AirCon\"\treal_estate_properties",
    "remarks": "",
    "id": 1031,
    "question": "What is the feature type name of feature AirCon?",
    "involved_table_count": 2,
    "involved_column_count": 3
  },
  {
    "database": "real_estate_properties",
    "tables": [
      {
        "table": "properties",
        "columns": [
          "property_type_code"
        ]
      },
      {
        "table": "ref_property_types",
        "columns": [
          "property_type_description",
          "property_type_code"
        ]
      }
    ],
    "gold_sql": "SELECT T2.property_type_description FROM Properties AS T1 JOIN Ref_Property_Types AS T2 ON T1.property_type_code  =  T2.property_type_code GROUP BY T1.property_type_code\treal_estate_properties",
    "remarks": "",
    "id": 1032,
    "question": "Show the property type descriptions of properties belonging to that code.",
    "involved_table_count": 2,
    "involved_column_count": 2
  },
  {
    "database": "real_estate_properties",
    "tables": [
      {
        "table": "properties",
        "columns": [
          "property_type_code",
          "property_name",
          "room_count"
        ]
      }
    ],
    "gold_sql": "SELECT property_name FROM Properties WHERE property_type_code  =  \"House\" UNION SELECT property_name FROM Properties WHERE property_type_code  =  \"Apartment\" AND room_count  >  1\treal_estate_properties",
    "remarks": "",
    "id": 1033,
    "question": "What are the names of properties that are either houses or apartments with more than 1 room?",
    "involved_table_count": 1,
    "involved_column_count": 3
  }
]